<?xml version="1.0" encoding="utf-8"?>
<ManagementPack SchemaVersion="2.0" ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Manifest>
    <Identity>
      <ID>QND.OMS.Automation</ID>
      <Version>2.0.0.47</Version>
    </Identity>
    <Name>QND.OMS.Automation</Name>
    <References>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Azure">
        <ID>Microsoft.SystemCenter.MicrosoftAzure</ID>
        <Version>1.3.18.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="QNDA">
        <ID>QND.AzureMPIntegration</ID>
        <Version>2.0.0.37</Version>
        <PublicKeyToken>e5fcf8e8afa3370a</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="QND.OMS.Automation.Account" Base="QNDA!QND.OMS.GenericService" Accessibility="Internal" Abstract="false" Hosted="true" Singleton="false"></ClassType>
        <ClassType ID="QND.OMS.Automation.RunbookGen" Base="QNDA!QND.OMS.GenericResource" Accessibility="Internal" Abstract="false" Hosted="true" Singleton="false">
          <Property ID="RunbookType" Key="false" Type="string" />
        </ClassType>
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="QND.OMS.Automation.AccountHostsRunbook" Accessibility="Internal" Base="System!System.Hosting">
          <Source ID="Account" Type="QND.OMS.Automation.Account" />
          <Target ID="Runbook" Type="QND.OMS.Automation.RunbookGen" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
    <ModuleTypes>
      <DataSourceModuleType ID="QND.OMS.Automation.RunbookStatus.DS" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ClientId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SubscriptionId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Proxy" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AuthBaseAddress" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ResourceBaseAddress" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ResourceURI" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="APIVersion" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Heartbeat" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Tolerance" type="xsd:double" minOccurs="0" maxOccurs="1" default="0.5" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="OnlySJWH" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LookbackDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxRuntimeMinutes" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationSilence" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="Tolerance" ParameterType="double" Selector="$Config/Tolerance$" />
          <OverrideableParameter ID="OnlySJWH" ParameterType="int" Selector="$Config/OnlySJWH$" />
          <OverrideableParameter ID="LookbackDays" ParameterType="int" Selector="$Config/LookbackDays$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="MaxRuntimeMinutes" ParameterType="int" Selector="$Config/MaxRuntimeMinutes$" />
          <OverrideableParameter ID="WebHookExpirationDays" ParameterType="int" Selector="$Config/WebHookExpirationDays$" />
          <OverrideableParameter ID="WebHookExpirationSilence" ParameterType="int" Selector="$Config/WebHookExpirationSilence$" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="Probe" TypeID="QND.OMS.Automation.RunbookStatus.PT">
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <TraceLevel>$Config/TraceLevel$</TraceLevel>
                <ClientId>$Config/ClientId$</ClientId>
                <SubscriptionId>$Config/SubscriptionId$</SubscriptionId>
                <Proxy>$Config/Proxy$</Proxy>
                <AuthBaseAddress>$Config/AuthBaseAddress$</AuthBaseAddress>
                <ResourceBaseAddress>$Config/ResourceBaseAddress$</ResourceBaseAddress>
                <AADUserName>$Config/AADUserName$</AADUserName>
                <AADPassword>$Config/AADPassword$</AADPassword>
                <ResourceURI>$Config/ResourceURI$</ResourceURI>
                <APIVersion>$Config/APIVersion$</APIVersion>
                <Heartbeat>$Config/Heartbeat$</Heartbeat>
                <Tolerance>$Config/Tolerance$</Tolerance>
                <OnlySJWH>$Config/OnlySJWH$</OnlySJWH>
                <LookbackDays>$Config/LookbackDays$</LookbackDays>
                <LastNJobs>$Config/LastNJobs$</LastNJobs>
                <MaxFailures>$Config/MaxFailures$</MaxFailures>
                <FailureCondition>$Config/FailureCondition$</FailureCondition>
                <MaxAgeHours>$Config/MaxAgeHours$</MaxAgeHours>
                <MaxRuntimeMinutes>$Config/MaxRuntimeMinutes$</MaxRuntimeMinutes>
                <WebHookExpirationDays>$Config/WebHookExpirationDays$</WebHookExpirationDays>
                <WebHookExpirationSilence>$Config/WebHookExpirationSilence$</WebHookExpirationSilence>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Probe">
                <Node ID="Scheduler"></Node>
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="QND.OMS.Automation.RunbookStatus.PT" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ClientId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SubscriptionId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Proxy" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AuthBaseAddress" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ResourceBaseAddress" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ResourceURI" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="APIVersion" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Heartbeat" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Tolerance" type="xsd:double" minOccurs="0" maxOccurs="1" default="0.5" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="OnlySJWH" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LookbackDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxRuntimeMinutes" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationSilence" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="Tolerance" ParameterType="double" Selector="$Config/Tolerance$" />
          <OverrideableParameter ID="OnlySJWH" ParameterType="int" Selector="$Config/OnlySJWH$" />
          <OverrideableParameter ID="LookbackDays" ParameterType="int" Selector="$Config/LookbackDays$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="MaxRuntimeMinutes" ParameterType="int" Selector="$Config/MaxRuntimeMinutes$" />
          <OverrideableParameter ID="WebHookExpirationDays" ParameterType="int" Selector="$Config/WebHookExpirationDays$" />
          <OverrideableParameter ID="WebHookExpirationSilence" ParameterType="int" Selector="$Config/WebHookExpirationSilence$" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <ProbeAction ID="POSH" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>Get-OMSRunbookStatus.ps1</ScriptName>
                <ScriptBody>
                  <![CDATA[

#TO SHOW VERBOSE MESSAGES SET $VerbosePreference="continue"
#SET ErrorLevel to 5 so show discovery info
#https://azure.microsoft.com/en-us/documentation/articles/operational-insights-api-log-search/
#*************************************************************************
# Script Name - 
# Author	  -  Daniele Grandini - QND
# Version	  - 1.0 30-04-2016
# Purpose     - 
#               
# Assumptions - 
#				
#               
# Parameters  - TraceLevel
#             - ComputerName
#				- SourceId
#				- ManagedEntityId
# Command Line - .\test.ps1 4 "serverName" '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}' '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}'
# If discovery must be added the followinf parameters
#				SourceId ($ MPElement $ )
#				ManagedEntityId ($ Target/Id $)
#
# Output properties
#
# Status
#
# Version History
#	  1.0 06.08.2010 DG First Release
#     1.5 15.02.2014 DG minor cosmetics
#
# (c) Copyright 2010, Progel srl, All Rights Reserved
# Proprietary and confidential to Progel srl              
#
#*************************************************************************


# Get the named parameters
param([int]$traceLevel=2,
[Parameter (Mandatory=$true)][string]$clientId,
[Parameter (Mandatory=$true)][string]$SubscriptionId,
[string]$Proxy,
[Parameter (Mandatory=$true)][string]$AuthBaseAddress,
[Parameter (Mandatory=$true)][string]$ResourceBaseAddress,
[Parameter (Mandatory=$true)][string]$ADUserName,
[Parameter (Mandatory=$true)][string]$ADPassword,
[Parameter (Mandatory=$true)][string]$resourceURI,
[string]$APIVersion='2015-10-31',
[Parameter (Mandatory=$false)][int]$Heartbeat=1,
[Parameter (Mandatory=$false)] [int]$timeoutSeconds=300,

    [Parameter (Mandatory=$false)] [double]$tolerance=0.5,
    [Parameter (Mandatory=$false)] [int]$onlySJWH=1,
    [Parameter (Mandatory=$false)] [int]$lookbackDays=-45,
	[Parameter (Mandatory=$false)] [int]$LastnJobs=5,
	[Parameter (Mandatory=$false)] [int]$MaxFailures=0,
	[Parameter (Mandatory=$false)] [String]$FailureCondition='^[failed]$',
	[Parameter (Mandatory=$false)] [int]$MaxAge=-1,
	[Parameter (Mandatory=$false)] [int]$MaxRuntime=-1,
	[Parameter (Mandatory=$false)] [int]$WebHookExpirationDays=-1,
	[Parameter (Mandatory=$false)] [int]$WebHookExpirationSilence=30


)

 
	[Threading.Thread]::CurrentThread.CurrentCulture = "en-US"        
    [Threading.Thread]::CurrentThread.CurrentUICulture = "en-US"

#region Constants	
#Constants used for event logging
$SCRIPT_NAME			= "Get-OMSRunbookStatus"
$SCRIPT_VERSION = "1.0"

#Trace Level Costants
$TRACE_NONE 	= 0
$TRACE_ERROR 	= 1
$TRACE_WARNING = 2
$TRACE_INFO 	= 3
$TRACE_VERBOSE = 4
$TRACE_DEBUG = 5

#Event Type Constants
$EVENT_TYPE_SUCCESS      = 0
$EVENT_TYPE_ERROR        = 1
$EVENT_TYPE_WARNING      = 2
$EVENT_TYPE_INFORMATION  = 4
$EVENT_TYPE_AUDITSUCCESS = 8
$EVENT_TYPE_AUDITFAILURE = 16

#Standard Event IDs
$FAILURE_EVENT_ID = 4000		#errore generico nello script
$SUCCESS_EVENT_ID = 1101
$START_EVENT_ID = 1102
$STOP_EVENT_ID = 1103

#TypedPropertyBag
$AlertDataType = 0
$EventDataType	= 2
$PerformanceDataType = 2
$StateDataType       = 3

$EventSource = 'Progel Script'
$EventLog= 'Operations Manager'
#endregion

#region Logging

if ([System.Diagnostics.EventLog]::SourceExists($EventSource) -eq $false) {
    [System.Diagnostics.EventLog]::CreateEventSource($EventSource, $eventlog)
}

function Log-Params
{
    param($Invocation)
    $line=''
    foreach($key in $Invocation.BoundParameters.Keys) {$line += "$key=$($Invocation.BoundParameters[$key])  "}
	Log-Event $START_EVENT_ID $EVENT_TYPE_INFORMATION  ("Starting script. Invocation Name:$($Invocation.InvocationName)`n Parameters`n $line") $TRACE_INFO
}

function Create-Event
  {
    param(
    [int] $eventID, 
    [int] $eventType,
    [string] $msg,
    [string[]] $parameters)

    switch ($eventType) {
        $EVENT_TYPE_SUCCESS {$nativeType=[System.Diagnostics.EventLogEntryType]::Information}
        $EVENT_TYPE_ERROR {$nativeType=[System.Diagnostics.EventLogEntryType]::Error}
        $EVENT_TYPE_WARNING {$nativeType=[System.Diagnostics.EventLogEntryType]::Warning}
        $EVENT_TYPE_INFORMATION {$nativeType=[System.Diagnostics.EventLogEntryType]::Information}
        $EVENT_TYPE_AUDITSUCCESS {$nativeType=[System.Diagnostics.EventLogEntryType]::AuditSuccess}
        $EVENT_TYPE_AUDITFAILURE {$nativeType=[System.Diagnostics.EventLogEntryType]::AuditFailure}
        default {
            Write-Verbose 'match?'
            $nativeType=[System.Diagnostics.EventLogEntryType]::Information
        }
    }
    $event = New-Object System.Diagnostics.EventInstance($eventID,1,$nativeType)

    $evtObject = New-Object System.Diagnostics.EventLog;
    $evtObject.Log = $EventLog;
    $evtObject.Source = $EventSource;
    $parameters = @($msg) + $parameters
    $evtObject.WriteEvent($event, $parameters)
  }


function Log-Event
{
	param($eventID, $eventType, $msg, $level)
	
	Write-Verbose ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
	if($level -le $P_TraceLevel)
	{
		Write-Host ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
        Create-Event -eventID $eventID -eventType $eventType -msg ($msg + "`n" + "Version :" + $SCRIPT_VERSION) -parameters @($SCRIPT_NAME,$SCRIPT_VERSION)
		#$g_API.LogScriptEvent($SCRIPT_NAME,$eventID,$eventType, ($msg + "`n" + "Version :" + $SCRIPT_VERSION))
	}
}
#endregion

#region Discovery Helpers
Function Throw-EmptyDiscovery
{
	param($SourceId, $ManagedEntityId)

	$oDiscoveryData = $g_API.CreateDiscoveryData(0, $SourceId, $ManagedEntityId)
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING "Exiting with empty discovery data" $TRACE_INFO
	$oDiscoveryData
	If($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent
		$g_API.Return($oDiscoveryData)
	}
}

Function Throw-KeepDiscoveryInfo
{
param($SourceId, $ManagedEntityId)
	$oDiscoveryData = $g_API.CreateDiscoveryData(0,$SourceId,$ManagedEntityId)
	#Instead of Snapshot discovery, submit Incremental discovery data
	$oDiscoveryData.IsSnapshot = $false
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING "Exiting with null non snapshot discovery data" $TRACE_INFO
	$oDiscoveryData    
	If($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent	
		$g_API.Return($oDiscoveryData)
	}
}

#endregion

Function Format-Time
{
	[OutputType([String])]
	param($utcTime)


	$fTime=$utcTime.ToString('yyyy-MM-dd hh:mm:ss tt')
	#don't know why tt doens't work
	#quick fix without reverting to -net framework formatting
	if($fTime.IndexOf('M') -eq -1) {
		if ($utcTime.Hour -lt 13) {$fTime+= 'AM'} else {$fTime += 'PM'}
	}
	return $fTime
}

Function Get-AutomationItems
{
param(
	$uris, $connection
)

	$items=@()
	foreach($uri in $uris) {
		$nextLink=$null
		Log-Event $SUCCESS_EVENT_ID $EVENT_TYPE_SUCCESS ("Getting items $uri") $TRACE_VERBOSE
		do {
			$result = invoke-QNDAzureRestRequest -uri $uri -httpVerb GET -authToken $connection -nextLink $nextLink -TimeoutSeconds $timeoutSeconds
			$nextLink = $result.NextLink
			if($result.gotValue) {$items+=$result.Values}
            #hacking some unwanted chars
            if($nextLink) {$nextLink=$nextLink.Replace('+','%2B')}
		} while ($nextLink)
	}
	return $items
}

Function Return-Bag
{
    param($object, $key)
    try {    
		$bag = $g_api.CreatePropertyBag()
        foreach($property in $object.Keys) {
		    $bag.AddValue($property, $object[$property])
        }
        $bag

		if($traceLevel -eq $TRACE_DEBUG) {
			$g_API.AddItem($bag)
			$object.Keys | %{write-verbose ('{0}={1}' -f $_,$object[$_]) -Verbose}
		}
		

		Log-Event -eventID $SUCCESS_EVENT_ID -eventType $EVENT_TYPE_INFORMATION `
			-msg ('{0} - returned status bag ' `
				-f $object[$key]) `
			-level $TRACE_VERBOSE 
    }
    catch {
		Log-Event -eventID $FAILURE_EVENT_ID -eventType $EVENT_TYPE_WARNING `
			-msg ('{0} - error creating status bag {1}' `
				-f $object[$key]), $_.Message `
			-level $TRACE_VERBOSE 
    }
}


#region Common
Function Import-ResourceModule
{
	param($moduleName, $ArgumentList=$null)
	if (Get-Module -Name $moduleName) {return}

	$moduleName = '{0}.psm1' -f $moduleName
	$ResPath = (get-itemproperty -path 'HKLM:\system\currentcontrolset\services\healthservice\Parameters' -Name 'State Directory').'State Directory' + '\Resources'
	if(Test-Path $ResPath) {
		$module = @(get-childitem -path $ResPath -Filter $moduleName -Recurse)[0]
	}
	if($module) { $module = $module.FullName}
	else {$module = "$PSScriptRoot\$moduleName"}

	If (Test-Path $module) {Import-Module -Name $module -ArgumentList $ArgumentList}
	else {Throw [System.DllNotFoundException] ('{0} not found' -f $module)}
}

#Start by setting up API object.
	$P_TraceLevel = $TRACE_VERBOSE
	$g_Api = New-Object -comObject 'MOM.ScriptAPI'
	#$g_RegistryStatePath = "HKLM\" + $g_API.GetScriptStateKeyPath($SCRIPT_NAME)

	$dtStart = Get-Date
	$P_TraceLevel = $traceLevel
	Log-Params $MyInvocation

	try {
		Import-ResourceModule -moduleName QNDAdal -ArgumentList @($false)
		Import-ResourceModule -moduleName QNDAzure
	}
	catch {
		Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Cannot load required powershell modules $Error") $TRACE_ERROR
		exit 1	
	}

try
{
	if($proxy) {
		Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ("Proxy is not currently supported {0}" -f $proxy) $TRACE_WARNING
	}
	$pwd = ConvertTo-SecureString $ADPassword -AsPlainText -Force
	$cred = New-Object System.Management.Automation.PSCredential ($ADUserName, $pwd)
	$authority = Get-AdalAuthentication -resourceURI $resourcebaseAddress -authority $authBaseAddress -clientId $clientId -credential $cred
	$connection = $authority.CreateAuthorizationHeader()
}
catch {
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Cannot get Azure AD connection aborting $Error") $TRACE_ERROR
	Throw-KeepDiscoveryInfo
	exit 1	
}
#endregion

try {



	$uris =@(('{0}{1}/runbooks?api-version={2}' -f $ResourceBaseAddress,$resourceURI,$apiVersion))
	$runBooks = Get-AutomationItems -uris $uris -connection $connection

<#
#    {
#      "id": "/subscriptions/ec2b2ab8-ba74-41a0-bf54-39cc0716f414/resourceGroups/OaaSCSHRWRPZB6GXQVDR3MZN4LZ2ID5KGAHA3HNK26JFKSEGZK7HOMRALQ-West-Europe/providers/
#Microsoft.Automation/automationAccounts/PreLabsAutoWE/runbooks/Tagetik-InfraAzure",
#      "location": "West Europe",
#      "name": "Tagetik-InfraAzure",
#      "type": "Microsoft.Automation/AutomationAccounts/Runbooks",
#      "properties": {
#        "runbookType": "Script",
#        "state": "Edit",
#        "logVerbose": false,
#        "logProgress": false,
#        "logActivityTrace": 1,
#        "creationTime": "2015-08-29T15:52:24.5+02:00",
#        "lastModifiedTime": "2015-09-03T12:01:35.25+02:00"
#      }
#    },
#>

    $uris=@(
        ('{0}{1}/webhooks?api-version={2}' -f $ResourceBaseAddress,$resourceURI,$apiVersion)
    )
    $webhooks = (Get-AutomationItems -uris $uris -connection $connection) | where {$_.properties.IsEnabled}


 <#   {
 #     "id": "/subscriptions/ec2b2ab8-ba74-41a0-bf54-39cc0716f414/resourceGroups/OaaSCSHRWRPZB6GXQVDR3MZN4LZ2ID5KGAHA3HNK26JFKSEGZK7HOMRALQ-West-Europe/providers/
#Microsoft.Automation/automationAccounts/PreLabsAutoWE/webhooks/OMS Alert Remediation d94e6e0c-99e5-48f7-9997-b5855b288a82",
#      "name": "OMS Alert Remediation d94e6e0c-99e5-48f7-9997-b5855b288a82",
#      "properties": {
#        "isEnabled": true,
#        "expiryTime": "2018-05-25T05:08:56.0134739+02:00",
#        "runbook": {
#          "name": "Reset-OMSMS"
#        },
#        "lastInvokedTime": null,
#        "runOn": "PreLabsWorkers",
#        "parameters": null,
#        "uri": null,
#        "creationTime": "2016-05-25T05:08:58.6688419+02:00",
#        "lastModifiedBy": "",
#        "lastModifiedTime": "2016-05-25T05:08:58.6688419+02:00"
#      }
#    }
#>

    $uris=@(
        ('{0}{1}/schedules?api-version={2}' -f $ResourceBaseAddress,$resourceURI,$apiVersion)
    )
    $schedules = (Get-AutomationItems -uris $uris -connection $connection) | where {$_.properties.frequency -ine 'OneTime' -and $_.properties.isEnabled}
    
    [array] $validSchedules=@()
    foreach($s in $schedules) {
        if ($s.properties.expiryTime.Substring(0,4) -eq '9999') {$validSchedules+=$s.Name; continue}
        if ([datetime]$s.properties.expiryTime -gt (Get-Date)) {$validSchedules+=$s.Name; continue}
        #$schedules.Remove($s)
    }

    write-verbose ('Got {0} schedules, valid {1}' -f $schedules.count, $validSchedules.Count)
<#
Comment text...
Body:
{
  "value": [
    {
      "id": "/subscriptions/ec2b2ab8-ba74-41a0-bf54-39cc0716f414/resourceGroups/OaaSCSHRWRPZB6GXQVDR3MZN4LZ2ID5KGAHA3HNK26JFKSEGZK7HOMRALQ-West-Europe/providers/
Microsoft.Automation/automationAccounts/PreLabsAutoWE/schedules/Test Schedule Expired",
      "name": "Test Schedule Expired",
      "properties": {
        "description": "",
        "startTime": "2016-05-28T19:15:00+02:00",
        "startTimeOffsetMinutes": 0.0,
        "expiryTime": "2017-05-28T19:15:00+02:00",
        "expiryTimeOffsetMinutes": 0.0,
        "isEnabled": true,
        "interval": 1,
        "frequency": "Hour",
        "creationTime": "2016-05-28T19:08:02.977+02:00",
        "lastModifiedTime": "2016-05-28T19:08:02.977+02:00",
        "nextRun": "2016-05-28T20:15:00+02:00",
        "nextRunOffsetMinutes": 0.0,
        "timeZone": "UTC"
      }
    },
    {
      "id": "/subscriptions/ec2b2ab8-ba74-41a0-bf54-39cc0716f414/resourceGroups/OaaSCSHRWRPZB6GXQVDR3MZN4LZ2ID5KGAHA3HNK26JFKSEGZK7HOMRALQ-West-Europe/providers/
Microsoft.Automation/automationAccounts/PreLabsAutoWE/schedules/Test Schedule Monthly",
      "name": "Test Schedule Monthly",
      "properties": {
        "description": "",
        "startTime": "2016-05-30T19:38:00+02:00",
        "startTimeOffsetMinutes": 0.0,
        "expiryTime": "9999-12-31T23:59:59.9999999+01:00",
        "expiryTimeOffsetMinutes": 0.0,
        "isEnabled": true,
        "interval": 1,
        "frequency": "Month",
        "creationTime": "2016-05-28T19:09:29.547+02:00",
        "lastModifiedTime": "2016-05-28T19:09:29.547+02:00",
        "nextRun": "2016-06-10T19:38:00+02:00",
        "nextRunOffsetMinutes": 0.0,
        "timeZone": "UTC"
      }
    },
    {
      "id": "/subscriptions/ec2b2ab8-ba74-41a0-bf54-39cc0716f414/resourceGroups/OaaSCSHRWRPZB6GXQVDR3MZN4LZ2ID5KGAHA3HNK26JFKSEGZK7HOMRALQ-West-Europe/providers/
Microsoft.Automation/automationAccounts/PreLabsAutoWE/schedules/Test Schedule Once",
      "name": "Test Schedule Once",
      "properties": {
        "description": "",
        "startTime": "2016-05-31T19:36:00+02:00",
        "startTimeOffsetMinutes": 0.0,
        "expiryTime": "2016-05-31T19:36:00+02:00",
        "expiryTimeOffsetMinutes": 0.0,
        "isEnabled": true,
        "interval": null,
        "frequency": "OneTime",
        "creationTime": "2016-05-28T19:06:46.13+02:00",
        "lastModifiedTime": "2016-05-28T19:06:46.13+02:00",
        "nextRun": "2016-05-31T19:36:00+02:00",
        "nextRunOffsetMinutes": 0.0,
        "timeZone": "UTC"
      }
    },
    {
      "id": "/subscriptions/ec2b2ab8-ba74-41a0-bf54-39cc0716f414/resourceGroups/OaaSCSHRWRPZB6GXQVDR3MZN4LZ2ID5KGAHA3HNK26JFKSEGZK7HOMRALQ-West-Europe/providers/
Microsoft.Automation/automationAccounts/PreLabsAutoWE/schedules/TestSchedule1",
      "name": "TestSchedule1",
      "properties": {
        "description": "",
        "startTime": "2016-05-28T19:35:00+02:00",
        "startTimeOffsetMinutes": 0.0,
        "expiryTime": "9999-12-31T23:59:59.9999999+01:00",
        "expiryTimeOffsetMinutes": 0.0,
        "isEnabled": true,
        "interval": 1,
        "frequency": "Hour",
        "creationTime": "2016-05-28T19:05:50.567+02:00",
        "lastModifiedTime": "2016-05-28T19:05:50.567+02:00",
        "nextRun": "2016-05-28T19:35:00+02:00",
        "nextRunOffsetMinutes": 0.0,
        "timeZone": "UTC"
      }
    }
  ]
}
 
#>

    $uris=@(
        ('{0}{1}/jobSchedules?api-version={2}' -f $ResourceBaseAddress,$resourceURI,$apiVersion)
    )


    #remove OneTime schedules aka keep valid schedules
    $jobSchedules = (Get-AutomationItems -uris $uris -connection $connection) | where {$_.properties.schedule.name -iin $validSchedules}
    write-verbose ('Got {0} schedules for jobs' -f $jobSchedules.count)

    $jobSchedules | %{write-verbose $_.properties}
<#      "id": "/subscriptions/ec2b2ab8-ba74-41a0-bf54-39cc0716f414/resourceGroups/OaaSCSHRWRPZB6GXQVDR3MZN4LZ2ID5KGAHA3HNK26JFKSEGZK7HOMRALQ-West-Europe/providers/
#Microsoft.Automation/automationAccounts/PreLabsAutoWE/jobSchedules/db7ab745-cb2e-4c7d-9299-24f42b274cd3",
#      "properties": {
#        "jobScheduleId": "db7ab745-cb2e-4c7d-9299-24f42b274cd3",
#        "runbook": {
#          "name": "SIDOnline-Step1"
#        },
#        "schedule": {
#          "name": "Test Schedule Expired"
#        },
#        "runOn": null,
#        "parameters": null
#      }
#    },
#>


    write-verbose ('About to process {0} runbooks' -f $runbooks.count)

    foreach($rb in $runbooks) {
        write-verbose ('Processing {0}' -f $rb.name)
        try {
        $wh = $webhooks | where {$_.properties.runbook.name -eq $rb.name}
        $jsch = $jobSchedules | where {$_.properties.runbook.name -ieq $rb.name}
        if($jsch) {
            write-verbose 'Runbook has schedules'
            $sch=@()
            foreach($js in $jsch) {
                $sch += $schedules | where {$_.name -eq $js.properties.schedule.name}
            }
        }
        if($onlySJWH -and !$wh -and !$jsch) {continue}
        write-verbose ('Runbook {0} has webhook or valid schedule' -f $rb.name)
        [double]$autoAge=24*30 #24 H * 30 days
<#
Request body for weekly: 
{
“name”: “ScheduleName”
“properties”: {
“description”: “”,
“startTime”: “2016-05-17T02:01:49.755565Z”,
“interval”: 1,
“frequency”: “Week”,
“timeZone”: “UTC”,
“advancedSchedule”: {
“weekDays”:[“Tuesday”]
}
}
}
Month days: 
{
“name”: “ScheduleName”
“properties”: {
“description”: “”,
“startTime”: “2016-05-17T02:01:49.755565Z”,
“interval”: 1,
“frequency”: “Month”,
“timeZone”: “UTC”,
“advancedSchedule”: {
“monthDays”:[1, 2, 4]
}
}
}
Month week day occurrence: 
{
“name”: “ScheduleName”
“properties”: {
“description”: “”,
“startTime”: “2016-05-17T02:01:49.755565Z”,
“interval”: 1,
“frequency”: “Month”,
“timeZone”: “UTC”,
“advancedSchedule”: {
“monthlyOccurences”:[
{
“occurrence”: 2, 
“day”: “Friday”
}
]
}
}
}

#>
        if($jsch) {
            #we can have multiple schedules so let's try to get the stricter one            
            foreach($s in $sch) {
                switch ($s.properties.frequency) {
                'Hour' {if($autoAge -gt $s.properties.interval) {$autoAge=$s.properties.interval}}
				'Day' {if($autoAge -gt $s.properties.interval*24) {$autoAge=$s.properties.interval*24}}
				'Week' {
					$worstCase = 7
					if($s.properties.advancedSchedule.weekDays) {
						$worstCase = 8 - $s.properties.advancedSchedule.weekDays.Count
					}
					if($autoAge -gt $s.properties.interval*$worstCase*24) {$autoAge=$s.properties.interval*$worstCase*24}
				}
                'Month' {
					$worstCase=30
					if($s.properties.advancedSchedule.monthDays) {
						$worstCase = 31 - $s.properties.advancedSchedule.monthDays.Count
					}
					if($s.properties.advancedSchedule.monthlyOccurences) {
						$worstCase = 31 - $s.properties.advancedSchedule.monthlyOccurences.Count
					}
					if($autoAge -gt $s.properties.interval*$worstCase*24) {$autoAge=$s.properties.interval*$worstCase*24}
				}
                default {
                    Log-Event -eventID $SUCCESS_EVENT_ID -eventType $EVENT_TYPE_WARNING `
				    -msg ('Unknown schedule frequency {0}' `
					    -f $s.properties.frequency) `
				    -level $TRACE_WARNING }
                }
            }
            $autoAge=$autoage*(1+$tolerance)
        }
        if ($lookbackDays -gt 0) {$from = (Get-Date).ToUniversalTime().AddDays(-$LookbackDays).GetDateTimeFormats('s')[0]}
        else {$from = (Get-Date).ToUniversalTime().AddHours(-$AutoAge*$LastnJobs).GetDateTimeFormats('s')[0]}
        $to = (Get-Date).ToUniversalTime().GetDateTimeFormats('s')[0]
	    
        write-verbose ('From {0} to {1}' -f $from, $to)

	    $uris=@(
		    ('{0}{1}/jobs?api-version={2}&$filter=properties/startTime ge {3}%2B00:00 and properties/endTime le {4}%2B00:00 and properties/runbook/name eq ''{5}''' -f $ResourceBaseAddress,$resourceURI,$APIVersion, $from, $to, $rb.name)
	    )
        $jobs = Get-AutomationItems -uris $uris -connection $connection | sort-object @{Expression={[datetime]$_.properties.startTime};Descending=$true}
        $lastJobs = $jobs | Select-Object -First $LastnJobs
        $failures = ($lastJobs | where {$_.properties.status -imatch $failureCondition}).count
        $lastCompletedJob=0
        
        write-verbose ('Got {0} jobs, selected {1} jobs' -f $jobs.count, $lastJobs.Count)
        if ($jobs.count -eq 0) {
            $runtimeMin=0
            $lastRuntimeMin=0
            $lastRunAgeHours=-1
            $activationTimeSec=0
            $runtimeError=$false
            $lastJobStatus='unknown'
            Log-Event -eventID $SUCCESS_EVENT_ID -eventType $EVENT_TYPE_WARNING `
			-msg ('No jobs returned for {0}' `
				-f $rb.name) `
			-level $TRACE_WARNING 
        }
        else {
            $lastRunAgeHours=0
            write-verbose ('Job Endtime {0}' -f $lastJobs[0].properties.endTime)
            if(! $lastJobs[0].properties.endTime -or [datetime]$lastJobs[0].properties.endTime -gt (Get-Date)) {$lastCompletedJob=1;write-verbose 'Last job still running'}
            try {
                $lastJobStatus=$lastJobs[$lastCompletedJob].properties.status
                $runtimeMin = ([datetime]$lastJobs[$lastCompletedJob].properties.endTime - [datetime]$lastJobs[$lastCompletedJob].properties.startTime).TotalMinutes
                if ($lastCompletedJob -ne 0) {
                    $lastRuntimeMin = ((Get-Date)- [datetime]$lastJobs[$lastCompletedJob].properties.startTime).TotalMinutes
                    $lastRunAgeHours=0
                }
                else {
                    $lastRuntimeMin=$runtimeMin
                    $lastRunAgeHours = ((Get-Date) - [datetime]$lastJobs[0].properties.endTime).TotalHours
                }
                $activationTimeSec =([datetime] $lastJobs[$lastCompletedJob].properties.startTime - [datetime]$lastJobs[$lastCompletedJob].properties.creationTime).TotalSeconds      
                $longRunning=0
                if($MaxRuntime -gt -1) {if ($lastRuntimeMin -gt $MaxRuntime) {$longRunning=1}}       
            }
            catch {
			    Log-Event -eventID $SUCCESS_EVENT_ID -eventType $EVENT_TYPE_WARNING `
				    -msg ('Error getting execution time for runbook {0}' `
					    -f $rb.Name) `
				    -level $TRACE_WARNING             
            }
        }
        $obsolete=0
		$calcMaxAge=$MaxAge
        if($jsch) {
            if ($calcMaxAge -le 0 ) {$calcMaxAge=$autoAge}
            if($lastRunAgeHours -gt $calcMaxAge) {$obsolete=1}
            else {$obsolete=0}
        }
        $webHookStatus='OK'
        $daysToExpiration=365
        if($WebHookExpirationDays -gt -1) {
            foreach($w in $wh) {
			    $daysToExpiration = ([datetime]($w.properties.ExpiryTime) - (Get-Date)).TotalDays
                if ($daysToExpiration -gt (-$WebHookExpirationSilence)) {continue;} #skip old ones
                if ($daysToExpiration -le 0) {$webHookStatus='EXPIRED';break;}
			    if($daysToExpiration -le $WebHookExpirationDays) {$WebHookStatus='EXPIRESOON'}            
            }
        }
        $output=@{
            runbookId=$rb.Id;
            runbookName=$rb.Name;
            runbookType=$rb.properties.runbookType;
            lastJobStatus=$lastJobStatus;
            jobFailures=$failures;
            lastCompletedRuntimeMin=$runtimeMin;
            maxRuntime=$MaxRuntime;
            lastRuntimeMin=$lastRuntimeMin;
            lastRunAgeHours=$lastRunAgeHours;
            lastActivationTimeSec=$activationTimeSec;
            webHookStatus=$webHookStatus;
            webHookDaysToExpiration=$daysToExpiration;
            lastRunObsolete=$obsolete;
            maxAge=$calcMaxAge;
            longRunning=$longRunning;
            autoAge=$autoAge;
            lastnJobs=$LastnJobs;
            maxFailures=$MaxFailures
        }
        #ConvertTo-Json $output
        Return-Bag -object $output -key runbookName
        }
        catch {
            Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ('Error getting stats for item {0} - {1}' -f $Item.Name, $Error[0]) $TRACE_WARNING	
            write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
            Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
            continue;
        }
    }

    if($heartBeat) {
    write-verbose 'heartbeat'
	    Create-Event -eventID $heartBeat -eventType $EVENT_TYPE_INFORMATION -level -1 -msg $SCRIPT_NAME -parameters @($resourceURI)
    }

	If ($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent	
		#it breaks in exception when run insde OpsMgr and POSH IDE	
		$g_API.ReturnItems() 
	}
	Log-Event $STOP_EVENT_ID $EVENT_TYPE_INFORMATION ("has completed successfully in " + ((Get-Date)- ($dtstart)).TotalSeconds + " seconds.") $TRACE_INFO
}
Catch [Exception] {
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ("Main " + $Error) $TRACE_WARNING	
	write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
}

]]>
                </ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>TraceLevel</Name>
                    <Value>$Config/TraceLevel$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>clientId</Name>
                    <Value>$Config/ClientId$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>SubscriptionId</Name>
                    <Value>$Config/SubscriptionId$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Proxy</Name>
                    <Value>$Config/Proxy$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>AuthBaseAddress</Name>
                    <Value>$Config/AuthBaseAddress$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ResourceBaseAddress</Name>
                    <Value>$Config/ResourceBaseAddress$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ADUsername</Name>
                    <Value>$Config/AADUserName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ADPassword</Name>
                    <Value>$Config/AADPassword$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>resourceURI</Name>
                    <Value>$Config/ResourceURI$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>APIVersion</Name>
                    <Value>$Config/APIVersion$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Heartbeat</Name>
                    <Value>$Config/Heartbeat$</Value>
                  </Parameter>
                  <Parameter>
                    <!-- this would need a separate parameter-->
                    <Name>TimeoutSeconds</Name>
                    <Value>$Config/TimeoutSeconds$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Tolerance</Name>
                    <Value>$Config/Tolerance$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>onlySJWH</Name>
                    <Value>$Config/OnlySJWH$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>LookbackDays</Name>
                    <Value>$Config/LookbackDays$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>LastNJobs</Name>
                    <Value>$Config/LastNJobs$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>MaxFailures</Name>
                    <Value>$Config/MaxFailures$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>FailureCondition</Name>
                    <Value>$Config/FailureCondition$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>MaxAge</Name>
                    <Value>$Config/MaxAgeHours$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>MaxRuntime</Name>
                    <Value>$Config/MaxRuntimeMinutes$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>WebHookExpirationDays</Name>
                    <Value>$Config/WebHookExpirationDays$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>WebHookExpirationSilence</Name>
                    <Value>$Config/WebHookExpirationSilence$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <StrictErrorHandling>false</StrictErrorHandling>
                <!-- true only for Tasks -->
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="POSH" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <InputType>System!System.BaseData</InputType>
      </ProbeActionModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="QND.OMS.Automation.RunbookStatus2StateCooked.MT" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="Greater" />
          <MonitorTypeState ID="LessEqual" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <!-- I'm lazy and don't want to copy and paste the same monitor type so let's do some redundancy at the parameter level -->
          <xsd:element name="Property" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxThreshold" type="xsd:double" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RunbookId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ClientId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SubscriptionId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Proxy" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AuthBaseAddress" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ResourceBaseAddress" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ResourceURI" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="APIVersion" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Heartbeat" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Tolerance" type="xsd:double" minOccurs="0" maxOccurs="1" default="0.5" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="OnlySJWH" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LookbackDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxRuntimeMinutes" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationSilence" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="MaxThreshold" Selector="$Config/MaxThreshold$" ParameterType="int" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="Tolerance" ParameterType="double" Selector="$Config/Tolerance$" />
          <OverrideableParameter ID="OnlySJWH" ParameterType="int" Selector="$Config/OnlySJWH$" />
          <OverrideableParameter ID="LookbackDays" ParameterType="int" Selector="$Config/LookbackDays$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="MaxRuntimeMinutes" ParameterType="int" Selector="$Config/MaxRuntimeMinutes$" />
          <OverrideableParameter ID="WebHookExpirationDays" ParameterType="int" Selector="$Config/WebHookExpirationDays$" />
          <OverrideableParameter ID="WebHookExpirationSilence" ParameterType="int" Selector="$Config/WebHookExpirationSilence$" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="QND.OMS.Automation.RunbookStatus.DS">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <TraceLevel>$Config/TraceLevel$</TraceLevel>
              <ClientId>$Config/ClientId$</ClientId>
              <SubscriptionId>$Config/SubscriptionId$</SubscriptionId>
              <Proxy>$Config/Proxy$</Proxy>
              <AuthBaseAddress>$Config/AuthBaseAddress$</AuthBaseAddress>
              <ResourceBaseAddress>$Config/ResourceBaseAddress$</ResourceBaseAddress>
              <AADUserName>$Config/AADUserName$</AADUserName>
              <AADPassword>$Config/AADPassword$</AADPassword>
              <ResourceURI>$Config/ResourceURI$</ResourceURI>
              <APIVersion>$Config/APIVersion$</APIVersion>
              <Heartbeat>$Config/Heartbeat$</Heartbeat>
              <Tolerance>$Config/Tolerance$</Tolerance>
              <OnlySJWH>$Config/OnlySJWH$</OnlySJWH>
              <LookbackDays>$Config/LookbackDays$</LookbackDays>
              <LastNJobs>$Config/LastNJobs$</LastNJobs>
              <MaxFailures>$Config/MaxFailures$</MaxFailures>
              <FailureCondition>$Config/FailureCondition$</FailureCondition>
              <MaxAgeHours>$Config/MaxAgeHours$</MaxAgeHours>
              <MaxRuntimeMinutes>$Config/MaxRuntimeMinutes$</MaxRuntimeMinutes>
              <WebHookExpirationDays>$Config/WebHookExpirationDays$</WebHookExpirationDays>
              <WebHookExpirationSilence>$Config/WebHookExpirationSilence$</WebHookExpirationSilence>
            </DataSource>
            <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='runbookId']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">$Config/RunbookId$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="LessEqualCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='$Config/Property$']</XPathQuery>
                  </ValueExpression>
                  <Operator>LessEqual</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/MaxThreshold$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="GreaterCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='$Config/Property$']</XPathQuery>
                  </ValueExpression>
                  <Operator>Greater</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/MaxThreshold$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Greater">
              <Node ID="GreaterCD">
                <Node ID="Filter">
                  <Node ID="DS" />
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="LessEqual">
              <Node ID="LessEqualCD">
                <Node ID="Filter">
                  <Node ID="DS"></Node>
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="QND.OMS.Automation.RunbookStatus3StateCooked.MT" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="Greater" />
          <MonitorTypeState ID="InBetween" />
          <MonitorTypeState ID="Less" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Property" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ThresholdHigh" type="xsd:double" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ThresholdLow" type="xsd:double" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RunbookId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ClientId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SubscriptionId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Proxy" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AuthBaseAddress" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ResourceBaseAddress" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ResourceURI" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="APIVersion" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Heartbeat" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Tolerance" type="xsd:double" minOccurs="0" maxOccurs="1" default="0.5" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="OnlySJWH" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LookbackDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxRuntimeMinutes" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationSilence" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="ThresholdLow" Selector="$Config/ThresholdLow$" ParameterType="double" />
          <OverrideableParameter ID="ThresholdHigh" Selector="$Config/ThresholdHigh$" ParameterType="double" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="Tolerance" ParameterType="double" Selector="$Config/Tolerance$" />
          <OverrideableParameter ID="OnlySJWH" ParameterType="int" Selector="$Config/OnlySJWH$" />
          <OverrideableParameter ID="LookbackDays" ParameterType="int" Selector="$Config/LookbackDays$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="MaxRuntimeMinutes" ParameterType="int" Selector="$Config/MaxRuntimeMinutes$" />
          <OverrideableParameter ID="WebHookExpirationDays" ParameterType="int" Selector="$Config/WebHookExpirationDays$" />
          <OverrideableParameter ID="WebHookExpirationSilence" ParameterType="int" Selector="$Config/WebHookExpirationSilence$" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="QND.OMS.Automation.RunbookStatus.DS">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <TraceLevel>$Config/TraceLevel$</TraceLevel>
              <ClientId>$Config/ClientId$</ClientId>
              <SubscriptionId>$Config/SubscriptionId$</SubscriptionId>
              <Proxy>$Config/Proxy$</Proxy>
              <AuthBaseAddress>$Config/AuthBaseAddress$</AuthBaseAddress>
              <ResourceBaseAddress>$Config/ResourceBaseAddress$</ResourceBaseAddress>
              <AADUserName>$Config/AADUserName$</AADUserName>
              <AADPassword>$Config/AADPassword$</AADPassword>
              <ResourceURI>$Config/ResourceURI$</ResourceURI>
              <APIVersion>$Config/APIVersion$</APIVersion>
              <Heartbeat>$Config/Heartbeat$</Heartbeat>
              <Tolerance>$Config/Tolerance$</Tolerance>
              <OnlySJWH>$Config/OnlySJWH$</OnlySJWH>
              <LookbackDays>$Config/LookbackDays$</LookbackDays>
              <LastNJobs>$Config/LastNJobs$</LastNJobs>
              <MaxFailures>$Config/MaxFailures$</MaxFailures>
              <FailureCondition>$Config/FailureCondition$</FailureCondition>
              <MaxAgeHours>$Config/MaxAgeHours$</MaxAgeHours>
              <MaxRuntimeMinutes>$Config/MaxRuntimeMinutes$</MaxRuntimeMinutes>
              <WebHookExpirationDays>$Config/WebHookExpirationDays$</WebHookExpirationDays>
              <WebHookExpirationSilence>$Config/WebHookExpirationSilence$</WebHookExpirationSilence>
            </DataSource>
            <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='runbookId']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">$Config/RunbookId$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="GreaterCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='$Config/Property$']</XPathQuery>
                  </ValueExpression>
                  <Operator>Greater</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/ThresholdHigh$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="InBetweenCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Double">Property[@Name='$Config/Property$']</XPathQuery>
                      </ValueExpression>
                      <Operator>LessEqual</Operator>
                      <ValueExpression>
                        <Value Type="Double">$Config/ThresholdHigh$</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Double">Property[@Name='$Config/Property$']</XPathQuery>
                      </ValueExpression>
                      <Operator>GreaterEqual</Operator>
                      <ValueExpression>
                        <Value Type="Double">$Config/ThresholdLow$</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </And>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="LessCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='$Config/Property$']</XPathQuery>
                  </ValueExpression>
                  <Operator>Less</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/ThresholdLow$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Greater">
              <Node ID="GreaterCD">
                <Node ID="Filter">
                  <Node ID="DS" />
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="InBetween">
              <Node ID="InBetweenCD">
                <Node ID="Filter">
                  <Node ID="DS"></Node>
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="Less">
              <Node ID="LessCD">
                <Node ID="Filter">
                  <Node ID="DS"></Node>
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="QND.OMS.Automation.Account.Discovery" ConfirmDelivery="true" Enabled="true" Priority="Normal" Remotable="true" Target="Azure!Microsoft.SystemCenter.MicrosoftAzure.ArmService">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="QND.OMS.Automation.Account" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="QNDA!QND.OMS.ArmService.SeedDiscoverywApi.DS">
          <IntervalSeconds>14987</IntervalSeconds>
          <SyncTime></SyncTime>
          <ApiVersion>2015-10-31</ApiVersion>
          <AzureType>Microsoft.Automation/automationAccounts</AzureType>
          <ClassId>$MPElement[Name='QND.OMS.Automation.Account']$</ClassId>
        </DataSource>
      </Discovery>
      <Discovery ID="QND.OMS.Automation.Runbook.Discovery" ConfirmDelivery="true" Enabled="true" Priority="Normal" Remotable="true" Target="Azure!Microsoft.SystemCenter.MicrosoftAzure.ArmResource">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="QND.OMS.Automation.RunbookGen" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="QNDA!QND.OMS.ArmResource.SeedDiscovery.DS">
          <IntervalSeconds>7217</IntervalSeconds>
          <SyncTime></SyncTime>
          <AzureType>Microsoft.Automation/AutomationAccounts/Runbooks</AzureType>
          <ClassId>$MPElement[Name='QND.OMS.Automation.RunbookGen']$</ClassId>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Monitors>
      <AggregateMonitor ID="QND.OMS.Automation.Account.RunbookAvailability.AggMonitor" Accessibility="Public" Enabled="true" ParentMonitorID="Health!System.Health.AvailabilityState" Priority="Normal" Remotable="true" Target="QND.OMS.Automation.Account">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </AggregateMonitor>
      <UnitMonitor ID="QND.OMS.Automation.Account.Connectivity.Monitor" Accessibility="Public" Enabled="true" Target="QND.OMS.Automation.Account" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.MissingEventLogSingleEventLog2StateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Automation.Account.Connectivity.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters></AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Healthy" MonitorTypeStateID="EventRaised" HealthState="Success" />
          <OperationalState ID="UnHealthy" MonitorTypeStateID="MissingEventRaised" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <ComputerName>.</ComputerName>
          <LogName>Operations Manager</LogName>
          <Expression>
            <And>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="UnsignedInteger">11</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">PublisherName</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Progel Script</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Params/Param[1]</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Get-OMSRunbookStatus</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Params/Param[2]</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">$Target/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.AzureServiceGeneric"]/ServiceId$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </And>
          </Expression>
          <MissingComputerName>.</MissingComputerName>
          <MissingLogName>Operations Manager</MissingLogName>
          <MissingExpression>
            <And>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="UnsignedInteger">11</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">PublisherName</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Progel Script</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Params/Param[1]</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Get-OMSRunbookStatus</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Params/Param[2]</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">$Target/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.AzureServiceGeneric"]/ServiceId$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </And>
          </MissingExpression>
          <Consolidator>
            <ConsolidationProperties />
            <TimeControl>
              <GenericSchedule>
                <SimpleReccuringSchedule>
                  <Interval Unit="Minutes">240</Interval>
                </SimpleReccuringSchedule>
                <ExcludeDates />
              </GenericSchedule>
            </TimeControl>
            <CountingCondition>
              <CountMode>OnNewItemNOP_OnTimerOutputRestart</CountMode>
            </CountingCondition>
          </Consolidator>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Automation.Runbook.ExecStatus.Monitor" Accessibility="Public" Enabled="true" Target="QND.OMS.Automation.RunbookGen" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Automation.RunbookStatus2StateCooked.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Automation.Runbook.ExecStatus.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="jobFailures"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name="lastnJobs"]$</AlertParameter2>
            <AlertParameter3>$Data/Context/Property[@Name="maxFailures"]$</AlertParameter3>
            <AlertParameter4>$Data/Context/Property[@Name="lastJobStatus"]$</AlertParameter4>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Successful" MonitorTypeStateID="LessEqual" HealthState="Success" />
          <OperationalState ID="Failed" MonitorTypeStateID="Greater" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>3611</IntervalSeconds>
          <SyncTime></SyncTime>
          <Property>jobFailures</Property>
          <MaxThreshold>2</MaxThreshold>
          <RunbookId>$Target/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.ServiceResource"]/ResourceId$</RunbookId>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <ClientId>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/ClientId$</ClientId>
          <SubscriptionId>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/SubscriptionId$</SubscriptionId>
          <Proxy>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/ProxyServerAddress$</Proxy>
          <AuthBaseAddress>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/Authority$</AuthBaseAddress>
          <ResourceBaseAddress>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/ArmServiceUri$</ResourceBaseAddress>
          <AADUserName>$RunAs[Name="Azure!Microsoft.SystemCenter.MicrosoftAzure.RunAsProfile.ADCredentials"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="Azure!Microsoft.SystemCenter.MicrosoftAzure.RunAsProfile.ADCredentials"]/Password$</AADPassword>
          <ResourceURI>$Target/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.AzureServiceGeneric"]/ServiceId$</ResourceURI>
          <APIVersion>$Target/Host/Property[Type="QNDA!QND.OMS.GenericService"]/ApiVersion$</APIVersion>
          <Heartbeat>11</Heartbeat>
          <Tolerance>0.5</Tolerance>
          <OnlySJWH>1</OnlySJWH>
          <LookbackDays>-1</LookbackDays>
          <LastNJobs>5</LastNJobs>
          <MaxFailures>2</MaxFailures>
          <!--.net regex doesn't parse ^(?!Completed).*$ -->
          <FailureCondition>Failed</FailureCondition>
          <MaxAgeHours>-1</MaxAgeHours>
          <MaxRuntimeMinutes>180</MaxRuntimeMinutes>
          <WebHookExpirationDays>15</WebHookExpirationDays>
          <WebHookExpirationSilence>20</WebHookExpirationSilence>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor" Accessibility="Public" Enabled="true" Target="QND.OMS.Automation.RunbookGen" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Automation.RunbookStatus3StateCooked.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="webHookDaysToExpiration"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name="webHookStatus"]$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Valid" MonitorTypeStateID="Greater" HealthState="Success" />
          <OperationalState ID="AboutToExpire" MonitorTypeStateID="InBetween" HealthState="Warning" />
          <OperationalState ID="Expired" MonitorTypeStateID="Less" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>3611</IntervalSeconds>
          <SyncTime></SyncTime>
          <Property>webHookDaysToExpiration</Property>
          <ThresholdHigh>1</ThresholdHigh>
          <ThresholdLow>15</ThresholdLow>
          <RunbookId>$Target/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.ServiceResource"]/ResourceId$</RunbookId>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <ClientId>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/ClientId$</ClientId>
          <SubscriptionId>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/SubscriptionId$</SubscriptionId>
          <Proxy>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/ProxyServerAddress$</Proxy>
          <AuthBaseAddress>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/Authority$</AuthBaseAddress>
          <ResourceBaseAddress>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/ArmServiceUri$</ResourceBaseAddress>
          <AADUserName>$RunAs[Name="Azure!Microsoft.SystemCenter.MicrosoftAzure.RunAsProfile.ADCredentials"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="Azure!Microsoft.SystemCenter.MicrosoftAzure.RunAsProfile.ADCredentials"]/Password$</AADPassword>
          <ResourceURI>$Target/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.AzureServiceGeneric"]/ServiceId$</ResourceURI>
          <APIVersion>$Target/Host/Property[Type="QNDA!QND.OMS.GenericService"]/ApiVersion$</APIVersion>
          <Heartbeat>11</Heartbeat>
          <Tolerance>0.5</Tolerance>
          <OnlySJWH>1</OnlySJWH>
          <LookbackDays>-1</LookbackDays>
          <LastNJobs>5</LastNJobs>
          <MaxFailures>2</MaxFailures>
          <!--.net regex doesn't parse ^(?!Completed).*$ -->
          <FailureCondition>Failed</FailureCondition>
          <MaxAgeHours>-1</MaxAgeHours>
          <MaxRuntimeMinutes>180</MaxRuntimeMinutes>
          <WebHookExpirationDays>15</WebHookExpirationDays>
          <WebHookExpirationSilence>20</WebHookExpirationSilence>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Automation.Runbook.RunAge.Monitor" Accessibility="Public" Enabled="true" Target="QND.OMS.Automation.RunbookGen" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Automation.RunbookStatus2StateCooked.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Automation.Runbook.RunAge.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="lastRunAgeHours"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name="maxAge"]$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Successful" MonitorTypeStateID="LessEqual" HealthState="Success" />
          <OperationalState ID="Failed" MonitorTypeStateID="Greater" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>3611</IntervalSeconds>
          <SyncTime></SyncTime>
          <Property>lastRunObsolete</Property>
          <MaxThreshold>0</MaxThreshold>
          <RunbookId>$Target/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.ServiceResource"]/ResourceId$</RunbookId>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <ClientId>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/ClientId$</ClientId>
          <SubscriptionId>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/SubscriptionId$</SubscriptionId>
          <Proxy>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/ProxyServerAddress$</Proxy>
          <AuthBaseAddress>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/Authority$</AuthBaseAddress>
          <ResourceBaseAddress>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/ArmServiceUri$</ResourceBaseAddress>
          <AADUserName>$RunAs[Name="Azure!Microsoft.SystemCenter.MicrosoftAzure.RunAsProfile.ADCredentials"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="Azure!Microsoft.SystemCenter.MicrosoftAzure.RunAsProfile.ADCredentials"]/Password$</AADPassword>
          <ResourceURI>$Target/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.AzureServiceGeneric"]/ServiceId$</ResourceURI>
          <APIVersion>$Target/Host/Property[Type="QNDA!QND.OMS.GenericService"]/ApiVersion$</APIVersion>
          <Heartbeat>11</Heartbeat>
          <Tolerance>0.5</Tolerance>
          <OnlySJWH>1</OnlySJWH>
          <LookbackDays>-1</LookbackDays>
          <LastNJobs>5</LastNJobs>
          <MaxFailures>2</MaxFailures>
          <!--.net regex doesn't parse ^(?!Completed).*$ -->
          <FailureCondition>Failed</FailureCondition>
          <MaxAgeHours>-1</MaxAgeHours>
          <MaxRuntimeMinutes>180</MaxRuntimeMinutes>
          <WebHookExpirationDays>15</WebHookExpirationDays>
          <WebHookExpirationSilence>20</WebHookExpirationSilence>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Automation.Runbook.LongRunning.Monitor" Accessibility="Public" Enabled="true" Target="QND.OMS.Automation.RunbookGen" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Automation.RunbookStatus2StateCooked.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Automation.Runbook.LongRunning.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="lastRuntimeMin"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name="maxRuntime"]$</AlertParameter2>
            <AlertParameter3>$Data/Context/Property[@Name="lastCompletedRuntimeMin"]$</AlertParameter3>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Successful" MonitorTypeStateID="LessEqual" HealthState="Success" />
          <OperationalState ID="Failed" MonitorTypeStateID="Greater" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>3611</IntervalSeconds>
          <SyncTime></SyncTime>
          <Property>longRunning</Property>
          <MaxThreshold>0</MaxThreshold>
          <RunbookId>$Target/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.ServiceResource"]/ResourceId$</RunbookId>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <ClientId>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/ClientId$</ClientId>
          <SubscriptionId>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/SubscriptionId$</SubscriptionId>
          <Proxy>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/ProxyServerAddress$</Proxy>
          <AuthBaseAddress>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/Authority$</AuthBaseAddress>
          <ResourceBaseAddress>$Target/Host/Host/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.Subscription"]/ArmServiceUri$</ResourceBaseAddress>
          <AADUserName>$RunAs[Name="Azure!Microsoft.SystemCenter.MicrosoftAzure.RunAsProfile.ADCredentials"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="Azure!Microsoft.SystemCenter.MicrosoftAzure.RunAsProfile.ADCredentials"]/Password$</AADPassword>
          <ResourceURI>$Target/Host/Property[Type="Azure!Microsoft.SystemCenter.MicrosoftAzure.AzureServiceGeneric"]/ServiceId$</ResourceURI>
          <APIVersion>$Target/Host/Property[Type="QNDA!QND.OMS.GenericService"]/ApiVersion$</APIVersion>
          <Heartbeat>11</Heartbeat>
          <Tolerance>0.5</Tolerance>
          <OnlySJWH>1</OnlySJWH>
          <LookbackDays>-1</LookbackDays>
          <LastNJobs>5</LastNJobs>
          <MaxFailures>2</MaxFailures>
          <!--.net regex doesn't parse ^(?!Completed).*$ -->
          <FailureCondition>Failed</FailureCondition>
          <MaxAgeHours>-1</MaxAgeHours>
          <MaxRuntimeMinutes>180</MaxRuntimeMinutes>
          <WebHookExpirationDays>15</WebHookExpirationDays>
          <WebHookExpirationSilence>20</WebHookExpirationSilence>
        </Configuration>
      </UnitMonitor>
      <DependencyMonitor ID="QND.OMS.Automation.AccountToRunbookExecStatus.DepMonitor" Accessibility="Public" Enabled="true" MemberMonitor="QND.OMS.Automation.Runbook.ExecStatus.Monitor" ParentMonitorID="QND.OMS.Automation.Account.RunbookAvailability.AggMonitor" Priority="Normal" RelationshipType="QND.OMS.Automation.AccountHostsRunbook" Remotable="true" Target="QND.OMS.Automation.Account">
        <Category>AvailabilityHealth</Category>
        <Algorithm>Percentage</Algorithm>
        <AlgorithmParameter>30</AlgorithmParameter>
        <MemberInMaintenance>Success</MemberInMaintenance>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="QND.OMS.Automation.AccountToRunbookRunAge.DepMonitor" Accessibility="Public" Enabled="true" MemberMonitor="QND.OMS.Automation.Runbook.RunAge.Monitor" ParentMonitorID="QND.OMS.Automation.Account.RunbookAvailability.AggMonitor" Priority="Normal" RelationshipType="QND.OMS.Automation.AccountHostsRunbook" Remotable="true" Target="QND.OMS.Automation.Account">
        <Category>AvailabilityHealth</Category>
        <Algorithm>Percentage</Algorithm>
        <AlgorithmParameter>30</AlgorithmParameter>
        <MemberInMaintenance>Success</MemberInMaintenance>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="QND.OMS.Automation.AccountToRunbookWebHookExpiration.DepMonitor" Accessibility="Public" Enabled="true" MemberMonitor="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor" ParentMonitorID="QND.OMS.Automation.Account.RunbookAvailability.AggMonitor" Priority="Normal" RelationshipType="QND.OMS.Automation.AccountHostsRunbook" Remotable="true" Target="QND.OMS.Automation.Account">
        <Category>AvailabilityHealth</Category>
        <Algorithm>Percentage</Algorithm>
        <AlgorithmParameter>30</AlgorithmParameter>
        <MemberInMaintenance>Success</MemberInMaintenance>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="QND.OMS.Automation.AccountToRunbookLongRunning.DepMonitor" Accessibility="Public" Enabled="true" MemberMonitor="QND.OMS.Automation.Runbook.LongRunning.Monitor" ParentMonitorID="Health!System.Health.PerformanceState" Priority="Normal" RelationshipType="QND.OMS.Automation.AccountHostsRunbook" Remotable="true" Target="QND.OMS.Automation.Account">
        <Category>AvailabilityHealth</Category>
        <Algorithm>Percentage</Algorithm>
        <AlgorithmParameter>30</AlgorithmParameter>
        <MemberInMaintenance>Success</MemberInMaintenance>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
    </Monitors>
  </Monitoring>
  <Presentation>
    <Views>
      <View ID="QND.OMS.Automation.AccountState.View" Accessibility="Public" Enabled="true" Target="QND.OMS.Automation.Account" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <InMaintenanceMode>false</InMaintenanceMode>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>State</Name>
            <Id>QND.OMS.Automation.Account</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>InMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>Path</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Display Name</Name>
            <Id>System.Entity/DisplayName</Id>
          </ColumnInfo>
        </Presentation>
        <Target />
      </View>
      <View ID="QND.OMS.Automation.RunbookState.View" Accessibility="Public" Enabled="true" Target="QND.OMS.Automation.RunbookGen" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria></Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>State</Name>
            <Id>QND.OMS.Automation.RunbookGen</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>InMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>Path</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Display Name</Name>
            <Id>System.Entity/DisplayName</Id>
          </ColumnInfo>
        </Presentation>
        <Target />
      </View>
    </Views>
    <Folders>
      <Folder ID="QND.OMS.Automation.Folder" ParentFolder="QNDA!QND.OMS.Folders" Accessibility="Public" />
    </Folders>
    <FolderItems>
      <FolderItem ID="QND.OMS.Automation.AccountState.FldrItem" ElementID="QND.OMS.Automation.AccountState.View" Folder="QND.OMS.Automation.Folder" />
      <FolderItem ID="QND.OMS.Automation.RunbookState.FldrItem" ElementID="QND.OMS.Automation.RunbookState.View" Folder="QND.OMS.Automation.Folder" />
    </FolderItems>
    <StringResources>
      <StringResource ID="QND.OMS.Automation.Account.Connectivity.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Automation.Runbook.ExecStatus.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Automation.Runbook.RunAge.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Automation.Runbook.LongRunning.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor.AlertMessage" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="QND.OMS.Automation.AccountToRunbookExecStatus.DepMonitor">
          <Name>Execution Status</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account.Connectivity.Monitor.AlertMessage">
          <Name>QND - OMS Azure Automation Account monitor not running</Name>
          <Description>The monitoriong for the automation account is uneffective. The automation account is unreachable or the agent is stalled.</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account.Connectivity.Monitor">
          <Name>Connectivity</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.AccountToRunbookRunAge.DepMonitor">
          <Name>Last Exectuion Time</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.AccountToRunbookLongRunning.DepMonitor">
          <Name>Runbooks running time</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.AccountToRunbookWebHookExpiration.DepMonitor">
          <Name>WebHooks Validity</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account.RunbookAvailability.AggMonitor">
          <Name>Runbooks</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account">
          <Name>QND - OMS Automation Account</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.RunbookGen">
          <Name>QND - OMS Automation Runbook</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.RunbookGen" SubElementID="RunbookType">
          <Name>Runbook Type</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation">
          <Name>QND - OMS Automation</Name>
          <Description>Community based monitoring for Azure OMS Automation</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Folder">
          <Name>Azure Automation</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.AccountState.View">
          <Name>Accounts State</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.RunbookState.View">
          <Name>Runbook States</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.ExecStatus.Monitor">
          <Name>Execution Result</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.ExecStatus.Monitor.AlertMessage">
          <Name>QND - OMS Automation Runbook execution failed</Name>
          <Description>The runbook failures count {0} is over the threshold set {2} over the last {1} runs. Last run status is {3}.
              More details in the alert context
          </Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.RunAge.Monitor">
          <Name>Last Run Age</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.RunAge.Monitor.AlertMessage">
          <Name>QND - OMS Automation Runbook last execution too old</Name>
          <Description>The runbook last run is {0} hours old which is over the threshold set at {1} hours.
              More details in the alert context
          </Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.LongRunning.Monitor">
          <Name>Execution time</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.LongRunning.Monitor.AlertMessage">
          <Name>QND - OMS Automation Runbook execution is taking too long</Name>
          <Description>
            The last runbook execution took {0} minutes which is over the set threshold of {1}. The last completed job took {2} minutes.
            More details in the alert context
          </Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor">
          <Name>WebHook Validity</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor.AlertMessage">
          <Name>QND - OMS Automation Runbook webhook expired or near expiration</Name>
          <Description>
            One or more web hooks are expired or about to expire. Days to expiration {0}.
            More details in the alert context
          </Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles>
        <KnowledgeArticle ElementID="QND.OMS.Automation">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>This community based management pack check for OMS Automation health.</maml:para>
            </maml:section>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Configuration</maml:title>
              <maml:para>
                For more info on MP configuration see <maml:navigationLink><maml:linkText>GitHub Wiki Home page for the project</maml:linkText><maml:uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki" /></maml:navigationLink></maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
      </KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>