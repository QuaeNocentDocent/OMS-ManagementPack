<?xml version="1.0" encoding="utf-8"?>
<ManagementPack SchemaVersion="2.0" ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Manifest>
    <Identity>
      <ID>QND.OMS.Automation</ID>
      <Version>1.0.0.37</Version>
    </Identity>
    <Name>QND.OMS.Automation</Name>
    <References>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="OMS">
        <ID>QND.OMS</ID>
        <Version>1.0.0.51</Version>
        <PublicKeyToken>e5fcf8e8afa3370a</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="QND.OMS.Automation.Account" Base="System!System.ApplicationComponent" Accessibility="Internal" Abstract="false" Hosted="true" Singleton="false">
          <Property ID="Id" Key="false" Type="string" MaxLength="512" />
          <Property ID="Name" Key="true" Type="string" />
          <Property ID="ResourceGroup" Key="false" Type="string" />
          <!-- included even if we have an hosting relationship to make easier some type of query -->
          <Property ID="Subscription" Key="false" Type="string" />
          <Property ID="Location" Key="false" Type="string" />
          <Property ID="Type" Key="false" Type="string" />
          <Property ID="Sku" Key="false" Type="string" />
        </ClassType>
        <ClassType ID="QND.OMS.Automation.Runbook" Base="System!System.ApplicationComponent" Accessibility="Internal" Abstract="false" Hosted="true" Singleton="false">
          <Property ID="Id" Key="false" Type="string" MaxLength="512" />
          <Property ID="Name" Key="true" Type="string" />
          <Property ID="Location" Key="false" Type="string" />
          <Property ID="Type" Key="false" Type="string" />
          <Property ID="RunbookType" Key="false" Type="string" />
        </ClassType>
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="QND.OMS.SubscriptionContainsAutomationAccount" Abstract="false" Accessibility="Public" Base="System!System.Hosting">
          <Source ID="Subscription" Type="OMS!QND.OMS.Azure.Subscription" />
          <Target ID="Account" Type="QND.OMS.Automation.Account" />
        </RelationshipType>
        <RelationshipType ID="QND.OMS.Automation.AccountContainsRunbook" Abstract="false" Accessibility="Public" Base="System!System.Hosting">
          <Source ID="Account" Type="QND.OMS.Automation.Account" />
          <Target ID="Runbook" Type="QND.OMS.Automation.Runbook" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
    <ModuleTypes>
      <DataSourceModuleType ID="QND.OMS.Automation.Discovery.DS" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element name="TraceLevel" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SubscriptionId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ExcludedAccountsList" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TraceLevel" Selector="$Config/TraceLevel$" ParameterType="int" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="ExcludedAccountsList" Selector="$Config/ExcludedAccountsList$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <ScriptName>Discover-AzureAutomation.ps1</ScriptName>
                <ScriptBody>
                  <![CDATA[#$guid='{{{0}}}' -f (new-guid).guid

## This discovery needs to be splitted 'cause potentially can discover a huge number of entities
## Gorup memeberhsip must be changed and split in diffrent rules using the properties we're setting

#TO SHOW VERBOSE MESSAGES SET $VerbosePreference="continue"
#SET ErrorLevel to 5 so show discovery info
#https://azure.microsoft.com/en-us/documentation/articles/operational-insights-api-log-search/

#*************************************************************************
# Script Name - Discover-AzureAutomation
# Author	  - Daniele Grandini
# Version  - 1.0 20.10.2015
# Purpose     - 
#               
# Assumptions - 
#				
#               
# Parameters  - TraceLevel
#             - ComputerName
#				- SourceId
#				- ManagedEntityId
# Command Line - .\test.ps1 4 "serverName" '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}' '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}'
# If discovery must be added the followinf parameters
#				SourceId ($ MPElement $ )
#				ManagedEntityId ($ Target/Id $)
#
# Output properties
#
# Status
#
# 1.0 History
#	  1.0 06.08.2010 DG First Release
#     1.5 15.02.2014 DG minor cosmetics
#
# (c) Copyright 2015, Progel spa, All Rights Reserved
# Proprietary and confidential to Progel srl              
#
#*************************************************************************


# Get the named parameters
param(
[Parameter (Mandatory=$True)] [int]$traceLevel,
[Parameter (Mandatory=$true)] [string]$sourceID,
[Parameter (Mandatory=$true)] [string]$ManagedEntityId,
[Parameter (Mandatory=$true)] [String]$TenantADName,
[Parameter (Mandatory=$true)] [String]$SubscriptionId,
[Parameter (Mandatory=$true)] [String]$Username,
[Parameter (Mandatory=$true)] [String]$Password,
[Parameter (Mandatory=$false)] [String]$ExcludedAccounts,
[String]$Proxyurl #nyi

)

	[Threading.Thread]::CurrentThread.CurrentCulture = "en-US"        
	[Threading.Thread]::CurrentThread.CurrentUICulture = "en-US"
	
#Constants used for event logging
$SCRIPT_NAME			= "Disocver-AzureAccount"
$SCRIPT_ARGS = 9
$SCRIPT_STARTED			= 831
$PROPERTYBAG_CREATED	= 832
$SCRIPT_ENDED			= 835
$SCRIPT_VERSION = "1.0"

#region Constants
#Trace Level Costants
$TRACE_NONE 	= 0
$TRACE_ERROR 	= 1
$TRACE_WARNING = 2
$TRACE_INFO 	= 3
$TRACE_VERBOSE = 4
$TRACE_DEBUG = 5

#Event Type Constants
$EVENT_TYPE_SUCCESS      = 0
$EVENT_TYPE_ERROR        = 1
$EVENT_TYPE_WARNING      = 2
$EVENT_TYPE_INFORMATION  = 4
$EVENT_TYPE_AUDITSUCCESS = 8
$EVENT_TYPE_AUDITFAILURE = 16

#Standard Event IDs
$FAILURE_EVENT_ID = 4000		#errore generico nello script
$SUCCESS_EVENT_ID = 1101
$START_EVENT_ID = 1102
$STOP_EVENT_ID = 1103
$INFO_EVENT_ID = 1104

#TypedPropertyBag
$AlertDataType = 0
$EventDataType	= 2
$PerformanceDataType = 2
$StateDataType       = 3
#endregion

#region Helper Functions
function Log-Params
{
	param($Invocation)
	$line=''
	foreach($key in $Invocation.BoundParameters.Keys) {$line += "$key=$($Invocation.BoundParameters[$key])  "}
	Log-Event $START_EVENT_ID $EVENT_TYPE_INFORMATION  ("Starting script. Invocation Name:$($Invocation.InvocationName)`n Parameters`n $line") $TRACE_INFO
}


function Log-Event
{
	param($eventID, $eventType, $msg, $level)
	
	Write-Verbose ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
	if($level -le $P_TraceLevel)
	{
		Write-Host ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
		$g_API.LogScriptEvent($SCRIPT_NAME,$eventID,$eventType, ($msg + "`n" + "Version :" + $SCRIPT_VERSION))
	}
}

Function Throw-EmptyDiscovery
{
	param($SourceId, $ManagedEntityId)

	$oDiscoveryData = $g_API.CreateDiscoveryData(0, $SourceId, $ManagedEntityId)
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING "Exiting with empty discovery data" $TRACE_INFO
	$oDiscoveryData
	If($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent
		$g_API.Return($oDiscoveryData)
	}
}

Function Throw-KeepDiscoveryInfo
{
param($SourceId, $ManagedEntityId)
	$oDiscoveryData = $g_API.CreateDiscoveryData(0,$SourceId,$ManagedEntityId)
	#Instead of Snapshot discovery, submit Incremental discovery data
	$oDiscoveryData.IsSnapshot = $false
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING "Exiting with null non snapshot discovery data" $TRACE_INFO
	$oDiscoveryData    
	If($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent	
		$g_API.Return($oDiscoveryData)
	}
}
#endregion


#id       : /subscriptions/ec2b2ab8-ba74-41a0-bf54-39cc0716f414/resourceGroups/OaaSCSHRWRPZB6GXQVDR3MZN4LZ2ID5KGAHA3HNK26JFKSEGZK7HOMRALQ-West-Europe/providers/Microsoft.Automati
#           on/automationAccounts/PreLabsAutoWE
#name     : PreLabsAutoWE
#type     : Microsoft.Automation/automationAccounts
#location : westeurope
#tags     : 

#name       : PreLabsAutoWE
#id         : /subscriptions/ec2b2ab8-ba74-41a0-bf54-39cc0716f414/resourceGroups/OaaSCSHRWRPZB6GXQVDR3MZN4LZ2ID5KGAHA3HNK26JFKSEGZK7HOMRALQ-West-Europe/providers/Microsoft.Automa
#             tion/automationAccounts/PreLabsAutoWE
#type       : Microsoft.Automation/AutomationAccounts
#location   : West Europe
#tags       : 
#etag       : 
#properties : @{sku=; state=Ok; creationTime=2015-03-18T16:42:16.713+00:00; lastModifiedBy=; lastModifiedTime=2015-10-19T11:02:30.847+00:00}

Function Discover-AutomationAccount
{
	param($obj, $ResourceGroup, $Subscription)

		$objInstance = $discoveryData.CreateClassInstance("$MPElement[Name='QND.OMS.Automation.Account']$")	
		$objInstance.AddProperty("$MPElement[Name='OMS!QND.OMS.Azure.Subscription']/Id$", $subscription)		
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Account']/Id$", $obj.Id)		
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Account']/Name$", $obj.Name)	
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Account']/ResourceGroup$", $ResourceGroup)	
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Account']/Subscription$", $Subscription)	
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Account']/Location$", $obj.location)	
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Account']/Type$", $obj.type)	
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Account']/Sku$", $obj.properties.sku.name)	

		$objInstance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $obj.Name)	
		$discoveryData.AddInstance($objInstance)	
}


#id         : /subscriptions/ec2b2ab8-ba74-41a0-bf54-39cc0716f414/resourceGroups/OaaSCSHRWRPZB6GXQVDR3MZN4LZ2ID5KGAHA3HNK26JFKSEGZK7HOMRALQ-West-Europe/providers/Microsoft.Automa
#             tion/automationAccounts/PreLabsAutoWE/runbooks/Tagetik-FirstConfig
#name       : Tagetik-FirstConfig
#type       : Microsoft.Automation/AutomationAccounts/Runbooks
#location   : West Europe
#tags       : 
#etag       : "635772989264900000"
#properties : @{description=Cross cloud DSC configuration; logVerbose=False; logProgress=False; logActivityTrace=1; runbookType=Script; parameters=; state=Edit; jobCount=9; 
#             provisioningState=; serviceManagementTags=; creationTime=2015-09-03T14:41:21.733+00:00; lastModifiedBy=live.com#daniele.grandini@live.it; 
#             lastModifiedTime=2015-09-08T08:48:46.49+00:00}

#PS C:\Users\grandinid\SkyDrive\Dev\OpsMgr\GIT\QND.OMS\QND.OMS\OMSSearch> $jres.properties

#description           : Cross cloud DSC configuration
#logVerbose            : False
#logProgress           : False
#logActivityTrace      : 1
#runbookType           : Script
#parameters            : @{AzureSubscription=; adminPassword=; publicPort=; LocalAdmin=; ConfigName=; publicDnsName=; assetsRG=; assetsStg=; assetName=; assetsContainer=; 
#                        destinationFolder=}
#state                 : Edit
#jobCount              : 9
#provisioningState     : 
#serviceManagementTags : 
#creationTime          : 2015-09-03T14:41:21.733+00:00
#lastModifiedBy        : live.com#daniele.grandini@live.it
#lastModifiedTime      : 2015-09-08T08:48:46.49+00:00


Function Discover-AutomationRunbook
{
	param($obj, $subscription, $account)

    try {
	if ([String]::IsNullOrEmpty($obj.Name)) {return;}
		$objInstance = $discoveryData.CreateClassInstance("$MPElement[Name='QND.OMS.Automation.Runbook']$")	
		$objInstance.AddProperty("$MPElement[Name='OMS!QND.OMS.Azure.Subscription']/Id$", $subscription)
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Account']/Name$", $account)		

		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Runbook']/Id$", $obj.Id)	
        $objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Runbook']/Name$", $obj.Name)	
        $objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Runbook']/Type$", $obj.Type)	
        $objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Runbook']/Location$", $obj.Location)	
        $objInstance.AddProperty("$MPElement[Name='QND.OMS.Automation.Runbook']/RunbookType$", $obj.Properties.runbookType)	

		$objInstance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $obj.Name)	
		$discoveryData.AddInstance($objInstance)	
    }
    catch {
        Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ('Error disocverying runbook {1} in account {0} - {2}' -f $account.name, $obj.Id, $Error[0]) $TRACE_WARNING	
	    write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	    Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
    }

}

#Start by setting up API object.
	$P_TraceLevel = $TRACE_VERBOSE
	$g_Api = New-Object -comObject 'MOM.ScriptAPI'
	#$g_RegistryStatePath = "HKLM\" + $g_API.GetScriptStateKeyPath($SCRIPT_NAME)

	$dtStart = Get-Date
	$P_TraceLevel = $traceLevel
	Log-Params $MyInvocation


try {
	$ResPath = (get-itemproperty -path 'HKLM:\system\currentcontrolset\services\healthservice\Parameters' -Name 'State Directory').'State Directory' + '\Resources'
	if(Test-Path $ResPath) {
		$module = @(get-childitem -path $ResPath -Name OMSSearch.psm1 -Recurse)[0]
	}
	if($module) { $OMSSearchModule = "$ResPath\$module"}
	else {$OMSSearchModule = '.\OMSSearch.psm1'}
    if(! (Get-MOdule -Name OMSSearch)) {
	    If (Test-Path $OMSSearchModule) {Import-Module $OMSSearchModule}
	    else {Throw [System.DllNotFoundException] 'OMSSearch.psm1 not found'}
    }

#now load the AAD client resource. The module I'm using assumes the assembly is in the same directory of the module, but OpsMgr resource deployment uses 2 different folders

	$AssemblyName = 'Microsoft.IdentityModel.Clients.ActiveDirectory'
	$AssemblyVersion = "2.14.0.0"
	$AssemblyPublicKey = "31bf3856ad364e35"

	$DLLPath = "$ResPath\"+@(get-childitem -path $ResPath -Name "$($AssemblyName).dll" -Recurse)[0]
	If (!([AppDomain]::CurrentDomain.GetAssemblies() |Where-Object { $_.FullName -eq "$AssemblyName, Version=$AssemblyVersion, Culture=neutral, PublicKeyToken=$AssemblyPublicKey"}))
	{
		Log-Event $INFO_EVENT_ID $EVENT_TYPE_INFO ("Loading Assembly $AssemblyName") $TRACE_VERBOSE
		Try {
			[Void][System.Reflection.Assembly]::LoadFrom($DLLPath)
		} Catch {
			Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Unable to load $DLLPath. $Error") $TRACE_ERROR
			exit 1
		}
	}

	if (!(get-command -Module OMSSearch -Name Get-AADToken -ErrorAction SilentlyContinue)) {
		Log-Event $START_EVENT_ID $EVENT_TYPE_WARNING ("Get-AADToken Commandlet doesn't exist.") $TRACE_WARNING
		Throw-KeepDiscoveryInfo
		exit 1
	}
	$token = Get-AADToken -TenantADName $TenantADName -Username $Username -Password $Password
	if (! $token) {Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Get-AADToken canno authenticate user $username " + $Error) $TRACE_ERROR; exit 1;}
}
catch {
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Main " + $Error) $TRACE_ERROR
	exit 1
}

try
{
    $exclusions=@()
    if (! ([String]::IsNullOrEmpty($ExcludedAccounts))) {$exclusions = $ExcludedAccounts.Split(',')}
    
	$discoveryData = $g_api.CreateDiscoveryData(0, $sourceId, $managedEntityId)
    #first discover the accounts
	$uri='https://management.azure.com/subscriptions/{0}/resources?api-version=2014-04-01-preview&$filter=(resourceType eq ''microsoft.automation/automationaccounts'')' -f $SubscriptionId
	$jres = Invoke-ARMGet -Token $token -Uri $uri
	if(! $jres) {Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Invoke-ARMGet failed $uri " + $Error) $TRACE_ERROR; exit 1;}
	foreach($account in $jres.Value) {
        if ($exclusions -inotcontains $account.Name) {
            #get account details
            Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION -msg ('Discovering Automation Account {0}' -f $account.Name) -level $TRACE_VERBOSE
            try {
                $account.Id -match '(?<=(resourceGroups\/))(?<Group>.*)(?=(\/providers))'
		        $ResourceGroup = $matches.Group
                #$uri='https://management.azure.com/subscriptions/{0}/resourceGroups/{2}/providers/Microsoft.Automation/automationAccounts/{1}?api-version=2015-01-01-preview' -f $SubscriptionId, $account.name, $resourceGroup
                $uri='https://management.azure.com{0}?api-version=2015-01-01-preview' -f $account.Id
                $accountDet = Invoke-ARMGet -Token $token -Uri $uri
                Discover-AutomationAccount -obj $accountDet -ResourceGroup $ResourceGroup -Subscription $SubscriptionId
            }
            catch {
                Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ('Error disocverying account {0} - {1}' -f $account.name, $Error[0]) $TRACE_WARNING	
	            write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	            Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
                continue;
            }
            try {
                #now discover the runbooks for this account

                $uri='https://management.azure.com{0}/runbooks?api-version=2015-01-01-preview' -f $account.Id
                $runbooks = Invoke-ARMGet -Token $token -Uri $uri
                foreach($runbook in $runbooks.Value) {      
                    Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION -msg ('Discovering Runbook {1} in Automation Account {0}' -f $account.Name, $runbook.Name) -level $TRACE_VERBOSE              
                    Discover-AutomationRunbook -obj $runbook -subscription $SubscriptionId -account $account.Name
                } 
            }
            catch {
                Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ('Error disocverying runbooks for account {0} - {1}' -f $account.name, $Error[0]) $TRACE_WARNING	
	            write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	            Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
                continue;
            }
        }
        else {Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION -msg ('Automation Account {0} filtreed out' -f $account.Name) -level $TRACE_INFO}
    }

	$discoveryData
	If ($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent	
		#it breaks in exception when run insde OpsMgr and POSH IDE	
		$g_API.Return($discoveryData)
	}
	#get all the subscriptions
	Log-Event $STOP_EVENT_ID $EVENT_TYPE_SUCCESS ("has completed successfully in " + ((Get-Date)- ($dtstart)).TotalSeconds + " seconds.") $TRACE_INFO
}
Catch [Exception] {
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ("Main " + $Error) $TRACE_WARNING	
	write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
}
]]>
                </ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>TraceLevel</Name>
                    <Value>$Config/TraceLevel$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>SourceId</Name>
                    <Value>$MPElement$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ManagedEntityId</Name>
                    <Value>$Target/Id$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>TenantADName</Name>
                    <Value>$Config/TenantADName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>SubscriptionId</Name>
                    <Value>$Config/SubscriptionId$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Username</Name>
                    <Value>$Config/AADUserName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Password</Name>
                    <Value>$Config/AADPassword$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ExcludedAccounts</Name>
                    <Value>$Config/ExcludedAccountsList$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ProxyUrl</Name>
                    <Value></Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <StrictErrorHandling>false</StrictErrorHandling>
                <!-- true only for Tasks -->
              </DataSource>
            </MemberModules>
            <Composition>
              <Node ID="DS" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="QND.OMS.Automation.RunbookStatus.DS" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AccountId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RunbookId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" default="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" default="0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" default="^[4|9]$" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" default="-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxRuntimeMinutes" type="xsd:int" default="-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationDays" type="xsd:int" default="-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationSilence" type="xsd:int" default="-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RunMode" type="xsd:string" default="Data" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="MaxRuntimeMinutes" ParameterType="int" Selector="$Config/MaxRuntimeMinutes$" />
          <OverrideableParameter ID="WebHookExpirationDays" ParameterType="int" Selector="$Config/WebHookExpirationDays$" />
          <OverrideableParameter ID="WebHookExpirationSilence" ParameterType="int" Selector="$Config/WebHookExpirationSilence$" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="Probe" TypeID="QND.OMS.Automation.RunbookStatus.PT">
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <TraceLevel>$Config/TraceLevel$</TraceLevel>
                <TenantADName>$Config/TenantADName$</TenantADName>
                <AccountId>$Config/AccountId$</AccountId>
                <RunbookId>$Config/RunbookId$</RunbookId>
                <AADUserName>$Config/AADUserName$</AADUserName>
                <AADPassword>$Config/AADPassword$</AADPassword>
                <LastNJobs>$Config/LastNJobs$</LastNJobs>
                <MaxFailures>$Config/MaxFailures$</MaxFailures>
                <FailureCondition>$Config/FailureCondition$</FailureCondition>
                <MaxAgeHours>$Config/MaxAgeHours$</MaxAgeHours>
                <MaxRuntimeMinutes>$Config/MaxRuntimeMinutes$</MaxRuntimeMinutes>
                <WebHookExpirationDays>$Config/WebHookExpirationDays$</WebHookExpirationDays>
                <WebHookExpirationSilence>$Config/WebHookExpirationSilence$</WebHookExpirationSilence>
                <RunMode>$Config/RunMode$</RunMode>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Probe">
                <Node ID="Scheduler"></Node>
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="QND.OMS.Automation.RunbookStatus.PT" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AccountId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RunbookId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxRuntimeMinutes" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationSilence" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RunMode" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="WebHookExpirationDays" ParameterType="int" Selector="$Config/WebHookExpirationDays$" />
          <OverrideableParameter ID="WebHookExpirationSilence" ParameterType="int" Selector="$Config/WebHookExpirationSilence$" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <ProbeAction ID="POSH" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>Get-AutomationRunbookStatus.ps1</ScriptName>
                <ScriptBody>
                  <![CDATA[

#TO SHOW VERBOSE MESSAGES SET $VerbosePreference="continue"
#SET ErrorLevel to 5 so show discovery info
#https://azure.microsoft.com/en-us/documentation/articles/operational-insights-api-log-search/

#*************************************************************************
# Script Name - Get-AutomationRunbookStatus
# Author	  - Daniele Grandini - Progel spa
# Version  - 1.0 21/10/2015
# Purpose     - 
#               
# Assumptions - 
#				
#               
# Parameters  - TraceLevel
#             - ComputerName
#				- SourceId
#				- ManagedEntityId
# Command Line - .\test.ps1 4 "serverName" '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}' '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}'
# If discovery must be added the followinf parameters
#				SourceId ($ MPElement $ )
#				ManagedEntityId ($ Target/Id $)
#
# Output properties
#
# Status
#
# 1.0 History
#
# (c) Copyright 2015, Progel spa, All Rights Reserved
# Proprietary and confidential to Progel spa              
#
#*************************************************************************


# Get the named parameters
param(
	[Parameter (Mandatory=$True)] [int]$traceLevel,
	[Parameter (Mandatory=$true)] [String]$TenantADName,
	[Parameter (Mandatory=$True)] [String]$AccountId,
	[Parameter (Mandatory=$true)] [String]$Username,
	[Parameter (Mandatory=$true)] [String]$Password,
	[Parameter (Mandatory=$false)] [String]$Proxyurl, #nyi
	[Parameter (Mandatory=$false)] [int]$LastnJobs=5,
	[Parameter (Mandatory=$false)] [int]$MaxFailures=0,
	[Parameter (Mandatory=$false)] [String]$FailureCondition='^[4|9]$',
	[Parameter (Mandatory=$false)] [int]$MaxAge=-1,
	[Parameter (Mandatory=$false)] [int]$MaxRuntime=-1,
	[Parameter (Mandatory=$false)] [String]$RunbookId,
	[Parameter (Mandatory=$false)] [int]$WebHookExpirationDays=-1,
	[Parameter (Mandatory=$false)] [int]$WebHookExpirationSilence=30,
	[Parameter (Mandatory=$false)] [String]$RunMode='Data'
)

	[Threading.Thread]::CurrentThread.CurrentCulture = "en-US"        
	[Threading.Thread]::CurrentThread.CurrentUICulture = "en-US"

#region Constants
#Constants used for event logging
$SCRIPT_NAME			= "Get-AutomationRunbookStatus"
$SCRIPT_ARGS = 15
$SCRIPT_STARTED			= 831
$PROPERTYBAG_CREATED	= 832
$SCRIPT_ENDED			= 835
$SCRIPT_VERSION = "1.0"

#Trace Level Costants
$TRACE_NONE 	= 0
$TRACE_ERROR 	= 1
$TRACE_WARNING = 2
$TRACE_INFO 	= 3
$TRACE_VERBOSE = 4
$TRACE_DEBUG = 5

#Event Type Constants
$EVENT_TYPE_SUCCESS      = 0
$EVENT_TYPE_ERROR        = 1
$EVENT_TYPE_WARNING      = 2
$EVENT_TYPE_INFORMATION  = 4
$EVENT_TYPE_AUDITSUCCESS = 8
$EVENT_TYPE_AUDITFAILURE = 16

#Standard Event IDs
$FAILURE_EVENT_ID = 4000		#errore generico nello script
$SUCCESS_EVENT_ID = 1101
$START_EVENT_ID = 1102
$STOP_EVENT_ID = 1103
$INFO_EVENT_ID = 1104

#TypedPropertyBag
$AlertDataType = 0
$EventDataType	= 2
$PerformanceDataType = 2
$StateDataType       = 3
#endregion

#region Helper Functions
function Log-Params
{
	param($Invocation)
	$line=''
	foreach($key in $Invocation.BoundParameters.Keys) {$line += "$key=$($Invocation.BoundParameters[$key])  "}
	Log-Event $START_EVENT_ID $EVENT_TYPE_INFORMATION  ("Starting script. Invocation Name:$($Invocation.InvocationName)`n Parameters`n $line") $TRACE_INFO
}


function Log-Event
{
	param($eventID, $eventType, $msg, $level)
	
	Write-Verbose ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
	if($level -le $P_TraceLevel)
	{
		Write-Host ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
		$g_API.LogScriptEvent($SCRIPT_NAME,$eventID,$eventType, ($msg + "`n" + "Version :" + $SCRIPT_VERSION))
	}
}

Function Throw-EmptyDiscovery
{
	param($SourceId, $ManagedEntityId)

	$oDiscoveryData = $g_API.CreateDiscoveryData(0, $SourceId, $ManagedEntityId)
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING "Exiting with empty discovery data" $TRACE_INFO
	$oDiscoveryData
	If($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent
		$g_API.Return($oDiscoveryData)
	}
}

Function Throw-KeepDiscoveryInfo
{
param($SourceId, $ManagedEntityId)
	$oDiscoveryData = $g_API.CreateDiscoveryData(0,$SourceId,$ManagedEntityId)
	#Instead of Snapshot discovery, submit Incremental discovery data
	$oDiscoveryData.IsSnapshot = $false
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING "Exiting with null non snapshot discovery data" $TRACE_INFO
	$oDiscoveryData    
	If($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent	
		$g_API.Return($oDiscoveryData)
	}
}
#endregion

Function Throw-StatusBagError
{
	$bag = $g_api.CreatePropertyBag()
	$bag.AddValue("QNDType","Status")
	$bag.AddValue("Status","Error")
	$bag.AddValue("Description","$Error")
	$bag	
}

$automationURI='https://s2.automation.ext.azure.com/api/Orchestrator'
#Start by setting up API object.
	$P_TraceLevel = $TRACE_VERBOSE
	$g_Api = New-Object -comObject 'MOM.ScriptAPI'
	#$g_RegistryStatePath = "HKLM\" + $g_API.GetScriptStateKeyPath($SCRIPT_NAME)

	$dtStart = Get-Date
	$P_TraceLevel = $traceLevel
	Log-Params $MyInvocation

#region LoadModules
try {
	$ResPath = (get-itemproperty -path 'HKLM:\system\currentcontrolset\services\healthservice\Parameters' -Name 'State Directory').'State Directory' + '\Resources'
	if(Test-Path $ResPath) {
		$module = @(get-childitem -path $ResPath -Name OMSSearch.psm1 -Recurse)[0]
	}
	if($module) { $OMSSearchModule = "$ResPath\$module"}
	else {$OMSSearchModule = '.\OMSSearch.psm1'}
    if(! (Get-MOdule -Name OMSSearch)) {
	    If (Test-Path $OMSSearchModule) {Import-Module $OMSSearchModule}
	    else {Throw [System.DllNotFoundException] 'OMSSearch.psm1 not found'}
    }

#now load the AAD client resource. The module I'm using assumes the assembly is in the same directory of the module, but OpsMgr resource deployment uses 2 different folders

	$AssemblyName = 'Microsoft.IdentityModel.Clients.ActiveDirectory'
	$AssemblyVersion = "2.14.0.0"
	$AssemblyPublicKey = "31bf3856ad364e35"

	$DLLPath = "$ResPath\"+@(get-childitem -path $ResPath -Name "$($AssemblyName).dll" -Recurse)[0]
	If (!([AppDomain]::CurrentDomain.GetAssemblies() |Where-Object { $_.FullName -eq "$AssemblyName, Version=$AssemblyVersion, Culture=neutral, PublicKeyToken=$AssemblyPublicKey"}))
	{
		Log-Event $INFO_EVENT_ID $EVENT_TYPE_INFO ("Loading Assembly $AssemblyName") $TRACE_VERBOSE
		Try {
			[Void][System.Reflection.Assembly]::LoadFrom($DLLPath)
		} Catch {
			Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Unable to load $DLLPath. $Error") $TRACE_ERROR
			exit 1
		}
	}

	if (!(get-command -Module OMSSearch -Name Get-AADToken -ErrorAction SilentlyContinue)) {
		Log-Event $START_EVENT_ID $EVENT_TYPE_WARNING ("Get-AADToken Commandlet doesn't exist.") $TRACE_WARNING
		Throw-KeepDiscoveryInfo
		exit 1
	}
	$token = Get-AADToken -TenantADName $TenantADName -Username $Username -Password $Password
	if (! $token) {Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Get-AADToken canno authenticate user $username " + $Error) $TRACE_ERROR; exit 1;}
}
catch {
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Main " + $Error) $TRACE_ERROR
	exit 1
}

#endregion


try
{

	#get a list of runbooks to monitor
	try {
		if (! ([String]::IsNullOrEmpty($RunbookId))) {
			$uri='https://management.azure.com{0}?api-version=2015-01-01-preview' -f $RunbookId
			$runbooks = Invoke-ARMGet -Token $token -Uri $uri
		}
		else {
			$uri='https://management.azure.com{0}/runbooks?api-version=2015-01-01-preview' -f $AccountId
			$runbooks = (Invoke-ARMGet -Token $token -Uri $uri).Value
		}
	}
	catch {
		Throw-StatusBagError
		Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ('Error getting runbooks for {0} - {1} - {2}' -f $AcccountId, $RunbookId, $Error[0]) $TRACE_ERROR
		write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
		Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
	}

		if ($RunMode -ieq 'Data') {
			foreach($runbook in $runbooks) {      
				try {
					Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION `
						-msg ('Processing {0}' `
							-f $runbook.Name) `
						-level $TRACE_VERBOSE   
					$uri='{0}/JobsByRunbook?compositeIdentifier={1}&runbookId={2}&pageLink=&isFirstPage=true' -f $automationURI, $AccountId, $runbook.Name
					$jobs = Invoke-ARMGet -Token $token -Uri $uri
					$lastJobs = @($jobs.Resources | Select-Object -First $lastnJobs)
					$failures = @($lastJobs | where {$_.status -match $FailureCondition}).Count
					$bag = $g_api.CreatePropertyBag()
					$bag.AddValue("QNDType","Data")
					$bag.AddValue('RunbookId', $runbook.Id)
					$lastJobStatus=-1; $lastJobDurationMinutes=-1; $lastJobRuntimeMinutes=-1; $lastJobExecutionTime=-1; $lastJobExecutionAge=-1
					$returnedJobs=-1;$selectedJobs=-1
					$ageError='False'; $runtimeError='False'

				if ($lastJobs.Count -gt 0) {
			
					if ([String]::IsNullOrEmpty($lastJobs[0].EndTime)) {
						$lastJobDurationMinutes= ((Get-Date) - [datetime]($lastJobs[0].createdTime)).TotalMinutes
						$lastJobRuntimeMinutes= ((Get-Date) - [datetime]($lastJobs[0].startTime)).TotalMinutes
						$lastJobExecutionTime = $lastJObs[0].createdTime
						$lastJobExecutionAge = ((Get-Date)- [datetime]($lastJObs[0].createdTime)).TotalHours
					}
					else {
						$lastJobDurationMinutes= ([datetime]($lastJobs[0].EndTime) - [datetime]($lastJobs[0].createdTime)).TotalMinutes
						$lastJobRuntimeMinutes= ([datetime]($lastJobs[0].EndTime) - [datetime]($lastJobs[0].startTime)).TotalMinutes
						$lastJobExecutionTime = $lastJObs[0].endTime
						$lastJobExecutionAge = ((Get-Date)- [datetime]($lastJObs[0].endTime)).TotalHours
					}
					$lastJobStatus = $lastJobs[0].status
					$returnedJobs=$jobs.Resources.Count
					$selectedJobs=$lastjobs.Count

					#return calculated status and input parameters
					$execError=($failures -gt $MaxFailures).ToString()
					if($MaxAge -eq -1) {$ageError='False'} else {$ageError=($lastJobExecutionAge -gt $MaxAge).ToString()}
					if($MaxRuntime -eq -1) {$runtimeError='False'} else {$runtimeError=($lastJobRuntimeMinutes -gt $MaxRuntime).ToString()}

				} 
				#get a list of webhhoks and check if they're about to expire
				$WebHookStatus='OK'
				$daysToExpiration=999
				$WebHookName='none'
				if ($WebHookExpirationDays -ne -1) {
					$uri='{0}/WebhooksForRunbook?compositeIdentifier={1}&runbookName={2}' -f $automationURI, $AccountId, $runbook.Name
					$webhooks = @(Invoke-ARMGet -Token $token -Uri $uri)
					if ($webhooks.count -gt 0) {
						foreach($wh in $webhooks) {
							if ($wh.IsEnabled -ieq 'True') {
								$daysToExpiration = ([datetime]($wh.expirationTime) - (Get-Date)).TotalDays
								if($daysToExpiration -le $WebHookExpirationDays -and $daysToExpiration -gt (-$WebHookExpirationSilence)) {$WebHookStatus='EXPIRE'; $WebHookName=$wh.Name;break;}
							}
						}
					}
				}		

					$bag.AddValue('JobsReturned', $returnedJobs)
					$bag.AddValue('JobsSelected', $selectedJobs)
					$bag.AddValue('Failures', $failures)
					$bag.AddValue('LastJobDurationMinutes', $lastJobDurationMinutes)
					$bag.AddValue('LastJobRuntimeMinutes', $lastJobRuntimeMinutes)
					$bag.AddValue('LastJobStatus', $lastJobStatus)
					$bag.AddValue('LastJobExecutionTime', $lastJobExecutionTime)
					$bag.AddValue('LastJobExecutionAgeHours', $lastJobExecutionAge)

					$bag.AddValue('ExecError', $execError)
					$bag.AddValue('AgeError', $ageError)
					$bag.AddValue('RuntimeError', $runtimeError)

					$bag.AddValue('MaxFailures', $MaxFailures)
					$bag.AddValue('MaxAge', $maxAge)
					$bag.AddValue('MaxRuntime', $maxRuntime)		

					$bag.AddValue('WebHookStatus', $WebHookStatus)
					$bag.AddValue('DaysToExpiration', $daysToExpiration)
					$bag.AddValue('WebHookName', $WebHookName)

					if($traceLevel -eq $TRACE_DEBUG) {$g_API.AddItem($bag)}
					$bag

					Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION `
						-msg ('{0} - retunred jobs {1} selected jobs {2} failures {3} last job status {4} job duration {5} job run time {6} last Execution {7} age {8}' `
							-f $runbook.Name, $jobs.resources.Count, $lastJobs.Count, $failures, $lastjobStatus, $lastJobDurationMinutes, $lastJobRuntimeMinutes, $lastJobExecutionTime, $lastJobExecutionAge) `
						-level $TRACE_VERBOSE              
					}
				catch {
					Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ('Error getting stats for runbook {0} - {1}' -f $runbook.Name, $Error[0]) $TRACE_WARNING	
					write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
					Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
					continue;
				}
			}
		}
		else {
			$bag = $g_api.CreatePropertyBag()
			$bag.AddValue("QNDType","Status")
			$bag.AddValue("Status","OK")
			$bag.AddValue("Description","Connection OK")
			$bag
		}

		If ($traceLevel -eq $TRACE_DEBUG)
		{
			#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent	
			#it breaks in exception when run insde OpsMgr and POSH IDE	
			$g_API.ReturnItems() 
		}
		Log-Event $STOP_EVENT_ID $EVENT_TYPE_SUCCESS ("has completed successfully in " + ((Get-Date)- ($dtstart)).TotalSeconds + " seconds.") $TRACE_INFO
}
Catch [Exception] {
	Throw-StatusBagError
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ("Main " + $Error) $TRACE_WARNING	
	write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
}
]]>
                </ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>TraceLevel</Name>
                    <Value>$Config/TraceLevel$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>TenantADName</Name>
                    <Value>$Config/TenantADName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>AccountId</Name>
                    <Value>$Config/AccountId$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Username</Name>
                    <Value>$Config/AADUserName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Password</Name>
                    <Value>$Config/AADPassword$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ProxyUrl</Name>
                    <Value></Value>
                  </Parameter>
                  <Parameter>
                    <Name>LastnJobs</Name>
                    <Value>$Config/LastNJobs$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>MaxFailures</Name>
                    <Value>$Config/MaxFailures$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>FailureCondition</Name>
                    <Value>$Config/FailureCondition$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>MaxAge</Name>
                    <Value>$Config/MaxAgeHours$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>MaxRuntime</Name>
                    <Value>$Config/MaxRuntimeMinutes$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>RunbookId</Name>
                    <Value>$Config/RunbookId$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>WebHookExpirationDays</Name>
                    <Value>$Config/WebHookExpirationDays$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>WebHookExpirationSilence</Name>
                    <Value>$Config/WebHookExpirationSilence$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>RunMode</Name>
                    <Value>$Config/RunMode$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <StrictErrorHandling>false</StrictErrorHandling>
                <!-- true only for Tasks -->
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="POSH" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <InputType>System!System.BaseData</InputType>
      </ProbeActionModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="QND.OMS.Automation.RunbookStatusGenericCooked.MT" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="Healthy" />
          <MonitorTypeState ID="UnHealthy" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <!-- I'm lazy and don't want to copy and paste the same monitor type so let's do some redundancy at the parameter level -->
          <xsd:element name="Property" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxThreshold" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AccountId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RunbookId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" default="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" default="0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" default="^[4|9]$" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" default="-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxRuntimeMinutes" type="xsd:int" default="-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="MaxRuntimeMinutes" ParameterType="int" Selector="$Config/MaxRuntimeMinutes$" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="QND.OMS.Automation.RunbookStatus.DS">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <TraceLevel>$Config/TraceLevel$</TraceLevel>
              <TenantADName>$Config/TenantADName$</TenantADName>
              <AccountId>$Config/AccountId$</AccountId>
              <!-- RunbookId is not used in this monitor -->
              <RunbookId></RunbookId>
              <AADUserName>$Config/AADUserName$</AADUserName>
              <AADPassword>$Config/AADPassword$</AADPassword>
              <LastNJobs>$Config/LastNJobs$</LastNJobs>
              <MaxFailures>$Config/MaxFailures$</MaxFailures>
              <FailureCondition>$Config/FailureCondition$</FailureCondition>
              <MaxAgeHours>$Config/MaxAgeHours$</MaxAgeHours>
              <MaxRuntimeMinutes>$Config/MaxRuntimeMinutes$</MaxRuntimeMinutes>
              <WebHookExpirationDays>-1</WebHookExpirationDays>
              <WebHookExpirationSilence>-1</WebHookExpirationSilence>
              <RunMode>Data</RunMode>
            </DataSource>
            <ConditionDetection ID="DataFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='QNDType']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Data</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='RunbookId']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">$Config/RunbookId$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="HealthyCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='$Config/Property$']</XPathQuery>
                  </ValueExpression>
                  <Operator>LessEqual</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/MaxThreshold$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="UnHealthyCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='$Config/Property$']</XPathQuery>
                  </ValueExpression>
                  <Operator>Greater</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/MaxThreshold$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Healthy">
              <Node ID="HealthyCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS" />
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="UnHealthy">
              <Node ID="UnHealthyCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS"></Node>
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="QND.OMS.Automation.RunbookStatusGenericNotCooked.MT" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="Healthy" />
          <MonitorTypeState ID="UnHealthy" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <!-- I'm lazy and don't want to copy and paste the same monitor type so let's do some redundancy at the parameter level -->
          <xsd:element name="Property" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxThreshold" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AccountId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RunbookId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" default="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" default="0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" default="^[4|9]$" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" default="-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxRuntimeMinutes" type="xsd:int" default="-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="MaxRuntimeMinutes" ParameterType="int" Selector="$Config/MaxRuntimeMinutes$" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="QND.OMS.Automation.RunbookStatus.DS">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <TraceLevel>$Config/TraceLevel$</TraceLevel>
              <TenantADName>$Config/TenantADName$</TenantADName>
              <AccountId>$Config/AccountId$</AccountId>
              <RunbookId>$Config/RunbookId$</RunbookId>
              <AADUserName>$Config/AADUserName$</AADUserName>
              <AADPassword>$Config/AADPassword$</AADPassword>
              <LastNJobs>$Config/LastNJobs$</LastNJobs>
              <MaxFailures>$Config/MaxFailures$</MaxFailures>
              <FailureCondition>$Config/FailureCondition$</FailureCondition>
              <MaxAgeHours>$Config/MaxAgeHours$</MaxAgeHours>
              <MaxRuntimeMinutes>$Config/MaxRuntimeMinutes$</MaxRuntimeMinutes>
              <WebHookExpirationDays>-1</WebHookExpirationDays>
              <WebHookExpirationSilence>-1</WebHookExpirationSilence>
              <RunMode>Data</RunMode>
            </DataSource>
            <ConditionDetection ID="DataFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='QNDType']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Data</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='RunbookId']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">$Config/RunbookId$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="HealthyCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='$Config/Property$']</XPathQuery>
                  </ValueExpression>
                  <Operator>LessEqual</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/MaxThreshold$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="UnHealthyCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='$Config/Property$']</XPathQuery>
                  </ValueExpression>
                  <Operator>Greater</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/MaxThreshold$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Healthy">
              <Node ID="HealthyCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS" />
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="UnHealthy">
              <Node ID="UnHealthyCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS"></Node>
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="QND.OMS.Automation.RunbookWebHookExpirationCooked.MT" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="Valid" />
          <MonitorTypeState ID="AboutToExpire" />
          <MonitorTypeState ID="Expired" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AccountId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RunbookId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" default="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" default="0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" default="^[4|9]$" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" default="-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxRuntimeMinutes" type="xsd:int" default="-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationDays" type="xsd:int" default="-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WebHookExpirationSilence" type="xsd:int" default="-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="MaxRuntimeMinutes" ParameterType="int" Selector="$Config/MaxRuntimeMinutes$" />
          <OverrideableParameter ID="WebHookExpirationDays" ParameterType="int" Selector="$Config/WebHookExpirationDays$" />
          <OverrideableParameter ID="WebHookExpirationSilence" ParameterType="int" Selector="$Config/WebHookExpirationSilence$" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="QND.OMS.Automation.RunbookStatus.DS">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <TraceLevel>$Config/TraceLevel$</TraceLevel>
              <TenantADName>$Config/TenantADName$</TenantADName>
              <AccountId>$Config/AccountId$</AccountId>
              <!-- RunbookId is not used in this monitor -->
              <RunbookId></RunbookId>
              <AADUserName>$Config/AADUserName$</AADUserName>
              <AADPassword>$Config/AADPassword$</AADPassword>
              <LastNJobs>$Config/LastNJobs$</LastNJobs>
              <MaxFailures>$Config/MaxFailures$</MaxFailures>
              <FailureCondition>$Config/FailureCondition$</FailureCondition>
              <MaxAgeHours>$Config/MaxAgeHours$</MaxAgeHours>
              <MaxRuntimeMinutes>$Config/MaxRuntimeMinutes$</MaxRuntimeMinutes>
              <WebHookExpirationDays>$Config/WebHookExpirationDays$</WebHookExpirationDays>
              <WebHookExpirationSilence>$Config/WebHookExpirationSilence$</WebHookExpirationSilence>
              <RunMode>Data</RunMode>
            </DataSource>
            <ConditionDetection ID="DataFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='QNDType']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Data</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='RunbookId']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">$Config/RunbookId$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="ValidCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='DaysToExpiration']</XPathQuery>
                  </ValueExpression>
                  <Operator>Greater</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/WebHookExpirationDays$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="AboutToExpireCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Double">Property[@Name='DaysToExpiration']</XPathQuery>
                      </ValueExpression>
                      <Operator>LessEqual</Operator>
                      <ValueExpression>
                        <Value Type="Double">$Config/WebHookExpirationDays$</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Double">Property[@Name='DaysToExpiration']</XPathQuery>
                      </ValueExpression>
                      <Operator>Greater</Operator>
                      <ValueExpression>
                        <Value Type="Double">0</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </And>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="ExpiredCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='DaysToExpiration']</XPathQuery>
                  </ValueExpression>
                  <Operator>Less</Operator>
                  <ValueExpression>
                    <Value Type="Double">0</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Valid">
              <Node ID="ValidCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS" />
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="AboutToExpire">
              <Node ID="AboutToExpireCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS"></Node>
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="Expired">
              <Node ID="ExpiredCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS"></Node>
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="QND.OMS.Automation.Connectivity.MT" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="Healthy" />
          <MonitorTypeState ID="UnReachable" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AccountId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="QND.OMS.Automation.RunbookStatus.DS">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <TraceLevel>$Config/TraceLevel$</TraceLevel>
              <TenantADName>$Config/TenantADName$</TenantADName>
              <AccountId>$Config/AccountId$</AccountId>
              <RunbookId></RunbookId>
              <AADUserName>$Config/AADUserName$</AADUserName>
              <AADPassword>$Config/AADPassword$</AADPassword>
              <LastNJobs>1</LastNJobs>
              <MaxFailures>0</MaxFailures>
              <FailureCondition>^[4|9]$</FailureCondition>
              <MaxAgeHours>-1</MaxAgeHours>
              <MaxRuntimeMinutes>-1</MaxRuntimeMinutes>
              <WebHookExpirationDays>-1</WebHookExpirationDays>
              <WebHookExpirationSilence>-1</WebHookExpirationSilence>
              <RunMode>Status</RunMode>
            </DataSource>
            <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='QNDType']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Status</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="ConnectOKCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">OK</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="ConnectKOCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Error</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Healthy">
              <Node ID="ConnectOKCD">
                <Node ID="Filter">
                  <Node ID="DS" />
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="UnReachable">
              <Node ID="ConnectKOCD">
                <Node ID="Filter">
                  <Node ID="DS"></Node>
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="QND.OMS.Automation.Account.Discovery" ConfirmDelivery="true" Enabled="true" Priority="Normal" Remotable="true" Target="OMS!QND.OMS.Azure.Subscription">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="QND.OMS.Automation.Account" />
          <DiscoveryClass TypeID="QND.OMS.Automation.Runbook" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="QND.OMS.Automation.Discovery.DS">
          <TraceLevel>2</TraceLevel>
          <IntervalSeconds>28800</IntervalSeconds>
          <SyncTime></SyncTime>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TenantADName>$Target/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Tenant$</TenantADName>
          <SubscriptionId>$Target/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Id$</SubscriptionId>
          <AADUserName>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/Password$</AADPassword>
          <ExcludedAccountsList>Workspace</ExcludedAccountsList>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Monitors>
      <AggregateMonitor ID="QND.OMS.Automation.Account.RunbookAvailability.AggMonitor" Accessibility="Public" Enabled="true" ParentMonitorID="Health!System.Health.AvailabilityState" Priority="Normal" Remotable="true" Target="QND.OMS.Automation.Account">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </AggregateMonitor>
      <UnitMonitor ID="QND.OMS.Automation.Account.Connectivity.Monitor" Accessibility="Public" Enabled="true" Target="QND.OMS.Automation.Account" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Automation.Connectivity.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Automation.Account.Connectivity.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter2>$Data/Context/Property[@Name="Description"]$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Healthy" MonitorTypeStateID="Healthy" HealthState="Success" />
          <OperationalState ID="UnHealthy" MonitorTypeStateID="UnReachable" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>3611</IntervalSeconds>
          <SyncTime></SyncTime>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <TenantADName>$Target/Host/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Tenant$</TenantADName>
          <AccountId>$Target/Property[Type="QND.OMS.Automation.Account"]/Id$</AccountId>
          <AADUserName>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/Password$</AADPassword>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Automation.Runbook.ExecStatus.Monitor" Accessibility="Public" Enabled="true" Target="QND.OMS.Automation.Runbook" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Automation.RunbookStatusGenericCooked.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Automation.Runbook.ExecStatus.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="Failures"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name="MaxFailures"]$</AlertParameter2>
            <AlertParameter3>$Data/Context/Property[@Name="JobsSelected"]$</AlertParameter3>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Successful" MonitorTypeStateID="Healthy" HealthState="Success" />
          <OperationalState ID="Failed" MonitorTypeStateID="UnHealthy" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>3601</IntervalSeconds>
          <SyncTime></SyncTime>
          <Property>Failures</Property>
          <MaxThreshold>0</MaxThreshold>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <TenantADName>$Target/Host/Host/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Tenant$</TenantADName>
          <AccountId>$Target/Host/Property[Type="QND.OMS.Automation.Account"]/Id$</AccountId>
          <RunbookId>$Target/Property[Type="QND.OMS.Automation.Runbook"]/Id$</RunbookId>
          <AADUserName>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/Password$</AADPassword>
          <LastNJobs>1</LastNJobs>
          <MaxFailures>0</MaxFailures>
          <FailureCondition>^[4|9]$</FailureCondition>
          <MaxAgeHours>-1</MaxAgeHours>
          <MaxRuntimeMinutes>-1</MaxRuntimeMinutes>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor" Accessibility="Public" Enabled="true" Target="QND.OMS.Automation.Runbook" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Automation.RunbookWebHookExpirationCooked.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="DaysToExpiration"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name="WebHookName"]$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Valid" MonitorTypeStateID="Valid" HealthState="Success" />
          <OperationalState ID="AboutToExpire" MonitorTypeStateID="AboutToExpire" HealthState="Warning" />
          <OperationalState ID="Expired" MonitorTypeStateID="Expired" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>86400</IntervalSeconds>
          <SyncTime></SyncTime>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <TenantADName>$Target/Host/Host/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Tenant$</TenantADName>
          <AccountId>$Target/Host/Property[Type="QND.OMS.Automation.Account"]/Id$</AccountId>
          <RunbookId>$Target/Property[Type="QND.OMS.Automation.Runbook"]/Id$</RunbookId>
          <AADUserName>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/Password$</AADPassword>
          <LastNJobs>1</LastNJobs>
          <MaxFailures>0</MaxFailures>
          <FailureCondition>^[4|9]$</FailureCondition>
          <MaxAgeHours>-1</MaxAgeHours>
          <MaxRuntimeMinutes>-1</MaxRuntimeMinutes>
          <WebHookExpirationDays>30</WebHookExpirationDays>
          <WebHookExpirationSilence>30</WebHookExpirationSilence>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Automation.Runbook.RunAge.Monitor" Accessibility="Public" Enabled="false" Target="QND.OMS.Automation.Runbook" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Automation.RunbookStatusGenericNotCooked.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Automation.Runbook.RunAge.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="LastJobExecutionTime"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name="LastJobExecutionAgeHours"]$</AlertParameter2>
            <AlertParameter3>$Data/Context/Property[@Name="MaxAge"]$</AlertParameter3>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Successful" MonitorTypeStateID="Healthy" HealthState="Success" />
          <OperationalState ID="Failed" MonitorTypeStateID="UnHealthy" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>3617</IntervalSeconds>
          <SyncTime></SyncTime>
          <Property>LastJobExecutionAgeHours</Property>
          <MaxThreshold>24</MaxThreshold>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <TenantADName>$Target/Host/Host/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Tenant$</TenantADName>
          <AccountId>$Target/Host/Property[Type="QND.OMS.Automation.Account"]/Id$</AccountId>
          <RunbookId>$Target/Property[Type="QND.OMS.Automation.Runbook"]/Id$</RunbookId>
          <AADUserName>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/Password$</AADPassword>
          <LastNJobs>1</LastNJobs>
          <MaxFailures>0</MaxFailures>
          <FailureCondition>^[4|9]$</FailureCondition>
          <MaxAgeHours>24</MaxAgeHours>
          <MaxRuntimeMinutes>-1</MaxRuntimeMinutes>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Automation.Runbook.LongRunning.Monitor" Accessibility="Public" Enabled="false" Target="QND.OMS.Automation.Runbook" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Automation.RunbookStatusGenericNotCooked.MT" ConfirmDelivery="false">
        <Category>PerformanceHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Automation.Runbook.LongRunning.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="LastJobRuntimeMinutes"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name="MaxRuntime"]$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Successful" MonitorTypeStateID="Healthy" HealthState="Success" />
          <OperationalState ID="Failed" MonitorTypeStateID="UnHealthy" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>3737</IntervalSeconds>
          <SyncTime></SyncTime>
          <Property>LastJobRuntimeMinutes</Property>
          <MaxThreshold>30</MaxThreshold>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <TenantADName>$Target/Host/Host/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Tenant$</TenantADName>
          <AccountId>$Target/Host/Property[Type="QND.OMS.Automation.Account"]/Id$</AccountId>
          <RunbookId>$Target/Property[Type="QND.OMS.Automation.Runbook"]/Id$</RunbookId>
          <AADUserName>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/Password$</AADPassword>
          <LastNJobs>1</LastNJobs>
          <MaxFailures>0</MaxFailures>
          <FailureCondition>^[4|9]$</FailureCondition>
          <MaxAgeHours>-1</MaxAgeHours>
          <MaxRuntimeMinutes>30</MaxRuntimeMinutes>
        </Configuration>
      </UnitMonitor>
      <DependencyMonitor ID="QND.OMS.Automation.AccountToRunbookExecStatus.DepMonitor" Accessibility="Public" Enabled="true" MemberMonitor="QND.OMS.Automation.Runbook.ExecStatus.Monitor" ParentMonitorID="QND.OMS.Automation.Account.RunbookAvailability.AggMonitor" Priority="Normal" RelationshipType="QND.OMS.Automation.AccountContainsRunbook" Remotable="true" Target="QND.OMS.Automation.Account">
        <Category>AvailabilityHealth</Category>
        <Algorithm>Percentage</Algorithm>
        <AlgorithmParameter>30</AlgorithmParameter>
        <MemberInMaintenance>Success</MemberInMaintenance>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="QND.OMS.Automation.AccountToRunbookRunAge.DepMonitor" Accessibility="Public" Enabled="true" MemberMonitor="QND.OMS.Automation.Runbook.RunAge.Monitor" ParentMonitorID="QND.OMS.Automation.Account.RunbookAvailability.AggMonitor" Priority="Normal" RelationshipType="QND.OMS.Automation.AccountContainsRunbook" Remotable="true" Target="QND.OMS.Automation.Account">
        <Category>AvailabilityHealth</Category>
        <Algorithm>Percentage</Algorithm>
        <AlgorithmParameter>30</AlgorithmParameter>
        <MemberInMaintenance>Success</MemberInMaintenance>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="QND.OMS.Automation.AccountToRunbookWebHookExpiration.DepMonitor" Accessibility="Public" Enabled="true" MemberMonitor="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor" ParentMonitorID="QND.OMS.Automation.Account.RunbookAvailability.AggMonitor" Priority="Normal" RelationshipType="QND.OMS.Automation.AccountContainsRunbook" Remotable="true" Target="QND.OMS.Automation.Account">
        <Category>AvailabilityHealth</Category>
        <Algorithm>Percentage</Algorithm>
        <AlgorithmParameter>30</AlgorithmParameter>
        <MemberInMaintenance>Success</MemberInMaintenance>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="QND.OMS.Automation.AccountToRunbookLongRunning.DepMonitor" Accessibility="Public" Enabled="true" MemberMonitor="QND.OMS.Automation.Runbook.LongRunning.Monitor" ParentMonitorID="Health!System.Health.PerformanceState" Priority="Normal" RelationshipType="QND.OMS.Automation.AccountContainsRunbook" Remotable="true" Target="QND.OMS.Automation.Account">
        <Category>AvailabilityHealth</Category>
        <Algorithm>Percentage</Algorithm>
        <AlgorithmParameter>30</AlgorithmParameter>
        <MemberInMaintenance>Success</MemberInMaintenance>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
    </Monitors>
  </Monitoring>
  <Presentation>
    <Views>
      <View ID="QND.OMS.Automation.AccountState.View" Accessibility="Public" Enabled="true" Target="QND.OMS.Automation.Account" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <InMaintenanceMode>false</InMaintenanceMode>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>State</Name>
            <Id>QND.OMS.Automation.Account</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>InMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>Path</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Display Name</Name>
            <Id>System.Entity/DisplayName</Id>
          </ColumnInfo>
        </Presentation>
        <Target />
      </View>
      <View ID="QND.OMS.Automation.RunbookState.View" Accessibility="Public" Enabled="true" Target="QND.OMS.Automation.Runbook" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria></Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>State</Name>
            <Id>QND.OMS.Automation.Runbook</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>InMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>Path</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Display Name</Name>
            <Id>System.Entity/DisplayName</Id>
          </ColumnInfo>
        </Presentation>
        <Target />
      </View>
    </Views>
    <Folders>
      <Folder ID="QND.OMS.Automation.Folder" ParentFolder="OMS!QND.OMS.Folders" Accessibility="Public" />
    </Folders>
    <FolderItems>
      <FolderItem ID="QND.OMS.Automation.AccountState.FldrItem" ElementID="QND.OMS.Automation.AccountState.View" Folder="QND.OMS.Automation.Folder" />
      <FolderItem ID="QND.OMS.Automation.RunbookState.FldrItem" ElementID="QND.OMS.Automation.RunbookState.View" Folder="QND.OMS.Automation.Folder" />
    </FolderItems>
    <StringResources>
      <StringResource ID="QND.OMS.Automation.Account.Connectivity.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Automation.Runbook.ExecStatus.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Automation.Runbook.RunAge.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Automation.Runbook.LongRunning.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor.AlertMessage" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="QND.OMS.Automation.AccountToRunbookExecStatus.DepMonitor">
          <Name>Execution Status</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account.Connectivity.Monitor.AlertMessage">
          <Name>QND - Azure Automation Account Unreachable</Name>
          <Description>The account is unreachable. Error:{0}</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account.Connectivity.Monitor">
          <Name>Connectivity</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.AccountToRunbookRunAge.DepMonitor">
          <Name>Last Exectuion Time</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.AccountToRunbookLongRunning.DepMonitor">
          <Name>Runbooks running time</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.AccountToRunbookWebHookExpiration.DepMonitor">
          <Name>WebHooks Validity</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account.RunbookAvailability.AggMonitor">
          <Name>Runbooks</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account">
          <Name>Azure Automation Account</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account" SubElementID="Id">
          <Name>Id</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account" SubElementID="Name">
          <Name>Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account" SubElementID="ResourceGroup">
          <Name>Resource Group</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account" SubElementID="Subscription">
          <Name>Subscription Id</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account" SubElementID="Location">
          <Name>Azure Datacenter</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account" SubElementID="Type">
          <Name>Azure Type</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Account" SubElementID="Sku">
          <Name>Sku Type</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook">
          <Name>Azure Automation Runbook</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook" SubElementID="Id">
          <Name>Id</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook" SubElementID="Name">
          <Name>Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook" SubElementID="Location">
          <Name>Azure Datacenter</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook" SubElementID="Type">
          <Name>Azure Type</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook" SubElementID="RunbookType">
          <Name>Runbook Type</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation">
          <Name>QND - Azure OMS Automation Monitoring</Name>
          <Description>Community based monitoring for Azure OMS Automation</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Folder">
          <Name>Azure Automation</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.AccountState.View">
          <Name>Accounts State</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.RunbookState.View">
          <Name>Runbook States</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.ExecStatus.Monitor">
          <Name>Execution Result</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.ExecStatus.Monitor.AlertMessage">
          <Name>QND - Azure Automation Runbook execution failed</Name>
          <Description>The runbook failures count {0} is over the threshold set {1} over the last {2} runs.
              More details in the alert context
          </Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.RunAge.Monitor">
          <Name>Last Run Age</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.RunAge.Monitor.AlertMessage">
          <Name>QND - Azure Automation Runbook last execution too old</Name>
          <Description>The runbook last run is dated {0} the age in hours {1} is over the threshold set at {2} hours.
              More details in the alert context
          </Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.LongRunning.Monitor">
          <Name>Execution time</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.LongRunning.Monitor.AlertMessage">
          <Name>QND - Azure Automation Runbook execution is taking too long</Name>
          <Description>
            The last runbook execution took {0} minutes which is over the set threshold of {1}.
            More details in the alert context
          </Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor">
          <Name>WebHook Validity</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor.AlertMessage">
          <Name>QND - Azure Automation Runbook webhook expired or near expiration</Name>
          <Description>
            One or more web hooks are expired or about to expire. Days to expiration {0} sample web hook name {1}.
            More details in the alert context
          </Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles>
        <KnowledgeArticle ElementID="QND.OMS.Automation.Account.Connectivity.Monitor">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>The monitor check for ARM API reachability for a specific automation account. It executes a simple query using the defined credentials for the tenant the workspace is in. Possibile states</maml:para>
              <maml:list>
                <maml:listItem>
                  <maml:para>Healthy: the connection is available.</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>Error: resource pool servers cannot erach the search api for the workspace.</maml:para>
                </maml:listItem>
              </maml:list>
              <maml:para>For more info see <maml:navigationLink><maml:linkText>GitHub Wiki</maml:linkText><maml:uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki/Automation-Connectivity-Monitor" /></maml:navigationLink></maml:para>
            </maml:section>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Configuration</maml:title>
              <maml:para>The following options can be configured on this monitor:</maml:para>
              <maml:table>
                <maml:row>
                  <maml:entry>
                    <maml:para>Option</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>Definition</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>Default</maml:para>
                  </maml:entry>
                </maml:row>
                <maml:row>
                  <maml:entry>
                    <maml:para>IntervalSeconds</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>Amount of time in seconds between checks of the connectivity status</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>3611 seconds</maml:para>
                  </maml:entry>
                </maml:row>
                <maml:row>
                  <maml:entry>
                    <maml:para>Sync Time</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>Optional time wihtin the hour to sync the check exectuion to</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para></maml:para>
                  </maml:entry>
                </maml:row>
                <maml:row>
                  <maml:entry>
                    <maml:para>TimeoutSeconds</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>Amount of time in seconds to wait for script execution and hance for API Search response</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>30 seconds</maml:para>
                  </maml:entry>
                </maml:row>
                <maml:row>
                  <maml:entry>
                    <maml:para>TraceLevel</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>Debugging level (0-5) anything above 2 will log clear text password in eventlog</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>2</maml:para>
                  </maml:entry>
                </maml:row>
              </maml:table>
            </maml:section>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Causes</maml:title>
              <maml:para>There three known causes of errors</maml:para>
              <maml:list>
                <maml:listItem>
                  <maml:para>OMS service has issues</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>Your proxy /connectivity infrastructure to the cloud has issue</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>The runas account used to connect to the workspace is no longer valid / has an expired password</maml:para>
                </maml:listItem>
              </maml:list>
              <maml:para>The alert context tries to give a specific cause for any issue</maml:para>
            </maml:section>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Resolutions</maml:title>
              <maml:para>Check the three known causes and fix any issue</maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="QND.OMS.Automation.Runbook.ExecStatus.Monitor">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>The monitor checks the execution status of a runbook. The monitor can be tailored and configured to fit most needs and runbook types. 
              Possibile states</maml:para>
              <maml:list>
                <maml:listItem>
                  <maml:para>Successfrul / Healthy: the runbook exectuion status is successful.</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>Failed / error: the runbook is failing not performing its intended job</maml:para>
                </maml:listItem>
              </maml:list>
              <maml:para>
                For more info see <maml:navigationLink><maml:linkText>GitHub Wiki</maml:linkText><maml:uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki/Automation-Runbook-Exec-Status-Monitor" /></maml:navigationLink></maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="QND.OMS.Automation.Runbook.WebHookExpiration.Monitor">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>
                The monitor checks the webhooks expiration date and alerts when it gets within the specified number of days.
                Possibile states
              </maml:para>
              <maml:list>
                <maml:listItem>
                  <maml:para>Valid / Healthy: the webhook is not expiring soon</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>AboutToExpire / warning: the webhook is close to expire, but it hasn't yet</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>Expired / error: the webhook is expired and connot be used anymore</maml:para>
                </maml:listItem>
              </maml:list>
              <maml:para>
                For more info see <maml:navigationLink><maml:linkText>GitHub Wiki</maml:linkText><maml:uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki/Automation-Runbook-Webhook-Expiration-Monitor" /></maml:navigationLink></maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="QND.OMS.Automation.Runbook.RunAge.Monitor">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>
                The monitor, disabled by default, checks is it's too long since the last runbook execution.
                Possibile states
              </maml:para>
              <maml:list>
                <maml:listItem>
                  <maml:para>Successful / Healthy: the runbook has been exectuted within the threshold set</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>Failed / error: the runbook has not been executed within the threshold set</maml:para>
                </maml:listItem>
              </maml:list>
              <maml:para>
                For more info see <maml:navigationLink><maml:linkText>GitHub Wiki</maml:linkText><maml:uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki/Automation-Runbook-Run-Age-Monitor" /></maml:navigationLink></maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="QND.OMS.Automation.Runbook.LongRunning.Monitor">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>
                The monitor, disabled by default, checks for long running runbooks. A long running runbook is a runbook which execution time takes more than the threshold set.
                Possibile states
              </maml:para>
              <maml:list>
                <maml:listItem>
                  <maml:para>Successful / Healthy: the runbook execution time is within the threshold set</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>Failed / error: the runbook exectuion time is over the threshold set</maml:para>
                </maml:listItem>
              </maml:list>
              <maml:para>
                For more info see <maml:navigationLink><maml:linkText>GitHub Wiki</maml:linkText><maml:uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki/Automation-Runbook-Longrunning-Monitor" /></maml:navigationLink></maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="QND.OMS.Automation">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>This community based management pack check for OMS Automation health.</maml:para>
            </maml:section>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Configuration</maml:title>
              <maml:para>
                For more info on MP configuration see <maml:navigationLink><maml:linkText>GitHub Wiki Home page for the project</maml:linkText><maml:uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki" /></maml:navigationLink></maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
      </KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>