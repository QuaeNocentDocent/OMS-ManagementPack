<?xml version="1.0" encoding="utf-8"?>
<ManagementPack SchemaVersion="2.0" ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Manifest>
    <Identity>
      <ID>QND.OMS.Backup</ID>
      <Version>1.0.0.71</Version>
    </Identity>
    <Name>QND.OMS.Backup</Name>
    <References>
      <Reference Alias="DPM">
        <ID>Microsoft.SystemCenter.DataProtectionManager.2012.Library</ID>
        <Version>4.2.1276.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8427.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="OMS">
        <ID>QND.OMS</ID>
        <Version>1.0.0.53</Version>
        <PublicKeyToken>e5fcf8e8afa3370a</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="QND.OMS.Backup.Base" Base="System!System.ApplicationComponent" Accessibility="Internal" Abstract="true" Hosted="false" Singleton="false">
          <Property ID="Id" Key="false" Type="string" MaxLength="512" />
          <Property ID="Type" Key="false" Type="string" />
        </ClassType>
        <ClassType ID="QND.OMS.Backup.Vault" Base="QND.OMS.Backup.Base" Accessibility="Internal" Abstract="false" Hosted="true" Singleton="false">
          <Property ID="Name" Key="true" Type="string" />
          <Property ID="Location" Key="false" Type="string" />
          <Property ID="ResourceGroup" Key="false" Type="string" />
          <!-- included even if we have an hosting relationship to make easier some type of query -->
          <Property ID="Subscription" Key="false" Type="string" />
          <Property ID="Sku" Key="false" Type="string" />
        </ClassType>
        <ClassType ID="QND.OMS.Backup.Container" Base="QND.OMS.Backup.Base" Accessibility="Internal" Abstract="false" Hosted="true" Singleton="false">
          <Property ID="Name" Key="true" Type="string" />
          <Property ID="ContainerType" Key="false" Type="string" />
        </ClassType>
        <ClassType ID="QND.OMS.Backup.ProtectedItem" Base="QND.OMS.Backup.Base" Accessibility="Internal" Abstract="false" Hosted="true" Singleton="false">
          <Property ID="Name" Key="true" Type="string" />
          <Property ID="ItemType" Key="false" Type="string" />
          <Property ID="PolicyName" Key="false" Type="string" />
        </ClassType>
        <ClassType ID="QND.OMS.Backup.Agent" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.LocalApplication" Hosted="true" Singleton="false" Extension="false" />
        <ClassType ID="QND.OMS.Backup.Agent.Policy" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false" Extension="false">
          <Property ID="PolicyName" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="RetentionDays" Type="int" AutoIncrement="false" Key="false" CaseSensitive="false" Required="false" Scale="0" />
        </ClassType>
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="QND.OMS.Backup.SubscriptionContainsVault" Abstract="false" Accessibility="Public" Base="System!System.Hosting">
          <Source ID="Subscription" Type="OMS!QND.OMS.Azure.Subscription" />
          <Target ID="Vault" Type="QND.OMS.Backup.Vault" />
        </RelationshipType>
        <RelationshipType ID="QND.OMS.Backup.VaultContainsContainer" Abstract="false" Accessibility="Public" Base="System!System.Hosting">
          <Source ID="Vault" Type="QND.OMS.Backup.Vault" />
          <Target ID="Container" Type="QND.OMS.Backup.Container" />
        </RelationshipType>
        <RelationshipType ID="QND.OMS.Backup.ContainerContainsItem" Abstract="false" Accessibility="Public" Base="System!System.Hosting">
          <Source ID="Container" Type="QND.OMS.Backup.Container" />
          <Target ID="Item" Type="QND.OMS.Backup.ProtectedItem" />
        </RelationshipType>
        <RelationshipType ID="QND.OMS.BackupAgentHostsPolicy" Abstract="false" Base="System!System.Hosting" Accessibility="Public">
          <Source ID="Source" Type="QND.OMS.Backup.Agent" />
          <Target ID="Target" Type="QND.OMS.Backup.Agent.Policy" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
    <ModuleTypes>
      <DataSourceModuleType ID="QND.OMS.Backup.Discovery.DS" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element name="TraceLevel" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SubscriptionId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ExcludedVaultsList" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TraceLevel" Selector="$Config/TraceLevel$" ParameterType="int" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="ExcludedVaultsList" Selector="$Config/ExcludedVaultsList$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <ScriptName>Discover-OMSAzureBackup.ps1</ScriptName>
                <ScriptBody>
                  <![CDATA[## This discovery needs to be splitted 'cause potentially can discover a huge number of entities
## Gorup memeberhsip must be changed and split in diffrent rules using the properties we're setting

#TO SHOW VERBOSE MESSAGES SET $VerbosePreference="continue"
#SET ErrorLevel to 5 so show discovery info
#https://azure.microsoft.com/en-us/documentation/articles/operational-insights-api-log-search/

#*************************************************************************
# Script Name - Discover-OMSAzureBackup
# Author	  - Daniele Grandini
# Version  - 1.0 20.10.2015
# Purpose     - 
#               
# Assumptions - 
#				
#               
# Parameters  - TraceLevel
#             - ComputerName
#				- SourceId
#				- ManagedEntityId
# Command Line - .\test.ps1 4 "serverName" '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}' '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}'
# If discovery must be added the followinf parameters
#				SourceId ($ MPElement $ )
#				ManagedEntityId ($ Target/Id $)
#
# Output properties
#
# Status
#
# 1.0 History
#	  1.0 06.08.2010 DG First Release
#     1.5 15.02.2014 DG minor cosmetics
#
# (c) Copyright 2015, Progel spa, All Rights Reserved
# Proprietary and confidential to Progel srl              
#
#*************************************************************************


# Get the named parameters
param(
[Parameter (Mandatory=$True)] [int]$traceLevel,
[Parameter (Mandatory=$true)] [string]$sourceID,
[Parameter (Mandatory=$true)] [string]$ManagedEntityId,
[Parameter (Mandatory=$true)] [String]$TenantADName,
[Parameter (Mandatory=$true)] [String]$SubscriptionId,
[Parameter (Mandatory=$true)] [String]$Username,
[Parameter (Mandatory=$true)] [String]$Password,
[Parameter (Mandatory=$false)] [String]$ExcludedVaults,
[String]$Proxyurl #nyi

)

	[Threading.Thread]::CurrentThread.CurrentCulture = "en-US"        
	[Threading.Thread]::CurrentThread.CurrentUICulture = "en-US"
	
#Constants used for event logging
$SCRIPT_NAME			= "Discover-OMSAzureBackup"
$SCRIPT_ARGS = 9
$SCRIPT_STARTED			= 831
$PROPERTYBAG_CREATED	= 832
$SCRIPT_ENDED			= 835
$SCRIPT_VERSION = "1.0"

#region Constants
#Trace Level Costants
$TRACE_NONE 	= 0
$TRACE_ERROR 	= 1
$TRACE_WARNING = 2
$TRACE_INFO 	= 3
$TRACE_VERBOSE = 4
$TRACE_DEBUG = 5

#Event Type Constants
$EVENT_TYPE_SUCCESS      = 0
$EVENT_TYPE_ERROR        = 1
$EVENT_TYPE_WARNING      = 2
$EVENT_TYPE_INFORMATION  = 4
$EVENT_TYPE_AUDITSUCCESS = 8
$EVENT_TYPE_AUDITFAILURE = 16

#Standard Event IDs
$FAILURE_EVENT_ID = 4000		#errore generico nello script
$SUCCESS_EVENT_ID = 1101
$START_EVENT_ID = 1102
$STOP_EVENT_ID = 1103
$INFO_EVENT_ID = 1104

#TypedPropertyBag
$AlertDataType = 0
$EventDataType	= 2
$PerformanceDataType = 2
$StateDataType       = 3
#endregion

#region Helper Functions
function Log-Params
{
	param($Invocation)
	$line=''
	foreach($key in $Invocation.BoundParameters.Keys) {$line += "$key=$($Invocation.BoundParameters[$key])  "}
	Log-Event $START_EVENT_ID $EVENT_TYPE_INFORMATION  ("Starting script. Invocation Name:$($Invocation.InvocationName)`n Parameters`n $line") $TRACE_INFO
}


function Log-Event
{
	param($eventID, $eventType, $msg, $level)
	
	Write-Verbose ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
	if($level -le $P_TraceLevel)
	{
		Write-Host ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
		$g_API.LogScriptEvent($SCRIPT_NAME,$eventID,$eventType, ($msg + "`n" + "Version :" + $SCRIPT_VERSION))
	}
}

Function Throw-EmptyDiscovery
{
	param($SourceId, $ManagedEntityId)

	$oDiscoveryData = $g_API.CreateDiscoveryData(0, $SourceId, $ManagedEntityId)
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING "Exiting with empty discovery data" $TRACE_INFO
	$oDiscoveryData
	If($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent
		$g_API.Return($oDiscoveryData)
	}
}

Function Throw-KeepDiscoveryInfo
{
param($SourceId, $ManagedEntityId)
	$oDiscoveryData = $g_API.CreateDiscoveryData(0,$SourceId,$ManagedEntityId)
	#Instead of Snapshot discovery, submit Incremental discovery data
	$oDiscoveryData.IsSnapshot = $false
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING "Exiting with null non snapshot discovery data" $TRACE_INFO
	$oDiscoveryData    
	If($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent	
		$g_API.Return($oDiscoveryData)
	}
}
#endregion


#id       : /subscriptions/82fd323c-59e5-47f0-b7c7-a16a4534d86a/resourceGroups/Compliance/providers/Microsoft.Backup/BackupVault/Compliance-Vault
#name     : Compliance-Vault
#type     : Microsoft.Backup/BackupVault
#location : westeurope
#tags     : 

#location   : westeurope
#name       : Infra-Vault
#etag       : 99e99335-e0a4-4b3e-91e3-f2021ba3ae49
#tags       : 
#properties : @{sku=; provisioningState=Succeeded}
#id         : /subscriptions/82fd323c-59e5-47f0-b7c7-a16a4534d86a/resourceGroups/eCloud-Infra/providers/Microsoft.Backup/BackupVault/Infra-Vault
#type       : Microsoft.Backup/BackupVault
#sku        :

Function Discover-BackupVault
{
	param($obj, $ResourceGroup, $Subscription)


	#$obj
	#$obj.properties

		$objInstance = $discoveryData.CreateClassInstance("$MPElement[Name='QND.OMS.Backup.Vault']$")	

		$objInstance.AddProperty("$MPElement[Name='OMS!QND.OMS.Azure.Subscription']/Id$", $subscription)		

		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Base']/Id$", $obj.id)		
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Base']/Type$", $obj.type)	

		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Vault']/Name$", $obj.name)	
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Vault']/ResourceGroup$", $ResourceGroup)	
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Vault']/Subscription$", $Subscription)	
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Vault']/Location$", $obj.location)
		
		if($obj.properties.sku) {$sku=$obj.properties.sku.name} else {$sku=$obj.sku}
		if([String]::IsNullOrEmpty($sku)){$sku=''}
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Vault']/Sku$", $sku)	


		$objInstance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $obj.name)	
		$discoveryData.AddInstance($objInstance)	
}


# File system
#uniqueName    : brd-mcc-1.ecloud.lcl
#containerType : Machine
#properties    : @{containerId=305352; friendlyName=BRD-MCC-1.ECLOUD.LCL; containerStampId=ecdeb883-be8f-4cef-9185-66c870031055; 
#                containerStampUri=https://pod01-prot1.we.backup.windowsazure.com; canReRegister=False; customerType=OBS}

# IaasVM
#properties : @{friendlyName=brd-mcc-1; status=Registered; healthStatus=Healthy; containerType=IaasVM; parentContainerId=/subscriptions/82fd323c-59e5-47f0-b7c7-a16a4534d86a/resou
#             rceGroups/RecoveryServices-MZGJTGR3HYSFVA4K46SF7ZD4B7JO4XJSH7PJ6RTSPABBFXU74BGQ-west-europe/providers/microsoft.backup/BackupVault/BrdBackup/containers/brd-mcc}
#id         : /subscriptions/82fd323c-59e5-47f0-b7c7-a16a4534d86a/resourceGroups/RecoveryServices-MZGJTGR3HYSFVA4K46SF7ZD4B7JO4XJSH7PJ6RTSPABBFXU74BGQ-west-europe/providers/micro
#             soft.backup/BackupVault/BrdBackup/containers/iaasvmcontainer;brd-mcc;brd-mcc-1
#name       : iaasvmcontainer;brd-mcc;brd-mcc-1
#type       : microsoft.backup/BackupVault/containers

# DPM Sources
#uniqueName    : fsrveuazbck01.furla.dom
#containerType : Machine
#properties    : @{containerId=482742; friendlyName=FSRVEUAZBCK01.FURLA.DOM; containerStampId=3f2a1395-55ed-4e55-8f40-de1f8a6c2a24; containerStampUri=https://pod01-prot1b.we.backup.windowsazure.com; 
#                canReRegister=False; customerType=DPMVenus}



Function Discover-BackupContainer
{
	param($obj, $subscription, $vaultName)

	#$obj

    try {
		if($obj.uniqueName) {
			$containerType=('{0}/{1}' -f $obj.ContainerType, $obj.properties.customerType )
			$id=$obj.UniqueName
			$name=$obj.UniqueName
			$type='microsoft.backup/MachineContainer'
			$displayName=$obj.properties.friendlyName
		}
		else {
			$containerType=$obj.properties.containerType
			$id=$obj.Id
			$name=$obj.Name
			$type=$obj.type
			$displayName=$obj.properties.friendlyName
		}

		$objInstance = $discoveryData.CreateClassInstance("$MPElement[Name='QND.OMS.Backup.Container']$")	
		$objInstance.AddProperty("$MPElement[Name='OMS!QND.OMS.Azure.Subscription']/Id$", $subscription)
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Vault']/Name$", $vaultName)		

		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Base']/Id$", $id)	
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Base']/Type$", $type)	

		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Container']/Name$", $name)		
		$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Container']/ContainerType$", $containerType)	

		$objInstance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $displayName)	
		$discoveryData.AddInstance($objInstance)	
    }
    catch {
        Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ('Error disocvering backup container {1} in vault {0} - {2}' -f $name, $Id, $Error[0]) $TRACE_WARNING	
	    write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	    Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
    }

}

#this was the item API response we now set on the protectedItem api
#properties : @{friendlyName=brd-mcc-1; itemType=IaasVM; status=Protected; containerId=/subscriptions/82fd323c-59e5-47f0-b7c7-a16a4534d86a/resourceGroups/RecoveryServices-MZGJTGR
#             3HYSFVA4K46SF7ZD4B7JO4XJSH7PJ6RTSPABBFXU74BGQ-west-europe/providers/microsoft.backup/BackupVault/BrdBackup/registeredContainers/iaasvmcontainer;brd-mcc;brd-mcc-1/it
#             ems/iaasvmcontainer;brd-mcc;brd-mcc-1}
#id         : /subscriptions/82fd323c-59e5-47f0-b7c7-a16a4534d86a/resourceGroups/RecoveryServices-MZGJTGR3HYSFVA4K46SF7ZD4B7JO4XJSH7PJ6RTSPABBFXU74BGQ-west-europe/providers/micro
#             soft.backup/BackupVault/BrdBackup/registeredContainers/iaasvmcontainer;brd-mcc;brd-mcc-1/items/iaasvmcontainer;brd-mcc;brd-mcc-1
#name       : iaasvmcontainer;brd-mcc;brd-mcc-1
#type       : microsoft.backup/BackupVault/registeredContainers/items

#properties : @{protectionStatus=Protected; protectionPolicyId=/subscriptions/82fd323c-59e5-47f0-b7c7-a16a4534d86a/resourceGroups/Compliance/providers/Microsoft.Backup/BackupVaul
#             t/Compliance-Vault/registeredContainers/iaasvmcontainer;prg-mtr-creweb;prg-mtr-crew1/protectedItems/Weekly5; policyInconsistent=False; recoveryPointsCount=5; 
#             lastRecoveryPoint=2015-10-24T23:34:56.6351972Z; lastBackupTime=2015-10-24T23:32:48.6034936Z; lastBackupStatus=Completed; 
#             lastBackupJobId=841bbd72-af3d-4a0c-b496-aca4b4edc1d9; friendlyName=prg-mtr-crew1; itemType=IaasVM; status=Protected; containerId=/subscriptions/82fd323c-59e5-47f0-b
#             7c7-a16a4534d86a/resourceGroups/Compliance/providers/Microsoft.Backup/BackupVault/Compliance-Vault/registeredContainers/iaasvmcontainer;prg-mtr-creweb;prg-mtr-crew1
#             /protectedItems/iaasvmcontainer;prg-mtr-creweb;prg-mtr-crew1}
#id         : /subscriptions/82fd323c-59e5-47f0-b7c7-a16a4534d86a/resourceGroups/Compliance/providers/Microsoft.Backup/BackupVault/Compliance-Vault/registeredContainers/iaasvmcon
#             tainer;prg-mtr-creweb;prg-mtr-crew1/protectedItems/iaasvmcontainer;prg-mtr-creweb;prg-mtr-crew1
#name       : iaasvmcontainer;prg-mtr-creweb;prg-mtr-crew1
#type       : Microsoft.Backup/BackupVault/registeredContainers/protectedItems

Function Discover-BackupProtectedItem
{
	param($obj, $subscription, $vaultName, $container)

	#$obj
    try {
		if ($obj) {
			$objInstance = $discoveryData.CreateClassInstance("$MPElement[Name='QND.OMS.Backup.ProtectedItem']$")	
			$objInstance.AddProperty("$MPElement[Name='OMS!QND.OMS.Azure.Subscription']/Id$", $subscription)
			$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Vault']/Name$", $vaultName)		
			$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Container']/Name$", $container)	

			$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Base']/Id$", $obj.id)		
			$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Base']/Type$", $obj.type)	

			$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.ProtectedItem']/Name$", $obj.name)	
			$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.ProtectedItem']/ItemType$", $obj.properties.itemType)	

#Write-Host $obj.properties
			$obj.properties.containerId -match '(^.*protectedItems\/)' | Out-Null
			$policyName=$obj.properties.protectionPolicyId.Replace($matches[0],'')
			$objInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.ProtectedItem']/PolicyName$", $policyName)	

			$objInstance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $obj.properties.friendlyName)	
			$discoveryData.AddInstance($objInstance)	
		}
    }
    catch {
        Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ('Error disocvering backup Item {2} in vault {0}\{1} - {3}' -f $vaultName, $container, $obj.Id, $Error[0]) $TRACE_WARNING	
	    write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	    Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
    }

}
#Start by setting up API object.
	$P_TraceLevel = $TRACE_VERBOSE
	$g_Api = New-Object -comObject 'MOM.ScriptAPI'
	#$g_RegistryStatePath = "HKLM\" + $g_API.GetScriptStateKeyPath($SCRIPT_NAME)

	$dtStart = Get-Date
	$P_TraceLevel = $traceLevel
	Log-Params $MyInvocation


try {
	$ResPath = (get-itemproperty -path 'HKLM:\system\currentcontrolset\services\healthservice\Parameters' -Name 'State Directory').'State Directory' + '\Resources'
	if(Test-Path $ResPath) {
		$module = @(get-childitem -path $ResPath -Name OMSSearch.psm1 -Recurse)[0]
	}
	if($module) { $OMSSearchModule = "$ResPath\$module"}
	else {$OMSSearchModule = '.\OMSSearch.psm1'}
    if(! (Get-MOdule -Name OMSSearch)) {
	    If (Test-Path $OMSSearchModule) {Import-Module $OMSSearchModule}
	    else {Throw [System.DllNotFoundException] 'OMSSearch.psm1 not found'}
    }

#now load the AAD client resource. The module I'm using assumes the assembly is in the same directory of the module, but OpsMgr resource deployment uses 2 different folders

	$AssemblyName = 'Microsoft.IdentityModel.Clients.ActiveDirectory'
	$AssemblyVersion = "2.14.0.0"
	$AssemblyPublicKey = "31bf3856ad364e35"

	$DLLPath = "$ResPath\"+@(get-childitem -path $ResPath -Name "$($AssemblyName).dll" -Recurse)[0]
	If (!([AppDomain]::CurrentDomain.GetAssemblies() |Where-Object { $_.FullName -eq "$AssemblyName, Version=$AssemblyVersion, Culture=neutral, PublicKeyToken=$AssemblyPublicKey"}))
	{
		Log-Event $INFO_EVENT_ID $EVENT_TYPE_INFO ("Loading Assembly $AssemblyName") $TRACE_VERBOSE
		Try {
			[Void][System.Reflection.Assembly]::LoadFrom($DLLPath)
		} Catch {
			Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Unable to load $DLLPath. $Error") $TRACE_ERROR
			exit 1
		}
	}

	if (!(get-command -Module OMSSearch -Name Get-AADToken -ErrorAction SilentlyContinue)) {
		Log-Event $START_EVENT_ID $EVENT_TYPE_WARNING ("Get-AADToken Commandlet doesn't exist.") $TRACE_WARNING
		Throw-KeepDiscoveryInfo
		exit 1
	}
	$token = Get-AADToken -TenantADName $TenantADName -Username $Username -Password $Password
	if (! $token) {Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Get-AADToken canno authenticate user $username " + $Error) $TRACE_ERROR; exit 1;}
}
catch {
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Main " + $Error) $TRACE_ERROR
	exit 1
}

try
{
    $exclusions=@()
    if (! ([String]::IsNullOrEmpty($ExcludedVaults))) {$exclusions = $ExcludedVaults.Split(',')}
    
	$discoveryData = $g_api.CreateDiscoveryData(0, $sourceId, $managedEntityId)
    #first discover the accounts
	$uri='https://management.azure.com/subscriptions/{0}/resources?api-version=2014-04-01-preview&$filter=((resourceType eq ''microsoft.backup/BackupVault'') or (resourceType eq ''Microsoft.Backup/BackupVault''))' -f $subscriptionId
	$jres = Invoke-ARMGet -Token $token -Uri $uri
	if(! $jres) {Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Invoke-ARMGet failed $uri " + $Error) $TRACE_ERROR; exit 1;}
	foreach($vault in $jres.Value) {
        if ($exclusions -inotcontains $vault.Name) {
            #get vault details
            Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION -msg ('Discovering Backup vault {0}' -f $vault.Name) -level $TRACE_VERBOSE
            try {
                $vault.Id -match '(?<=(resourceGroups\/))(?<Group>.*)(?=(\/providers))' | Out-Null
		        $ResourceGroup = $matches.Group                
                $uri='https://management.azure.com{0}?api-version=2015-03-15' -f $vault.Id
                $vaultDet = Invoke-ARMGet -Token $token -Uri $uri
                Discover-BackupVault -obj $vaultDet -ResourceGroup $ResourceGroup -Subscription $SubscriptionId
            }
            catch {
                Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ('Error disocverying vault {0} - {1}' -f $vault.name, $Error[0]) $TRACE_WARNING	
	            write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	            Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
                continue;
            }
            try {
                #now discover the containers for this account
				$uri='https://management.azure.com{0}/backupContainers?&api-version=2015-03-15' -f $vault.Id
                $containers = Invoke-ARMGet -Token $token -Uri $uri
                foreach($container in $containers.Value) {      
                    Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION -msg ('Discovering container {1} in backup vault {0}' -f $vault.Name, $container.UniqueName) -level $TRACE_VERBOSE              
                    Discover-BackupContainer -obj $container -subscription $SubscriptionId -vaultName $vault.Name
                } 
				$uri='https://management.azure.com{0}/containers?&api-version=2015-03-15' -f $vault.Id
                $containers = Invoke-ARMGet -Token $token -Uri $uri
				$uri='https://management.azure.com{0}/protectedItems?api-version=2014-09-01' -f $vault.Id
				$items = @((Invoke-ARMGet -Token $token -Uri $uri).Value)
                foreach($container in $containers.Value) {      
					if ($container.properties.healthStatus -ieq 'Deleted') {continue}
                    Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION -msg ('Discovering container {1} in backup vault {0}' -f $vault.Name, $container.Name) -level $TRACE_VERBOSE              
                    Discover-BackupContainer -obj $container -subscription $SubscriptionId -vaultName $vault.Name
					#now disocver protcted items 
					try {
						#$uri='https://management.azure.com{0}/containers?&api-version=2015-03-15' -f $vault.Id
						#$containerId='{0}/Items/{1}' -f ($container.Id).Replace('containers','registeredContainers'), $container.Name
						#$uri='https://management.azure.com{0}/protectedItems?api-version=2014-09-01&$filter=(containerId -eq ''{1}'')' -f $vault.Id, $containerId
						$containerId='{0}/protectedItems/{1}' -f ($container.Id).Replace('containers','registeredContainers'), $container.Name
						$cItems = $items | where {$_.properties.containerId -eq $containerId}
						foreach($item in $cItems) {      
							Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION -msg ('Discovering backup item {2} in path {0}/{1}' -f $vault.Name, $container.Name, $item.Name) -level $TRACE_VERBOSE              
							Discover-BackupProtectedItem -obj $item -subscription $SubscriptionId -vaultName $vault.Name -container $container.Name
						}

					}
					catch {
						Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ('Error discoverying backup item for {0}/{1} - {2}' -f $vault.Name, $container.Name, $Error[0]) $TRACE_WARNING	
						write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
						Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
						continue;
					}

                } 


            }
            catch {
                Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ('Error disocverying backup containers for vault {0} - {1}' -f $vault.name, $Error[0]) $TRACE_WARNING	
	            write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	            Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
                continue;
            }
        }
        else {Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION -msg ('Backup Vault {0} filtreed out' -f $vault.Name) -level $TRACE_INFO}
    }

	$discoveryData
	If ($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent	
		#it breaks in exception when run insde OpsMgr and POSH IDE	
		$g_API.Return($discoveryData)
	}
	#get all the subscriptions
	Log-Event $STOP_EVENT_ID $EVENT_TYPE_SUCCESS ("has completed successfully in " + ((Get-Date)- ($dtstart)).TotalSeconds + " seconds.") $TRACE_INFO
}
Catch [Exception] {
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ("Main " + $Error) $TRACE_WARNING	
	write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
}
]]>
                </ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>TraceLevel</Name>
                    <Value>$Config/TraceLevel$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>SourceId</Name>
                    <Value>$MPElement$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ManagedEntityId</Name>
                    <Value>$Target/Id$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>TenantADName</Name>
                    <Value>$Config/TenantADName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>SubscriptionId</Name>
                    <Value>$Config/SubscriptionId$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Username</Name>
                    <Value>$Config/AADUserName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Password</Name>
                    <Value>$Config/AADPassword$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ExcludedVaults</Name>
                    <Value>$Config/ExcludedVaultsList$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ProxyUrl</Name>
                    <Value></Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <StrictErrorHandling>false</StrictErrorHandling>
                <!-- true only for Tasks -->
              </DataSource>
            </MemberModules>
            <Composition>
              <Node ID="DS" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="QND.OMS.Backup.ItemStatus.DS" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="VaultId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ItemId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LookbackDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RunMode" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="LookbackDays" ParameterType="int" Selector="$Config/LookbackDays$" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="Probe" TypeID="QND.OMS.Backup.ItemStatus.PT">
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <TraceLevel>$Config/TraceLevel$</TraceLevel>
                <TenantADName>$Config/TenantADName$</TenantADName>
                <VaultId>$Config/VaultId$</VaultId>
                <ItemId>$Config/ItemId$</ItemId>
                <AADUserName>$Config/AADUserName$</AADUserName>
                <AADPassword>$Config/AADPassword$</AADPassword>
                <LastNJobs>$Config/LastNJobs$</LastNJobs>
                <MaxFailures>$Config/MaxFailures$</MaxFailures>
                <FailureCondition>$Config/FailureCondition$</FailureCondition>
                <MaxAgeHours>$Config/MaxAgeHours$</MaxAgeHours>
                <LookbackDays>$Config/LookbackDays$</LookbackDays>
                <RunMode>$Config/RunMode$</RunMode>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Probe">
                <Node ID="Scheduler"></Node>
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Progel.Windows.Azure.Backup.Policy.Status.DS" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element name="TraceLevel" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ScriptTimeout" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ThresholdAgeHours" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ThresholdSizeGB" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TraceLevel" Selector="$Config/TraceLevel$" ParameterType="int" />
          <OverrideableParameter ID="ScriptTimeout" Selector="$Config/ScriptTimeout$" ParameterType="int" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="ThresholdAgeHours" Selector="$Config/ThresholdAgeHours$" ParameterType="int" />
          <OverrideableParameter ID="ThresholdSizeGB" Selector="$Config/ThresholdSizeGB$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="Script" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>WABStatus.ps1</ScriptName>
                <ScriptBody><![CDATA[
#Template Notes
#basic error handling with -ErrorVariable -ErrorAction
#EV is myErr set to null/cleared before any critical code section and tested for Count -eq 0 after, if different we have an error
#plain and simple waiting for try/ctach in powershell 2.0
#then every sensitive function should have a trap statement see http://huddledmasses.org/trap-exception-in-powershell/

#TO SHOW VERBOSE MESSAGES SET $VerbosePreference="continue"
#SET ErrorLevel to 5 so show discovery info

#*************************************************************************
# Script Name - 
# Author	  -  - Progel srl
# Version	  - 1.1 24.09.2007
# Purpose     - 
#               
# Assumptions - 
#				
#               
# Parameters  - TraceLevel
#             - ComputerName
#				- SourceId
#				- ManagedEntityId
# Command Line - .\test.ps1 4 "serverName" '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}' '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}'
# If discovery must be added the followinf parameters
#				SourceId ($MPElement$ )
#				ManagedEntityId ($Target/Id$)
#
# Output properties
#
# Status
#
# Version History
#	  1.0 06.08.2010 DG First Release
#     1.5 15.02.2014 DG minor cosmetics
#
# (c) Copyright 2010, Progel srl, All Rights Reserved
# Proprietary and confidential to Progel srl              
#
#*************************************************************************


# Get the named parameters
param([int]$traceLevel=$(throw 'must have a value'),
[int]$thresholdHours=$(throw 'must have a value'),
[string]$ThresholdSizeGB=$(throw 'must have a value'))

	[Threading.Thread]::CurrentThread.CurrentCulture = "en-US"        
    [Threading.Thread]::CurrentThread.CurrentUICulture = "en-US"
	
#Constants used for event logging
$SCRIPT_NAME			= "Progel.Azure.Backup.GetRecovery"
$SCRIPT_ARGS = 3

$SCRIPT_STARTED			= 831
$PROPERTYBAG_CREATED	= 832
$SCRIPT_ENDED			= 835

$SCRIPT_VERSION = "1.0"

#Trace Level Costants
$TRACE_NONE 	= 0
$TRACE_ERROR 	= 1
$TRACE_WARNING = 2
$TRACE_INFO 	= 3
$TRACE_VERBOSE = 4
$TRACE_DEBUG = 5

#Event Type Constants
$EVENT_TYPE_SUCCESS      = 0
$EVENT_TYPE_ERROR        = 1
$EVENT_TYPE_WARNING      = 2
$EVENT_TYPE_INFORMATION  = 4
$EVENT_TYPE_AUDITSUCCESS = 8
$EVENT_TYPE_AUDITFAILURE = 16

#Standard Event IDs
$FAILURE_EVENT_ID = 4000		#errore generico nello script
$SUCCESS_EVENT_ID = 1101
$START_EVENT_ID = 1102
$STOP_EVENT_ID = 1103

#TypedPropertyBag
$AlertDataType = 0
$EventDataType	= 2
$PerformanceDataType = 2
$StateDataType       = 3

function Log-Params
{
	param([string] $CmdLine)	
	trap { continue; }
	Log-Event $START_EVENT_ID $EVENT_TYPE_INFORMATION  ("Starting script. " + $CmdLine) $TRACE_INFO
}

function Log-Event
{
	param($eventID, $eventType, $msg, $level)
	
	Write-Verbose ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
	if($level -le $P_TraceLevel)
	{
		Write-Host ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
		$g_API.LogScriptEvent($SCRIPT_NAME,$eventID,$eventType, ($msg + "`n" + "Version :" + $SCRIPT_VERSION))
	}
}

#Start by setting up API object.
	$P_TraceLevel = $TRACE_VERBOSE
	$g_Api = New-Object -comObject 'MOM.ScriptAPI'
	#$g_RegistryStatePath = "HKLM\" + $g_API.GetScriptStateKeyPath($SCRIPT_NAME)

	$dtStart = Get-Date

	$P_TraceLevel = $traceLevel
#same story for dumping the command line	
#manul stuff today in v2 we could use $PSBoundParameters
	Log-Params ([string]$traceLevel + " " + $computerName + " " + $sourceID + " " + $ManagedEntityId)
try
{
	if (! (Get-Module -Name MSOnlineBackup)) {Import-Module MSOnlineBackup}
    $lastRec = Get-OBAllRecoveryPoints | Sort-Object BackupTime -Descending | Select-Object -First 1
    $machineUSage = Get-OBMachineUsage
	$policies = Get-OBPolicy | Where {$_.State -eq 'Existing'}
    $elapsed = ([DateTime]::Now - $lastRec.BackupTime).TotalHours
    Write-Verbose $elapsed
    if ($elapsed -le $thresholdHours)
    {
        $backupStatus = 'UpToDate'
    }
    else
    {
        $backupStatus = 'TooOld'
    }
    if (($machineUsage.StorageUsedByMachineInBytes / 1GB) -ge $ThresholdSizeGB)
    {
        $sizeStatus = 'TooBig'
    }
    else
    {
        $sizeStatus = 'OK'
    }
	Log-Event $STOP_EVENT_ID $EVENT_TYPE_SUCCESS ("has completed successfully in " + ((Get-Date)- ($dtstart)).TotalSeconds + " seconds.") $TRACE_INFO
}
Catch [Exception] {
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ("Main " + $Error) $TRACE_WARNING	
	write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
    $sizeStatus = 'Fail';
    $backupStatus = 'Fail';
}
finally
{
# in the current WAB version we have just one policy per agent, let's build something that can accomodate more policies and keep cook down'
	if ($policies)
	{
		 foreach ($pol in $policies)
		 {
			$bag = $g_API.CreateTypedPropertyBag($StateDataType)
			$bag.AddValue('PolicyName', $pol.PolicyName)

			$bag.AddValue('LastBackupTime', $lastRec.BackupTime)
			$bag.AddValue('BackupAgeHours', $elapsed)

			$bag.AddValue('BackupStatus', $backupStatus)
			$bag.AddValue('MachineUsageGB', $machineUSage.StorageUsedByMachineInBytes/1GB)
			$bag.AddValue('SizeStatus', $sizeStatus)				
			$bag	#this is the way to return data to OpsMgr
			If ($P_TraceLevel -eq $TRACE_DEBUG)
			{
				$message = "BackupTime: $($lastRec.BackupTime)`nBackupStatus: $($backupStatus)`nBackup Age hours: $elapsed`nMachine USage MB: $($machineUSage.StorageUsedByMachineInBytes/(1024*1024))`nSize Status: $sizeStatus" 
				Log-Event $SUCCESS_EVENT_ID $EVENT_TYPE_INFORMATION $message $TRACE_DEBUG
			}
		}
	}
}]]></ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>traceLevel</Name>
                    <Value>$Config/TraceLevel$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>thresholdHours</Name>
                    <Value>$Config/ThresholdAgeHours$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>thresholdSizeGB</Name>
                    <Value>$Config/ThresholdSizeGB$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/ScriptTimeout$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Script">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="QND.OMS.Backup.Policy.Discovery.DS" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element name="TraceLevel" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TargetComputer" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ScriptTimeout" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TraceLevel" Selector="$Config/TraceLevel$" ParameterType="int" />
          <OverrideableParameter ID="ScriptTimeout" Selector="$Config/ScriptTimeout$" ParameterType="int" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <ScriptName>OBPolicyDiscovery.ps1</ScriptName>
                <ScriptBody>
                  <![CDATA[
#Template Notes
#basic error handling with -ErrorVariable -ErrorAction
#EV is myErr set to null/cleared before any critical code section and tested for Count -eq 0 after, if different we have an error
#plain and simple waiting for try/ctach in powershell 2.0
#then every sensitive function should have a trap statement see http://huddledmasses.org/trap-exception-in-powershell/

#TO SHOW VERBOSE MESSAGES SET $VerbosePreference="continue"
#SET ErrorLevel to 5 so show discovery info

#*************************************************************************
# Script Name - 
# Author	  -  - Progel srl
# Version	  - 1.1 24.09.2007
# Purpose     - 
#               
# Assumptions - 
#				
#               
# Parameters  - TraceLevel
#             - ComputerName
#				- SourceId
#				- ManagedEntityId
# Command Line - .\test.ps1 4 "serverName" '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}' '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}'
# If discovery must be added the followinf parameters
#				SourceId ($MPElement$ )
#				ManagedEntityId ($Target/Id$)
#
# Output properties
#
# Status
#
# Version History
#	  1.0 06.08.2010 DG First Release
#     1.5 15.02.2014 DG minor cosmetics
#
# (c) Copyright 2010, Progel srl, All Rights Reserved
# Proprietary and confidential to Progel srl              
#
#*************************************************************************


# Get the named parameters
param([int]$traceLevel=$(throw 'must have a value'),
[string]$computerName=$(throw 'must have a value'),
[string]$sourceID=$(throw 'must have a value'),
[string]$ManagedEntityId=$(throw 'must have a value'))

	[Threading.Thread]::CurrentThread.CurrentCulture = "en-US"        
    [Threading.Thread]::CurrentThread.CurrentUICulture = "en-US"
	
#Constants used for event logging
$SCRIPT_NAME			= "Progel.Azure.Backup.GetPolicies"
$SCRIPT_ARGS = 4

$SCRIPT_STARTED			= 831
$PROPERTYBAG_CREATED	= 832
$SCRIPT_ENDED			= 835

$SCRIPT_VERSION = "1.0"

#Trace Level Costants
$TRACE_NONE 	= 0
$TRACE_ERROR 	= 1
$TRACE_WARNING = 2
$TRACE_INFO 	= 3
$TRACE_VERBOSE = 4
$TRACE_DEBUG = 5

#Event Type Constants
$EVENT_TYPE_SUCCESS      = 0
$EVENT_TYPE_ERROR        = 1
$EVENT_TYPE_WARNING      = 2
$EVENT_TYPE_INFORMATION  = 4
$EVENT_TYPE_AUDITSUCCESS = 8
$EVENT_TYPE_AUDITFAILURE = 16

#Standard Event IDs
$FAILURE_EVENT_ID = 4000		#errore generico nello script
$SUCCESS_EVENT_ID = 1101
$START_EVENT_ID = 1102
$STOP_EVENT_ID = 1103

#TypedPropertyBag
$AlertDataType = 0
$EventDataType	= 2
$PerformanceDataType = 2
$StateDataType       = 3

function Log-Params
{
	param([string] $CmdLine)	
	trap { continue; }
	Log-Event $START_EVENT_ID $EVENT_TYPE_INFORMATION  ("Starting script. " + $CmdLine) $TRACE_INFO
}

function Log-Event
{
	param($eventID, $eventType, $msg, $level)
	
	Write-Verbose ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
	if($level -le $P_TraceLevel)
	{
		Write-Host ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
		$g_API.LogScriptEvent($SCRIPT_NAME,$eventID,$eventType, ($msg + "`n" + "Version :" + $SCRIPT_VERSION))
	}
}

Function Throw-EmptyDiscovery
{
	param($SourceId, $ManagedEntityId)

	$oDiscoveryData = $g_API.CreateDiscoveryData(0, $SourceId, $ManagedEntityId)
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING "Exiting with empty discovery data" $TRACE_INFO
	$oDiscoveryData
	If($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent
		$g_API.Return($oDiscoveryData)
	}
}

Function Throw-KeepDiscoveryInfo
{
param($SourceId, $ManagedEntityId)
	$oDiscoveryData = $g_API.CreateDiscoveryData(0,$SourceId,$ManagedEntityId)
	#Instead of Snapshot discovery, submit Incremental discovery data
	$oDiscoveryData.IsSnapshot = $false
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING "Exiting with null non snapshot discovery data" $TRACE_INFO
	$oDiscoveryData    
	If($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent	
		$g_API.Return($oDiscoveryData)
	}
}



#Start by setting up API object.
	$P_TraceLevel = $TRACE_VERBOSE
	$g_Api = New-Object -comObject 'MOM.ScriptAPI'
	#$g_RegistryStatePath = "HKLM\" + $g_API.GetScriptStateKeyPath($SCRIPT_NAME)

	$dtStart = Get-Date
#if we use named parameters then $Args is always 0, so the erroc hecking must be done differently

#v2
#if ($PsBoundParameters.Count -ne $SCRIPT_ARGS)
#at the momento we must do specific command line validation or use the syntax
#Param([string]$a=$(throw 'My exception - parameter a needed')
#	If ($Args.Count -ne $SCRIPT_ARGS)
#	{
#		Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR "called without proper arguments and was not executed."  $TRACE_ERROR
#		exit -1
#	}

	$P_TraceLevel = $traceLevel
#same story for dumping the command line	
#manul stuff today in v2 we could use $PSBoundParameters
	Log-Params ([string]$traceLevel + " " + $computerName + " " + $sourceID + " " + $ManagedEntityId)
try
{
    if (! (Get-Module -Name MSOnlineBackup)) {Import-Module MSOnlineBackup}
    $policies = Get-OBPolicy | Where {$_.State -eq 'Existing'}
    if ($policies)
    {
        $discoveryData = $g_api.CreateDiscoveryData(0, $sourceId, $managedEntityId)
        foreach ($pol in $policies)
        {
			$PInstance = $discoveryData.CreateClassInstance("$MPElement[Name='QND.OMS.Backup.Agent.Policy']$")
			$PInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)
			$PInstance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", "OB Policy ($($pol.PolicyName))")
			$PInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Agent.Policy']/PolicyName$", $pol.PolicyName)
			$PInstance.AddProperty("$MPElement[Name='QND.OMS.Backup.Agent.Policy']/RetentionDays$", $pol.RetentionPolicy.RetentionDays)
			$discoveryData.AddInstance($PInstance)
        }
        $discoveryData
    }
    else
    {
        Throw-EmptyDiscovery $sourceID $ManagedEntityId
    }

	If ($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent		
		$g_API.Return($discoveryData)
	}
	Log-Event $STOP_EVENT_ID $EVENT_TYPE_SUCCESS ("has completed successfully in " + ((Get-Date)- ($dtstart)).TotalSeconds + " seconds.") $TRACE_INFO
}
Catch [Exception] {
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ("Main " + $Error) $TRACE_WARNING	
	write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
}
]]>
                </ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>traceLevel</Name>
                    <Value>$Config/TraceLevel$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>computerName</Name>
                    <Value>$config/TargetComputer$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>sourceID</Name>
                    <Value>$MPElement$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ManagedEntityId</Name>
                    <Value>$Target/Id$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/ScriptTimeout$</TimeoutSeconds>
                <StrictErrorHandling>false</StrictErrorHandling>
              </DataSource>
            </MemberModules>
            <Composition>
              <Node ID="DS" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="QND.OMS.Backup.ItemStatus.PT" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="VaultId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ItemId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LookbackDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RunMode" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="LookbackDays" ParameterType="int" Selector="$Config/LookbackDays$" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <ProbeAction ID="POSH" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>Get-OMSBackupItemStatus.ps1</ScriptName>
                <ScriptBody>
                  <![CDATA[

#TO SHOW VERBOSE MESSAGES SET $VerbosePreference="continue"
#SET ErrorLevel to 5 so show discovery info
#https://azure.microsoft.com/en-us/documentation/articles/operational-insights-api-log-search/

#*************************************************************************
# Script Name - Get-OMSBackupStatus
# Author	  - Daniele Grandini - Progel spa
# Version  - 1.0 21/10/2015
# Purpose     - 
#               
# Assumptions - 
#				
#               
# Parameters  - TraceLevel
#             - ComputerName
#				- SourceId
#				- ManagedEntityId
# Command Line - .\test.ps1 4 "serverName" '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}' '{1860E0EB-8C21-41DA-9F35-2FE9343CCF36}'
# If discovery must be added the followinf parameters
#				SourceId ($ MPElement $ )
#				ManagedEntityId ($ Target/Id $)
#
# Output properties
#
# Status
#
# 1.0 History
#
# (c) Copyright 2015, Progel spa, All Rights Reserved
# Proprietary and confidential to Progel spa              
#
#*************************************************************************


# Get the named parameters
param(
	[Parameter (Mandatory=$True)] [int]$traceLevel,
	[Parameter (Mandatory=$true)] [String]$TenantADName,
	[Parameter (Mandatory=$True)] [String]$VaultId,
	[Parameter (Mandatory=$true)] [String]$Username,
	[Parameter (Mandatory=$true)] [String]$Password,
	[Parameter (Mandatory=$false)] [String]$Proxyurl, #nyi
	[Parameter (Mandatory=$false)] [int]$LookbackDays=8,
	[Parameter (Mandatory=$false)] [int]$LastNJobs=5,
	[Parameter (Mandatory=$false)] [int]$MaxFailures=0,
	[Parameter (Mandatory=$false)] [String]$FailureCondition='Failed',
	[Parameter (Mandatory=$false)] [int]$MaxAgeHours=-1,
	[Parameter (Mandatory=$false)] [String]$ItemId,
	[Parameter (Mandatory=$false)] [String]$RunMode='Data'
)

	[Threading.Thread]::CurrentThread.CurrentCulture = "en-US"        
	[Threading.Thread]::CurrentThread.CurrentUICulture = "en-US"

#region Constants
#Constants used for event logging
$SCRIPT_NAME			= "Get-OMSBackupStatus"
$SCRIPT_ARGS = 15
$SCRIPT_STARTED			= 831
$PROPERTYBAG_CREATED	= 832
$SCRIPT_ENDED			= 835
$SCRIPT_VERSION = "1.0"

#Trace Level Costants
$TRACE_NONE 	= 0
$TRACE_ERROR 	= 1
$TRACE_WARNING = 2
$TRACE_INFO 	= 3
$TRACE_VERBOSE = 4
$TRACE_DEBUG = 5

#Event Type Constants
$EVENT_TYPE_SUCCESS      = 0
$EVENT_TYPE_ERROR        = 1
$EVENT_TYPE_WARNING      = 2
$EVENT_TYPE_INFORMATION  = 4
$EVENT_TYPE_AUDITSUCCESS = 8
$EVENT_TYPE_AUDITFAILURE = 16

#Standard Event IDs
$FAILURE_EVENT_ID = 4000		#errore generico nello script
$SUCCESS_EVENT_ID = 1101
$START_EVENT_ID = 1102
$STOP_EVENT_ID = 1103
$INFO_EVENT_ID = 1104

#TypedPropertyBag
$AlertDataType = 0
$EventDataType	= 2
$PerformanceDataType = 2
$StateDataType       = 3
#endregion

#region Helper Functions
function Log-Params
{
	param($Invocation)
	$line=''
	foreach($key in $Invocation.BoundParameters.Keys) {$line += "$key=$($Invocation.BoundParameters[$key])  "}
	Log-Event $START_EVENT_ID $EVENT_TYPE_INFORMATION  ("Starting script. Invocation Name:$($Invocation.InvocationName)`n Parameters`n $line") $TRACE_INFO
}


function Log-Event
{
	param($eventID, $eventType, $msg, $level)
	
	Write-Verbose ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
	if($level -le $P_TraceLevel)
	{
		Write-Host ("Logging event. " + $SCRIPT_NAME + " EventID: " + $eventID + " eventType: " + $eventType + " Version:" + $SCRIPT_VERSION + " --> " + $msg)
		$g_API.LogScriptEvent($SCRIPT_NAME,$eventID,$eventType, ($msg + "`n" + "Version :" + $SCRIPT_VERSION))
	}
}

Function Throw-EmptyDiscovery
{
	param($SourceId, $ManagedEntityId)

	$oDiscoveryData = $g_API.CreateDiscoveryData(0, $SourceId, $ManagedEntityId)
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING "Exiting with empty discovery data" $TRACE_INFO
	$oDiscoveryData
	If($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent
		$g_API.Return($oDiscoveryData)
	}
}

Function Throw-KeepDiscoveryInfo
{
param($SourceId, $ManagedEntityId)
	$oDiscoveryData = $g_API.CreateDiscoveryData(0,$SourceId,$ManagedEntityId)
	#Instead of Snapshot discovery, submit Incremental discovery data
	$oDiscoveryData.IsSnapshot = $false
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING "Exiting with null non snapshot discovery data" $TRACE_INFO
	$oDiscoveryData    
	If($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent	
		$g_API.Return($oDiscoveryData)
	}
}
#endregion

Function Throw-StatusBagError
{
	$bag = $g_api.CreatePropertyBag()
	$bag.AddValue("QNDType","Status")
	$bag.AddValue("Status","Error")
	$bag.AddValue("Description","$Error")
	$bag	
}

Function Format-Time
{
	[OutputType([String])]
	param($utcTime)


	$fTime=$utcTime.ToString('yyyy-MM-dd hh:mm:ss tt')
	#don't know why tt doens't work
	#quick fix without reverting to -net framework formatting
	if($fTime.IndexOf('M') -eq -1) {
		if ($fTime.Hour -lt 13) {$fTime+= 'AM'} else {$fTime += 'PM'}
	}
	return $fTime
}

Function Get-BackupJob
{
param($token, $vaultId, $lookbackDays)
		try {
			$now = Format-Time -utcTime ((Get-Date).ToUniversalTime())
			$then = Format-Time -utcTime (((Get-Date).ToUniversalTime()).AddDays(-$LookbackDays))
			$uri='https://management.azure.com{0}/jobs?api-version=2014-09-01&$filter=operation eq ''Backup'' and startTime eq ''{1}'' and endTime eq ''{2}''' -f $VaultId, $then, $now
			$jobs = @((Invoke-ARMGet -Token $token -Uri $uri).Value)
			Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION `
				-msg ('Got {0} jobs' `
					-f $jobs.Count) `
				-level $TRACE_VERBOSE 
		}
		catch {
			Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ('Error getting backup jobs for {0} - {1}' -f $VaultId, $Error[0]) $TRACE_ERROR
			write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
			Write-Verbose $("TRAPPED: " + $_.Exception.Message);
		}
		return $jobs
}

Function Get-VaultPolicy
{
param($token, $vaultId)
		try {
			$uri='https://management.azure.com{0}/protectionPolicies?api-version=2014-09-01' -f $vaultId
			$jres = Invoke-ARMGet -Token $token -Uri $uri
			$policies=@{}
			foreach($pol in $jres.value) {
				switch ($pol.properties.backupSchedule.scheduleRun) 
				{
					'Daily' {$slaHours=28}
					'Weekly' {$slaHours=24*7+12}
					default {$slaHours=28}
				}
				$policies.Add($pol.name,$slaHours)
			}
			Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION `
				-msg ('Got {0} policies' `
					-f $jres.value.Count) `
				-level $TRACE_VERBOSE 
		}
		catch {
			Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ('Error getting backup policies for {0} - {1}' -f $VaultId, $Error[0]) $TRACE_ERROR
			write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
			Write-Verbose $("TRAPPED: " + $_.Exception.Message);
		}
		return $policies
}

#Start by setting up API object.
	$P_TraceLevel = $TRACE_VERBOSE
	$g_Api = New-Object -comObject 'MOM.ScriptAPI'
	#$g_RegistryStatePath = "HKLM\" + $g_API.GetScriptStateKeyPath($SCRIPT_NAME)

	$dtStart = Get-Date
	$P_TraceLevel = $traceLevel
	Log-Params $MyInvocation

#region LoadModules
try {
	$ResPath = (get-itemproperty -path 'HKLM:\system\currentcontrolset\services\healthservice\Parameters' -Name 'State Directory').'State Directory' + '\Resources'
	if(Test-Path $ResPath) {
		$module = @(get-childitem -path $ResPath -Name OMSSearch.psm1 -Recurse)[0]
	}
	if($module) { $OMSSearchModule = "$ResPath\$module"}
	else {$OMSSearchModule = '.\OMSSearch.psm1'}
    if(! (Get-MOdule -Name OMSSearch)) {
	    If (Test-Path $OMSSearchModule) {Import-Module $OMSSearchModule}
	    else {Throw [System.DllNotFoundException] 'OMSSearch.psm1 not found'}
    }

#now load the AAD client resource. The module I'm using assumes the assembly is in the same directory of the module, but OpsMgr resource deployment uses 2 different folders

	$AssemblyName = 'Microsoft.IdentityModel.Clients.ActiveDirectory'
	$AssemblyVersion = "2.14.0.0"
	$AssemblyPublicKey = "31bf3856ad364e35"

	$DLLPath = "$ResPath\"+@(get-childitem -path $ResPath -Name "$($AssemblyName).dll" -Recurse)[0]
	If (!([AppDomain]::CurrentDomain.GetAssemblies() |Where-Object { $_.FullName -eq "$AssemblyName, Version=$AssemblyVersion, Culture=neutral, PublicKeyToken=$AssemblyPublicKey"}))
	{
		Log-Event $INFO_EVENT_ID $EVENT_TYPE_INFO ("Loading Assembly $AssemblyName") $TRACE_VERBOSE
		Try {
			[Void][System.Reflection.Assembly]::LoadFrom($DLLPath)
		} Catch {
			Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Unable to load $DLLPath. $Error") $TRACE_ERROR
			exit 1
		}
	}

	if (!(get-command -Module OMSSearch -Name Get-AADToken -ErrorAction SilentlyContinue)) {
		Log-Event $START_EVENT_ID $EVENT_TYPE_WARNING ("Get-AADToken Commandlet doesn't exist.") $TRACE_WARNING
		Throw-KeepDiscoveryInfo
		exit 1
	}
	$token = Get-AADToken -TenantADName $TenantADName -Username $Username -Password $Password
	if (! $token) {Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Get-AADToken canno authenticate user $username " + $Error) $TRACE_ERROR; exit 1;}
}
catch {
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ("Main " + $Error) $TRACE_ERROR
	exit 1
}

#endregion


try
{

	#get a list of items to monitor
	try {
		if (! ([String]::IsNullOrEmpty($ItemId))) {
		#nyi
			throw 'Single Item check Not Yet Implemented'
		}
		else {
			$uri='https://management.azure.com{0}/protectedItems?api-version=2014-09-01' -f $VaultId			
			$items = (Invoke-ARMGet -Token $token -Uri $uri).Value
		}
	}
	catch {
		Throw-StatusBagError
		Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_ERROR ('Error getting backup items for {0} - {1} - {2}' -f $VaultId, $ItemId, $Error[0]) $TRACE_ERROR
		write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
		Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
	}

	if ($RunMode -ieq 'Data') {
		#get the backup jobs
		#this can become huge but right now I didn't find a way to filter for the specific protected Item
		$jobs=$null
		$policies=@{}
		if($LastNJobs -gt 1) {$jobs = Get-BackupJob -token $token -vaultId $VaultId -lookbackDays $LookbackDays}
		if($MaxAgeHours -eq 0) {$policies = Get-VaultPolicy -token $token -vaultId $VaultId}

		foreach($item in $items) {      
			try {
				Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION `
					-msg ('Processing {0}' `
						-f $item.Name) `
					-level $TRACE_VERBOSE   
				#getting recovery points
				#$itemId= ($item.id).Replace('items','protectedItems')
				#$uri='https://management.azure.com{0}/recoveryPoints?api-version=2014-09-01' -f $itemId
				#$recPoints = Invoke-ARMGet -Token $token -Uri $uri
				#$lastRecPointDate='01-01-2000'
				#if($recPoints.Value.Count -gt 0) {
				#	$lastRecoveryPoint = ($recPoints.Value | sort @{expression={[datetime]$_.properties.recoveryPointTime};Descending=$true}) | Select-Object -First 1
				#	$lastRecPointDate = $lastRecoveryPoint.properties.recoveryPointTime
				#}
				$lastRecPointDate='2015-01-01'
				if($item.properties.lastRecoveryPoint) {$lastRecPointDate = $item.properties.lastRecoveryPoint}
				$lastRecoveryPointAgeHours = ((Get-Date) - [datetime]$lastRecPointDate).TotalHours

				#getting jobs
				if ($LastNJobs -gt 1) {
					$itemJobs=@($jobs | where {$_.properties.entityFriendlyName -ieq $item.properties.friendlyName})
					$lastJob = $itemjobs | where {$_.properties.status -ieq 'Completed'} | Select-Object -First 1
					$selectedJobs = @($itemJobs | Select-Object -First $LastNJobs)
					$failures = @($selectedJobs | where {$_.properties.status -match $FailureCondition}).Count
					if ($lastJob) {
						$uri='https://management.azure.com{0}?api-version=2014-09-01' -f $lastJob.id
						$lastJobDetails = Invoke-ARMGet -Token $token -Uri $uri
					}
				}
				else {
					$uri='https://management.azure.com{0}/jobs/{1}?api-version=2014-09-01' -f $vaultId, $item.properties.lastBackupJobId
					$lastJobDetails = Invoke-ARMGet -Token $token -Uri $uri
				}
				#get last job stats
				$lastjobDurationHours=-1
				$lastJobSizeGB=-1
				$lastJobStatus='n.a.'
				if($lastJobDetails) {
					if ($lastJobDetails.properties) {
						$lastJobStatus = $lastJobDetails.properties.Status
						$lastjobDurationHours = (([datetime]$lastJobDetails.properties.duration).TimeOfDay).TotalHours
						$lastJobSizeGB = ([int]($lastJobDetails.properties.propertyBag.'Backup Size').Replace(' MB',''))/1024
					}
				}
				#if MaxAAgeHours==0 then let's go dynaminc and try to infer the SLA from the policy
				$ageError='False'
				$specificAge=$MaxAgeHours
				switch ($MaxAgeHours) {
					0 {
						$item.properties.containerId -match '(^.*protectedItems\/)' | Out-Null
						$policyName=$item.properties.protectionPolicyId.Replace($matches[0],'')
						if ($policies.ContainsKey($policyName)) {
							$specificAge=$policies[$policyName]							
							$ageError=($lastRecoveryPointAgeHours -gt $specificAge).ToString()
						}
						break;
					}
					-1 {$ageError='False'; break;}
					default {$ageError=($lastRecoveryPointAgeHours -gt $MaxAgeHours).ToString()}
				}

				$bag = $g_api.CreatePropertyBag()
				$bag.AddValue("QNDType","Data")
				$bag.AddValue('ItemId', $item.Id)


				#return calculated status and input parameters
				$execError=($failures -gt $MaxFailures).ToString()

				$bag.AddValue('JobsReturned', $itemJobs.Count)
				$bag.AddValue('JobsSelected', $selectedJobs.Count)
				$bag.AddValue('Failures', $failures)
				$bag.AddValue('LastJobDurationHours', $lastjobDurationHours)
				$bag.AddValue('LastJobSizeGB', $lastJobSizeGB)
				$bag.AddValue('LastJobStatus', $lastJobStatus)
				$bag.AddValue('LastRecoveryPointDate', $lastRecPointDate)
				$bag.AddValue('LastRecoveryPointAge', $lastRecoveryPointAgeHours)

				$bag.AddValue('ExecError', $execError)
				$bag.AddValue('AgeError', $ageError)

				$bag.AddValue('MaxFailures', $MaxFailures)
				$bag.AddValue('MaxAgeHours', $specificAge)


				if($traceLevel -eq $TRACE_DEBUG) {$g_API.AddItem($bag)}
				$bag

				Log-Event -eventID $INFO_EVENT_ID -eventType $EVENT_TYPE_INFORMATION `
					-msg ('{0} - retunred jobs {1} selected jobs {2} failures {3} last job status {4} last job duration {5} last recovery point {6} last recovery point age {7}' `
						-f $item.Id, $itemJobs.Count, $selectedJobs.Count, $failures, $lastJobStatus, $lastjobDurationHours, $lastRecPointDate, $lastRecoveryPointAgeHours) `
					-level $TRACE_VERBOSE              
				}
			catch {
				Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ('Error getting stats for item {0} - {1}' -f $Item.Name, $Error[0]) $TRACE_WARNING	
				write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
				Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
				continue;
			}
		}
	}
	else {
		$bag = $g_api.CreatePropertyBag()
		$bag.AddValue("QNDType","Status")
		$bag.AddValue("Status","OK")
		$bag.AddValue("Description","Connection OK")
		$bag
	}

	If ($traceLevel -eq $TRACE_DEBUG)
	{
		#just for debug proposes when launched from command line does nothing when run inside OpsMgr Agent	
		#it breaks in exception when run insde OpsMgr and POSH IDE	
		$g_API.ReturnItems() 
	}
	Log-Event $STOP_EVENT_ID $EVENT_TYPE_SUCCESS ("has completed successfully in " + ((Get-Date)- ($dtstart)).TotalSeconds + " seconds.") $TRACE_INFO
}
Catch [Exception] {
	Throw-StatusBagError
	Log-Event $FAILURE_EVENT_ID $EVENT_TYPE_WARNING ("Main " + $Error) $TRACE_WARNING	
	write-Verbose $("TRAPPED: " + $_.Exception.GetType().FullName); 
	Write-Verbose $("TRAPPED: " + $_.Exception.Message); 
}
]]>
                </ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>TraceLevel</Name>
                    <Value>$Config/TraceLevel$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>TenantADName</Name>
                    <Value>$Config/TenantADName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>VaultId</Name>
                    <Value>$Config/VaultId$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Username</Name>
                    <Value>$Config/AADUserName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Password</Name>
                    <Value>$Config/AADPassword$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ProxyUrl</Name>
                    <Value></Value>
                  </Parameter>
                  <Parameter>
                    <Name>LookbackDays</Name>
                    <Value>$Config/LookbackDays$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>LastNJobs</Name>
                    <Value>$Config/LastNJobs$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>MaxFailures</Name>
                    <Value>$Config/MaxFailures$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>FailureCondition</Name>
                    <Value>$Config/FailureCondition$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>MaxAgeHours</Name>
                    <Value>$Config/MaxAgeHours$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ItemId</Name>
                    <Value>$Config/ItemId$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>RunMode</Name>
                    <Value>$Config/RunMode$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <StrictErrorHandling>false</StrictErrorHandling>
                <!-- true only for Tasks -->
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="POSH" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <InputType>System!System.BaseData</InputType>
      </ProbeActionModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="QND.OMS.Backup.LastJobStatus.MT" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="Completed" />
          <MonitorTypeState ID="Failed" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="VaultId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ItemId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LookbackDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="LookbackDays" ParameterType="int" Selector="$Config/LookbackDays$" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="QND.OMS.Backup.ItemStatus.DS">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <TraceLevel>$Config/TraceLevel$</TraceLevel>
              <TenantADName>$Config/TenantADName$</TenantADName>
              <VaultId>$Config/VaultId$</VaultId>
              <!-- RunbookId is not used in this monitor -->
              <ItemId></ItemId>
              <AADUserName>$Config/AADUserName$</AADUserName>
              <AADPassword>$Config/AADPassword$</AADPassword>
              <LastNJobs>$Config/LastNJobs$</LastNJobs>
              <MaxFailures>$Config/MaxFailures$</MaxFailures>
              <FailureCondition>$Config/FailureCondition$</FailureCondition>
              <MaxAgeHours>$Config/MaxAgeHours$</MaxAgeHours>
              <LookbackDays>$Config/LookbackDays$</LookbackDays>
              <RunMode>Data</RunMode>
            </DataSource>
            <ConditionDetection ID="DataFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='QNDType']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Data</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='ItemId']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">$Config/ItemId$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="HealthyCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <RegExExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='LastJobStatus']</XPathQuery>
                  </ValueExpression>
                  <Operator>DoesNotMatchRegularExpression</Operator>
                  <Pattern>$Config/FailureCondition$</Pattern>
                </RegExExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="UnHealthyCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <RegExExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='LastJobStatus']</XPathQuery>
                  </ValueExpression>
                  <Operator>MatchesRegularExpression</Operator>
                  <Pattern>$Config/FailureCondition$</Pattern>
                </RegExExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Completed">
              <Node ID="HealthyCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS" />
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="Failed">
              <Node ID="UnHealthyCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS"></Node>
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="QND.OMS.Backup.LastRecoveryPointAge.MT" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="UpToDate" />
          <MonitorTypeState ID="Obsolete" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="VaultId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ItemId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LookbackDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="LookbackDays" ParameterType="int" Selector="$Config/LookbackDays$" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="QND.OMS.Backup.ItemStatus.DS">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <TraceLevel>$Config/TraceLevel$</TraceLevel>
              <TenantADName>$Config/TenantADName$</TenantADName>
              <VaultId>$Config/VaultId$</VaultId>
              <!-- RunbookId is not used in this monitor -->
              <ItemId></ItemId>
              <AADUserName>$Config/AADUserName$</AADUserName>
              <AADPassword>$Config/AADPassword$</AADPassword>
              <LastNJobs>$Config/LastNJobs$</LastNJobs>
              <MaxFailures>$Config/MaxFailures$</MaxFailures>
              <FailureCondition>$Config/FailureCondition$</FailureCondition>
              <MaxAgeHours>$Config/MaxAgeHours$</MaxAgeHours>
              <LookbackDays>$Config/LookbackDays$</LookbackDays>
              <RunMode>Data</RunMode>
            </DataSource>
            <ConditionDetection ID="DataFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='QNDType']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Data</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='ItemId']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">$Config/ItemId$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="HealthyCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='AgeError']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">False</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="UnHealthyCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='AgeError']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">True</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="UpToDate">
              <Node ID="HealthyCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS" />
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="Obsolete">
              <Node ID="UnHealthyCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS"></Node>
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="QND.OMS.Backup.FailureRate.MT" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="TooMany" />
          <MonitorTypeState ID="OK" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="VaultId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ItemId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LastNJobs" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxFailures" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="FailureCondition" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MaxAgeHours" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="LookbackDays" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
          <OverrideableParameter ID="LastNJobs" ParameterType="int" Selector="$Config/LastNJobs$" />
          <OverrideableParameter ID="MaxFailures" ParameterType="int" Selector="$Config/MaxFailures$" />
          <OverrideableParameter ID="FailureCondition" ParameterType="string" Selector="$Config/FailureCondition$" />
          <OverrideableParameter ID="MaxAgeHours" ParameterType="int" Selector="$Config/MaxAgeHours$" />
          <OverrideableParameter ID="LookbackDays" ParameterType="int" Selector="$Config/LookbackDays$" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="QND.OMS.Backup.ItemStatus.DS">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <TraceLevel>$Config/TraceLevel$</TraceLevel>
              <TenantADName>$Config/TenantADName$</TenantADName>
              <VaultId>$Config/VaultId$</VaultId>
              <!-- RunbookId is not used in this monitor -->
              <ItemId></ItemId>
              <AADUserName>$Config/AADUserName$</AADUserName>
              <AADPassword>$Config/AADPassword$</AADPassword>
              <LastNJobs>$Config/LastNJobs$</LastNJobs>
              <MaxFailures>$Config/MaxFailures$</MaxFailures>
              <FailureCondition>$Config/FailureCondition$</FailureCondition>
              <MaxAgeHours>$Config/MaxAgeHours$</MaxAgeHours>
              <LookbackDays>$Config/LookbackDays$</LookbackDays>
              <RunMode>Data</RunMode>
            </DataSource>
            <ConditionDetection ID="DataFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='QNDType']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Data</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='ItemId']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">$Config/ItemId$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="HealthyCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='ExecError']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">False</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="UnHealthyCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='ExecError']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">True</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="OK">
              <Node ID="HealthyCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS" />
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="TooMany">
              <Node ID="UnHealthyCD">
                <Node ID="Filter">
                  <Node ID="DataFilter">
                    <Node ID="DS"></Node>
                  </Node>
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="QND.OMS.Backup.Connectivity.MT" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="Healthy" />
          <MonitorTypeState ID="UnReachable" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:int" minOccurs="0" maxOccurs="1" default="60" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TraceLevel" type="xsd:int" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TenantADName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="VaultId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADUserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="AADPassword" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="TraceLevel" ParameterType="int" Selector="$Config/TraceLevel$" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="QND.OMS.Backup.ItemStatus.DS">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <TraceLevel>$Config/TraceLevel$</TraceLevel>
              <TenantADName>$Config/TenantADName$</TenantADName>
              <VaultId>$Config/VaultId$</VaultId>
              <ItemId></ItemId>
              <AADUserName>$Config/AADUserName$</AADUserName>
              <AADPassword>$Config/AADPassword$</AADPassword>
              <LastNJobs>-1</LastNJobs>
              <MaxFailures>-1</MaxFailures>
              <FailureCondition></FailureCondition>
              <MaxAgeHours>-1</MaxAgeHours>
              <LookbackDays>-1</LookbackDays>
              <RunMode>Status</RunMode>
            </DataSource>
            <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='QNDType']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Status</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="ConnectOKCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">OK</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="ConnectKOCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Error</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Healthy">
              <Node ID="ConnectOKCD">
                <Node ID="Filter">
                  <Node ID="DS" />
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="UnReachable">
              <Node ID="ConnectKOCD">
                <Node ID="Filter">
                  <Node ID="DS"></Node>
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="QND.OMS.Backup.Policy.Age.MT" Accessibility="Internal">
        <MonitorTypeStates>
          <MonitorTypeState ID="UpToDate" NoDetection="false" />
          <MonitorTypeState ID="TooOld" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="TraceLevel" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ScriptTimeout" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ThresholdAgeHours" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ThresholdSizeGB" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="PolicyName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TraceLevel" Selector="$Config/TraceLevel$" ParameterType="int" />
          <OverrideableParameter ID="ScriptTimeout" Selector="$Config/ScriptTimeout$" ParameterType="int" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="ThresholdAgeHours" Selector="$Config/ThresholdAgeHours$" ParameterType="int" />
          <OverrideableParameter ID="ThresholdSizeGB" Selector="$Config/ThresholdSizeGB$" ParameterType="int" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="Status" TypeID="Progel.Windows.Azure.Backup.Policy.Status.DS">
              <TraceLevel>$Config/TraceLevel$</TraceLevel>
              <ScriptTimeout>$Config/ScriptTimeout$</ScriptTimeout>
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <ThresholdAgeHours>$Config/ThresholdAgeHours$</ThresholdAgeHours>
              <ThresholdSizeGB>$Config/ThresholdSizeGB$</ThresholdSizeGB>
            </DataSource>
            <ConditionDetection ID="NormalCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='BackupStatus']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">UpToDate</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="TooOldCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='BackupStatus']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="String">UpToDate</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="FilterCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='PolicyName']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">$Config/PolicyName$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="UpToDate">
              <Node ID="NormalCD">
                <Node ID="FilterCD">
                  <Node ID="Status" />
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="TooOld">
              <Node ID="TooOldCD">
                <Node ID="FilterCD">
                  <Node ID="Status" />
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="QND.OMS.Backup.Size.MT" Accessibility="Internal">
        <MonitorTypeStates>
          <MonitorTypeState ID="WithinLimits" NoDetection="false" />
          <MonitorTypeState ID="TooBig" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="TraceLevel" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ScriptTimeout" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ThresholdAgeHours" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ThresholdSizeGB" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TraceLevel" Selector="$Config/TraceLevel$" ParameterType="int" />
          <OverrideableParameter ID="ScriptTimeout" Selector="$Config/ScriptTimeout$" ParameterType="int" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="ThresholdAgeHours" Selector="$Config/ThresholdAgeHours$" ParameterType="int" />
          <OverrideableParameter ID="ThresholdSizeGB" Selector="$Config/ThresholdSizeGB$" ParameterType="int" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="Status" TypeID="Progel.Windows.Azure.Backup.Policy.Status.DS">
              <TraceLevel>$Config/TraceLevel$</TraceLevel>
              <ScriptTimeout>$Config/ScriptTimeout$</ScriptTimeout>
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <ThresholdAgeHours>$Config/ThresholdAgeHours$</ThresholdAgeHours>
              <ThresholdSizeGB>$Config/ThresholdSizeGB$</ThresholdSizeGB>
            </DataSource>
            <ConditionDetection ID="NormalCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='SizeStatus']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">OK</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="TooBigCD" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='SizeStatus']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="String">OK</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="WithinLimits">
              <Node ID="NormalCD">
                <Node ID="Status" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="TooBig">
              <Node ID="TooBigCD">
                <Node ID="Status" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="QND.OMS.Cheat.DPMServerDiscovery" Enabled="true" Target="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMSeed" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMServer" />
          <DiscoveryRelationship TypeID="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMSeedHostsDPMServer" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.DiscoveryProvider">
          <IntervalSeconds>21600</IntervalSeconds>
          <SyncTime />
          <ScriptName>DPMDiscovery.vbs</ScriptName>
          <Arguments>0 $MPElement$ $Target/Id$ $Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$ $Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$ $Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosDomainName$ "$Target/ManagementGroup/Name$"</Arguments>
          <ScriptBody>SetLocale("en-us")
'ok this is a really silly way to discover the server let's change it in the next release
Set oAPI = CreateObject("MOM.ScriptAPI") 
Set oArgs = WScript.Arguments 

call oAPI.LogScriptEvent("DPMServerDiscovery", 125, 4, "DPM server discovery start event")

if oArgs.Count &lt; 7 Then 
    call oAPI.LogScriptEvent("DPMServerDiscovery", 12, 1, "Expected 7 arguments. There were only " &amp; oArgs.Count &amp; " arguments. Exiting script.")
            Wscript.Quit -1
            End If

            SourceType = oArgs(0)
            SourceId = oArgs(1)
            ManagedEntityId = oArgs(2)
            TargetComputer = oArgs(3)
            NetbiosComputerName = oArgs(4)
            NetbiosDomainName = oArgs(5)
            ManagementGroupName = oArgs(6)

            Dim dpmProductCode, installstate, dpmversion, minDate

            Const msiInstallStateUnknown = -1
            Const msiInstallStateAbsent	 = 2

            minDate = CDate("1/1/1900 00:00:00")

            isDPMPresent = True

            Set oDiscData = oAPI.CreateDiscoveryData(SourceType, SourceId, ManagedEntityId)

            dpmProductCode = "{54CF55F6-45E0-494E-94E4-6D9AA80663B0}"

            installstate = MsiQueryProductState(dpmProductCode)

            Dim WSHShell, value

            Set WSHShell = CreateObject("WScript.Shell")
            value = WSHShell.RegRead( "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft Data Protection Manager\Setup\SetupSucceeded" )

            If (installstate = msiInstallStateUnknown or installState = msiInstallStateAbsent) and value &lt;&gt; 1 then
              call oAPI.LogScriptEvent("DPMServerDiscovery", 125, 1, "QND OMS CHeat DPM is not present on this computer")
              isDPMPresent = False
            else
            'MsgBox("DPM is Present")

            dpmversion = MsiGetProductInfo(dpmProductCode)

            Set oInst = oDiscData.CreateClassInstance("$MPElement[Name="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMServer"]$")

            call oInst.AddProperty("$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$", TargetComputer)
            call oInst.AddProperty("$MPElement[Name="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMSeed"]/DPMServerName$", TargetComputer)
            call oInst.AddProperty("$MPElement[Name="System!System.Entity"]/DisplayName$",NetbiosComputerName)
            call oInst.AddProperty("$MPElement[Name="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMServer"]/DPMServerName$", TargetComputer)
            call oInst.AddProperty("$MPElement[Name="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMServer"]/Domain$", NetbiosDomainName)

            call oInst.AddProperty("$MPElement[Name="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMServer"]/DiskUtilizationLastUpdateTime$", minDate)
            call oInst.AddProperty("$MPElement[Name="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMServer"]/TapeUtilizationLastUpdateTime$", minDate)
            call oInst.AddProperty("$MPElement[Name="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMServer"]/DiskManagementLastUpdateTime$", minDate)
            call oInst.AddProperty("$MPElement[Name="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMServer"]/SLATrendLastUpdateTime$", minDate)
            call oInst.AddProperty("$MPElement[Name="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMServer"]/BackupJobLastUpdateTime$", minDate)
            call oInst.AddProperty("$MPElement[Name="DPM!Microsoft.SystemCenter.DataProtectionManager.2011.Library.DPMServer"]/RecoveryJobLastUpdateTime$", minDate)

            call oDiscData.AddInstance(oInst)
            End if

            call oAPI.LogScriptEvent("DPMServerDiscovery", 125, 4, "QND OMS Cheat DPM server discovery SCOM ManagementGroup:" &amp; ManagementGroupName)

AddSCOMServerToDPMSCOMGroup(ManagementGroupName)

if (isDPMPresent) then
	CheckForScriptLimitRegistry()
end if

call oAPI.LogScriptEvent("DPMServerDiscovery", 125, 4, "DPM server discovery completed event")

call oAPI.Return(oDiscData)

Function MsiQueryProductState(ProductCode)
    Dim InstallState
	
    Dim Installer : Set Installer = Nothing
    Set Installer = CreateObject("WindowsInstaller.Installer")
    InstallState = Installer.ProductState(ProductCode)

    MsiQueryProductState = InstallState
	
    Exit Function
End Function

Function MsiGetProductInfo(ProductCode)
   Dim InstallInfo
   Dim Installer : Set Installer = Nothing
   Set Installer = CreateObject("WindowsInstaller.Installer")
   InstallInfo = Installer.ProductInfo(ProductCode,"VersionString")

   MsiGetProductInfo = InstallInfo
End Function

Function AddSCOMServerToDPMSCOMGroup(managementGroupName)

  'This is required as discovery should not stop because of err in this script
  on error resume next

  Const HKEY_LOCAL_MACHINE  = &amp;H80000002
  Const REG_SZ = 1
  strComputer = "."
  hDefKey = HKEY_LOCAL_MACHINE
  strKeyPath = "SOFTWARE\Microsoft\Microsoft Operations Manager\3.0\Agent Management Groups\" &amp; managementGroupName &amp; "\Parent Health Services\0"
  dpmConfigKeyPath = "SOFTWARE\Microsoft\Microsoft Data Protection Manager\Configuration"
  strValueName = "NetworkName"
  DPMScomGroupName = "DPMScom"
  
  'Reading Registry
  Set oReg = GetObject("winmgmts:{impersonationLevel=impersonate}!\\" &amp; strComputer &amp; "\root\default:StdRegProv")
  oReg.GetExpandedStringValue hDefKey, strKeyPath, strValueName, scomSvrName

  'Adding To DPMScom Group Variables
  'Seperating Machine name and domain name
  DotPosition = InStr (scomSvrName, ".")
  DomainName = Mid (scomSvrName, DotPosition+1)
  DotPosition2 = InStr (DomainName, ".")
  simpleDomainName = Mid (DomainName, 1, DotPosition2 - 1)
  MachineName = Mid (scomSvrName, 1, DotPosition-1) &amp; "$"
  Set net = WScript.CreateObject("WScript.Network")
  local = net.ComputerName

  'Read Machine Name
  Set WshShell = WScript.CreateObject("WScript.Shell")
  DPMMachineName = WshShell.ExpandEnvironmentStrings("%COMPUTERNAME%")
  DPMScomGroupNameDCMachineName = "DPMScom$" &amp; DPMMachineName

  'Adding SCOMServer to DPMSCOM Group for non-dc machine
  set group = GetObject("WinNT://"&amp; local &amp;"/" &amp; DPMScomGroupName)
  group.Add "WinNT://"&amp; DomainName &amp;"/"&amp; MachineName &amp;""

  'Adding SCOMServer to DPMSCOM Group for dc machine
  set group = GetObject("WinNT://"&amp; local &amp;"/DPMScomGroupNameDCMachineName")
  group.Add "WinNT://"&amp; DomainName &amp;"/"&amp; MachineName &amp;""

  'Adding registry for the scomserver so indicate when discovery happened subKeyName = "domain\serverName$" value = "Just Discovered"
  valueTemp = "Just Discovered"
  subKeyValue = simpleDomainName &amp; "\" &amp; MachineName
  oReg.SetStringValue HKEY_LOCAL_MACHINE, dpmConfigKeyPath, subKeyValue, valueTemp 

End Function

Function CheckForScriptLimitRegistry()

  'This is required as discovery should not stop because of err in this script
  on error resume next

  Dim objShell
  Set objShell=CreateObject("WScript.Shell")

  scriptString = "$regPath = 'HKLM:\Software\Microsoft\Microsoft Operations Manager\3.0\Modules\Global\Powershell'  "&amp;_
  Chr(10) &amp;      "$setRegistry = $false  "&amp;_
  Chr(10) &amp;      "if(Test-Path $regPath)  "&amp;_
  Chr(10) &amp;      "{  "&amp;_
  Chr(10) &amp;      "    write-host ""Key exists""  "&amp;_
  Chr(10) &amp;      "    $value = Get-ItemProperty -Name ""ScriptLimit"" -Path $regPath -ErrorAction silentlycontinue  "&amp;_
  Chr(10) &amp;      "    if($value -eq $null)  "&amp;_
  Chr(10) &amp;      "    {  "&amp;_
  Chr(10) &amp;      "        New-ItemProperty $regPath -Name ""ScriptLimit"" -Value 15 -PropertyType DWORD  "&amp;_
  Chr(10) &amp;      "        $setRegistry = $true    "&amp;_
  Chr(10) &amp;      "    }  "&amp;_
  Chr(10) &amp;      "    elseif($value.ScriptLimit -gt 15)  "&amp;_
  Chr(10) &amp;      "    {  "&amp;_
  Chr(10) &amp;      "        write-host ""Value is null or value is greater than 15""   "&amp;_
  Chr(10) &amp;      "        Set-ItemProperty -path $regPath -Name ""ScriptLimit"" -Value 15  "&amp;_
  Chr(10) &amp;      "        $setRegistry = $true    "&amp;_
  Chr(10) &amp;      "    } "&amp;_
  Chr(10) &amp;      "}     "&amp;_
  Chr(10) &amp;      "else  "&amp;_
  Chr(10) &amp;      "{     "&amp;_
  Chr(10) &amp;      "    write-host ""Key doesnt exist""   "&amp;_
  Chr(10) &amp;      "    md $regPath  "&amp;_
  Chr(10) &amp;      "    New-ItemProperty $regPath -Name ""ScriptLimit"" -Value 15 -PropertyType DWORD  "&amp;_
  Chr(10) &amp;      "    $setRegistry = $true  "&amp;_
  Chr(10) &amp;      "}   "&amp;_
  Chr(10) &amp;      "if($setRegistry)  "&amp;_
  Chr(10) &amp;      "{  "&amp;_
  Chr(10) &amp;      "    $evt = new-object System.Diagnostics.EventLog('DPM Alerts');  "&amp;_
  Chr(10) &amp;      "    $evt.Source = 'DPM-EM';  "&amp;_
  Chr(10) &amp;      "    $eventSeverity = [System.Diagnostics.EventLogEntryType]::Information;  "&amp;_
  Chr(10) &amp;      "    $eventString = 'Restarting the health service';  "&amp;_
  Chr(10) &amp;      "    $eventId = 126;  "&amp;_
  Chr(10) &amp;      "    $evt.WriteEntry($eventString, $eventSeverity, $eventId)  "&amp;_
  Chr(10) &amp;      "    $time= (Get-Date).AddMinutes(10)   "&amp;_
  Chr(10) &amp;      "    $timeStr = $time.ToString('HH:mm')   "&amp;_
  Chr(10) &amp;      "    $result = schtasks /create /tn DPMDiscoveryHelper /tr 'net start healthservice' /st $timeStr /rl highest /sc once /ru system /rp /f  "&amp;_
  Chr(10) &amp;      "    if($LASTEXITCODE -eq 0)  "&amp;_
  Chr(10) &amp;      "    {  "&amp;_
  Chr(10) &amp;      "       $eventString = 'Successfully created the scheduled task';  "&amp;_
  Chr(10) &amp;      "    } "&amp;_
  Chr(10) &amp;      "    else "&amp;_
  Chr(10) &amp;      "    {  "&amp;_
  Chr(10) &amp;      "       $eventString = 'Failed creating scheduled task with message' + $result;  "&amp;_
  Chr(10) &amp;      "    } "&amp;_
  Chr(10) &amp;      "    $evt.WriteEntry($eventString, $eventSeverity, $eventId)  "&amp;_
  Chr(10) &amp;      "    Stop-Service healthservice   "&amp;_
  Chr(10) &amp;      "    Start-Service healthservice  "&amp;_
  Chr(10) &amp;      "}"

  strCMD="powershell -nologo -command """ &amp; scriptString &amp; """"

  'Uncomment next line for debugging
  'MsgBox("strCMD: " &amp; strCMD)

  'use 0 to hide window
  objShell.Run strCMD,0,true

End Function
</ScriptBody>
          <TimeoutSeconds>900</TimeoutSeconds>
        </DataSource>
      </Discovery>
      <Discovery ID="QND.OMS.Backup.Vault.Discovery" ConfirmDelivery="true" Enabled="true" Priority="Normal" Remotable="true" Target="OMS!QND.OMS.Azure.Subscription">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="QND.OMS.Backup.Vault" />
          <DiscoveryClass TypeID="QND.OMS.Backup.Container" />
          <DiscoveryClass TypeID="QND.OMS.Backup.ProtectedItem" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="QND.OMS.Backup.Discovery.DS">
          <TraceLevel>2</TraceLevel>
          <IntervalSeconds>28800</IntervalSeconds>
          <SyncTime></SyncTime>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TenantADName>$Target/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Tenant$</TenantADName>
          <SubscriptionId>$Target/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Id$</SubscriptionId>
          <AADUserName>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/Password$</AADPassword>
          <ExcludedVaultsList></ExcludedVaultsList>
        </DataSource>
      </Discovery>
      <Discovery ID="QND.OMS.Backup.Agent.Discovery" Enabled="true" Target="Windows!Microsoft.Windows.Computer" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="QND.OMS.Backup.Agent" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
          <ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <RegistryAttributeDefinitions>
            <RegistryAttributeDefinition>
              <AttributeName>Start</AttributeName>
              <Path>SYSTEM\CurrentControlSet\Services\obengine\Start</Path>
              <PathType>1</PathType>
              <AttributeType>2</AttributeType>
            </RegistryAttributeDefinition>
          </RegistryAttributeDefinitions>
          <Frequency>86400</Frequency>
          <ClassId>$MPElement[Name="QND.OMS.Backup.Agent"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name='System!System.Entity']/DisplayName$</Name>
                <Value>Windows Azure Backup Agent ($Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$)</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="Integer">Values/Start</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="Integer">3</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </DataSource>
      </Discovery>
      <Discovery ID="QND.OMS.Backup.Policy.Discovery" Enabled="true" Target="QND.OMS.Backup.Agent" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="QND.OMS.Backup.Agent.Policy">
            <Property PropertyID="PolicyName" />
            <Property PropertyID="RetentionDays" />
          </DiscoveryClass>
          <DiscoveryRelationship TypeID="QND.OMS.BackupAgentHostsPolicy" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="QND.OMS.Backup.Policy.Discovery.DS">
          <TraceLevel>2</TraceLevel>
          <TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer>
          <ScriptTimeout>300</ScriptTimeout>
          <IntervalSeconds>86400</IntervalSeconds>
          <SyncTime />
        </DataSource>
      </Discovery>
    </Discoveries>
    <Monitors>
      <AggregateMonitor ID="QND.OMS.Backup.Container.ProtectedItemAvailability.AggMonitor" Accessibility="Public" Enabled="true" ParentMonitorID="Health!System.Health.AvailabilityState" Priority="Normal" Remotable="true" Target="QND.OMS.Backup.Container">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </AggregateMonitor>
      <UnitMonitor ID="QND.OMS.Backup.Vault.Connectivity.Monitor" Accessibility="Public" Enabled="true" Target="QND.OMS.Backup.Vault" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Backup.Connectivity.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Backup.Vault.Connectivity.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter2>$Data/Context/Property[@Name="Description"]$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Healthy" MonitorTypeStateID="Healthy" HealthState="Success" />
          <OperationalState ID="UnHealthy" MonitorTypeStateID="UnReachable" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>3611</IntervalSeconds>
          <SyncTime></SyncTime>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <TenantADName>$Target/Host/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Tenant$</TenantADName>
          <VaultId>$Target/Property[Type="QND.OMS.Backup.Base"]/Id$</VaultId>
          <AADUserName>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/Password$</AADPassword>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Backup.Policy.Age.Monitor" Accessibility="Internal" Enabled="true" Target="QND.OMS.Backup.Agent.Policy" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Backup.Policy.Age.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Backup.Policy.Age.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="BackupAgeHours"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name"LastBackupTime"]$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="TooOld" MonitorTypeStateID="TooOld" HealthState="Error" />
          <OperationalState ID="UpToDate" MonitorTypeStateID="UpToDate" HealthState="Success" />
        </OperationalStates>
        <Configuration>
          <TraceLevel>2</TraceLevel>
          <ScriptTimeout>300</ScriptTimeout>
          <IntervalSeconds>300</IntervalSeconds>
          <SyncTime></SyncTime>
          <ThresholdAgeHours>25</ThresholdAgeHours>
          <ThresholdSizeGB>20</ThresholdSizeGB>
          <PolicyName>$Target/Property[Type="QND.OMS.Backup.Agent.Policy"]/PolicyName$</PolicyName>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Backup.Size.Monitor" Accessibility="Internal" Enabled="false" Target="QND.OMS.Backup.Agent" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Backup.Size.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Backup.Size.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="MachineUsageMB"]$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="TooBig" MonitorTypeStateID="TooBig" HealthState="Warning" />
          <OperationalState ID="WithinLimits" MonitorTypeStateID="WithinLimits" HealthState="Success" />
        </OperationalStates>
        <Configuration>
          <TraceLevel>2</TraceLevel>
          <ScriptTimeout>300</ScriptTimeout>
          <IntervalSeconds>300</IntervalSeconds>
          <SyncTime></SyncTime>
          <ThresholdAgeHours>25</ThresholdAgeHours>
          <ThresholdSizeGB>20</ThresholdSizeGB>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Backup.Item.LastJobStatus.Monitor" Accessibility="Public" Enabled="true" Target="QND.OMS.Backup.ProtectedItem" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Backup.LastJobStatus.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Backup.Item.LastJobStatus.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="LastJobStatus"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name="LastJobDurationHours"]$</AlertParameter2>
            <AlertParameter3>$Data/Context/Property[@Name="LastRecoveryPointDate"]$</AlertParameter3>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Successful" MonitorTypeStateID="Completed" HealthState="Success" />
          <OperationalState ID="Failed" MonitorTypeStateID="Failed" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>21600</IntervalSeconds>
          <SyncTime></SyncTime>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <TenantADName>$Target/Host/Host/Host/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Tenant$</TenantADName>
          <VaultId>$Target/Host/Host/Property[Type="QND.OMS.Backup.Base"]/Id$</VaultId>
          <ItemId>$Target/Property[Type="QND.OMS.Backup.Base"]/Id$</ItemId>
          <AADUserName>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/Password$</AADPassword>
          <LastNJobs>-1</LastNJobs>
          <MaxFailures>0</MaxFailures>
          <FailureCondition>Failed</FailureCondition>
          <!--.net regex doesn't parse ^(?!Completed).*$ -->
          <MaxAgeHours>0</MaxAgeHours>
          <LookbackDays>15</LookbackDays>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Backup.Item.RecoveryPointAge.Monitor" Accessibility="Public" Enabled="true" Target="QND.OMS.Backup.ProtectedItem" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Backup.LastRecoveryPointAge.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Backup.Item.RecoveryPointAge.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="LastRecoveryPointAge"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name="LastRecoveryPointDate"]$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Successful" MonitorTypeStateID="UpToDate" HealthState="Success" />
          <OperationalState ID="Failed" MonitorTypeStateID="Obsolete" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>21600</IntervalSeconds>
          <SyncTime></SyncTime>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <TenantADName>$Target/Host/Host/Host/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Tenant$</TenantADName>
          <VaultId>$Target/Host/Host/Property[Type="QND.OMS.Backup.Base"]/Id$</VaultId>
          <ItemId>$Target/Property[Type="QND.OMS.Backup.Base"]/Id$</ItemId>
          <AADUserName>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/Password$</AADPassword>
          <LastNJobs>-1</LastNJobs>
          <MaxFailures>0</MaxFailures>
          <FailureCondition>Failed</FailureCondition>
          <MaxAgeHours>0</MaxAgeHours>
          <LookbackDays>15</LookbackDays>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="QND.OMS.Backup.Item.JobFailureRate.Monitor" Accessibility="Public" Enabled="false" Target="QND.OMS.Backup.ProtectedItem" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="QND.OMS.Backup.FailureRate.MT" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="QND.OMS.Backup.Item.JobFailureRate.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="JobsSelected"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name="Failures"]$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Successful" MonitorTypeStateID="OK" HealthState="Success" />
          <OperationalState ID="Failed" MonitorTypeStateID="TooMany" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>86400</IntervalSeconds>
          <SyncTime></SyncTime>
          <TimeoutSeconds>900</TimeoutSeconds>
          <TraceLevel>2</TraceLevel>
          <TenantADName>$Target/Host/Host/Host/Property[Type="OMS!QND.OMS.Azure.Subscription"]/Tenant$</TenantADName>
          <VaultId>$Target/Host/Host/Property[Type="QND.OMS.Backup.Base"]/Id$</VaultId>
          <ItemId>$Target/Property[Type="QND.OMS.Backup.Base"]/Id$</ItemId>
          <AADUserName>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/UserName$</AADUserName>
          <AADPassword>$RunAs[Name="OMS!QND.OMS.AAD.Account.SR"]/Password$</AADPassword>
          <LastNJobs>5</LastNJobs>
          <MaxFailures>1</MaxFailures>
          <FailureCondition>Failed</FailureCondition>
          <MaxAgeHours>0</MaxAgeHours>
          <LookbackDays>15</LookbackDays>
        </Configuration>
      </UnitMonitor>
      <DependencyMonitor ID="QND.OMS.Backup.VaultToContainerAvailability.DepMonitor" Accessibility="Public" Enabled="true" MemberMonitor="QND.OMS.Backup.Container.ProtectedItemAvailability.AggMonitor" ParentMonitorID="Health!System.Health.AvailabilityState" Priority="Normal" RelationshipType="QND.OMS.Backup.VaultContainsContainer" Remotable="true" Target="QND.OMS.Backup.Vault">
        <Category>AvailabilityHealth</Category>
        <Algorithm>Percentage</Algorithm>
        <AlgorithmParameter>30</AlgorithmParameter>
        <MemberInMaintenance>Success</MemberInMaintenance>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="QND.OMS.Backup.ContainerToItemLastJobStatus.DepMonitor" Accessibility="Public" Enabled="true" MemberMonitor="QND.OMS.Backup.Item.LastJobStatus.Monitor" ParentMonitorID="QND.OMS.Backup.Container.ProtectedItemAvailability.AggMonitor" Priority="Normal" RelationshipType="QND.OMS.Backup.ContainerContainsItem" Remotable="true" Target="QND.OMS.Backup.Container">
        <Category>AvailabilityHealth</Category>
        <Algorithm>Percentage</Algorithm>
        <AlgorithmParameter>30</AlgorithmParameter>
        <MemberInMaintenance>Success</MemberInMaintenance>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="QND.OMS.Backup.ContainerToItemLastRecoveryPointAge.DepMonitor" Accessibility="Public" Enabled="true" MemberMonitor="QND.OMS.Backup.Item.RecoveryPointAge.Monitor" ParentMonitorID="QND.OMS.Backup.Container.ProtectedItemAvailability.AggMonitor" Priority="Normal" RelationshipType="QND.OMS.Backup.ContainerContainsItem" Remotable="true" Target="QND.OMS.Backup.Container">
        <Category>AvailabilityHealth</Category>
        <Algorithm>Percentage</Algorithm>
        <AlgorithmParameter>30</AlgorithmParameter>
        <MemberInMaintenance>Success</MemberInMaintenance>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="QND.OMS.Backup.ContainerToItemJobFailureRate.DepMonitor" Accessibility="Public" Enabled="true" MemberMonitor="QND.OMS.Backup.Item.JobFailureRate.Monitor" ParentMonitorID="QND.OMS.Backup.Container.ProtectedItemAvailability.AggMonitor" Priority="Normal" RelationshipType="QND.OMS.Backup.ContainerContainsItem" Remotable="true" Target="QND.OMS.Backup.Container">
        <Category>AvailabilityHealth</Category>
        <Algorithm>Percentage</Algorithm>
        <AlgorithmParameter>30</AlgorithmParameter>
        <MemberInMaintenance>Success</MemberInMaintenance>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="QND.OMS.Backup.Agent.Depends.Policy.DM" Accessibility="Internal" Enabled="true" Target="QND.OMS.Backup.Agent" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="QND.OMS.BackupAgentHostsPolicy" MemberMonitor="QND.OMS.Backup.Policy.Age.Monitor">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
    </Monitors>
  </Monitoring>
  <Presentation>
    <Views>
      <View ID="QND.OMS.Backup.AgentState.View" Accessibility="Public" Enabled="true" Target="QND.OMS.Backup.Agent" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <InMaintenanceMode>false</InMaintenanceMode>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>State</Name>
            <Id>QND.OMS.Backup.Agent</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>InMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>Path</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Display Name</Name>
            <Id>System.Entity/DisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>QND Azure Backup Policy</Name>
            <Id>QND.OMS.Backup.Policy</Id>
          </ColumnInfo>
        </Presentation>
        <Target />
      </View>
      <View ID="QND.OMS.Backup.Alert.View" Accessibility="Public" Enabled="true" Target="QND.OMS.Backup.Agent" TypeID="SC!Microsoft.SystemCenter.AlertViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <ResolutionState>
            <StateRange Operator="LessThan">255</StateRange>
          </ResolutionState>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="22" Grouped="true" Sorted="false" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>Severity</Name>
            <Id>Severity</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="54" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending">
            <Name>Icon</Name>
            <Id>Icon</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>MonitoringObjectPath</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Source</Name>
            <Id>MonitoringObjectDisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="22" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>MonitoringObjectInMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="250" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Resolution State</Name>
            <Id>ResolutionState</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" SortIndex="-1" Width="150" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Created</Name>
            <Id>TimeRaised</Id>
          </ColumnInfo>
          <ColumnInfo Index="8" SortIndex="1" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Age</Name>
            <Id>Age</Id>
          </ColumnInfo>
          <ColumnInfo Index="9" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Type</Name>
            <Id>Category</Id>
          </ColumnInfo>
          <ColumnInfo Index="10" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Owner</Name>
            <Id>Owner</Id>
          </ColumnInfo>
          <ColumnInfo Index="11" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Priority</Name>
            <Id>Priority</Id>
          </ColumnInfo>
          <ColumnInfo Index="12" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Latency</Name>
            <Id>Latency</Id>
          </ColumnInfo>
          <ColumnInfo Index="13" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Description</Name>
            <Id>Description</Id>
          </ColumnInfo>
          <ColumnInfo Index="14" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Connector</Name>
            <Id>ConnectorId</Id>
          </ColumnInfo>
          <ColumnInfo Index="15" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Forwarding Status</Name>
            <Id>ConnectorStatus</Id>
          </ColumnInfo>
          <ColumnInfo Index="16" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Class</Name>
            <Id>Class</Id>
          </ColumnInfo>
          <ColumnInfo Index="17" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Time in State</Name>
            <Id>TimeInState</Id>
          </ColumnInfo>
          <ColumnInfo Index="18" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 1</Name>
            <Id>CustomField1</Id>
          </ColumnInfo>
          <ColumnInfo Index="19" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 2</Name>
            <Id>CustomField2</Id>
          </ColumnInfo>
          <ColumnInfo Index="20" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 3</Name>
            <Id>CustomField3</Id>
          </ColumnInfo>
          <ColumnInfo Index="21" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 4</Name>
            <Id>CustomField4</Id>
          </ColumnInfo>
          <ColumnInfo Index="22" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 5</Name>
            <Id>CustomField5</Id>
          </ColumnInfo>
          <ColumnInfo Index="23" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 6</Name>
            <Id>CustomField6</Id>
          </ColumnInfo>
          <ColumnInfo Index="24" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 7</Name>
            <Id>CustomField7</Id>
          </ColumnInfo>
          <ColumnInfo Index="25" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 8</Name>
            <Id>CustomField8</Id>
          </ColumnInfo>
          <ColumnInfo Index="26" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 9</Name>
            <Id>CustomField9</Id>
          </ColumnInfo>
          <ColumnInfo Index="27" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 10</Name>
            <Id>CustomField10</Id>
          </ColumnInfo>
          <ColumnInfo Index="28" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Resolved By</Name>
            <Id>ResolvedBy</Id>
          </ColumnInfo>
          <ColumnInfo Index="29" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Time Resolved</Name>
            <Id>TimeResolved</Id>
          </ColumnInfo>
          <ColumnInfo Index="30" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last State Change</Name>
            <Id>TimeResolutionStateLastModified</Id>
          </ColumnInfo>
          <ColumnInfo Index="31" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last Modified</Name>
            <Id>LastModified</Id>
          </ColumnInfo>
          <ColumnInfo Index="32" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last Modified By</Name>
            <Id>LastModifiedBy</Id>
          </ColumnInfo>
          <ColumnInfo Index="33" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Management Group</Name>
            <Id>ManagementGroup</Id>
          </ColumnInfo>
          <ColumnInfo Index="34" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Site</Name>
            <Id>SiteName</Id>
          </ColumnInfo>
          <ColumnInfo Index="35" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Repeat Count</Name>
            <Id>RepeatCount</Id>
          </ColumnInfo>
          <ColumnInfo Index="36" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Ticket ID</Name>
            <Id>TicketId</Id>
          </ColumnInfo>
        </Presentation>
        <Target />
      </View>
      <View ID="QND.OMS.Backup.VaultState.View" Accessibility="Public" Enabled="true" Target="QND.OMS.Backup.Vault" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <InMaintenanceMode>false</InMaintenanceMode>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>State</Name>
            <Id>QND.OMS.Backup.Vault</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>InMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>Path</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Display Name</Name>
            <Id>System.Entity/DisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Datacenter</Name>
            <Id>Location</Id>
          </ColumnInfo>
        </Presentation>
        <Target />
      </View>
      <View ID="QND.OMS.Backup.ContainerState.View" Accessibility="Public" Enabled="true" Target="QND.OMS.Backup.Container" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <InMaintenanceMode>false</InMaintenanceMode>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>State</Name>
            <Id>QND.OMS.Backup.Container</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>InMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>Path</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Display Name</Name>
            <Id>System.Entity/DisplayName</Id>
          </ColumnInfo>
        </Presentation>
        <Target />
      </View>
      <View ID="QND.OMS.Backup.ProtectedItemState.View" Accessibility="Public" Enabled="true" Target="QND.OMS.Backup.ProtectedItem" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <InMaintenanceMode>false</InMaintenanceMode>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>State</Name>
            <Id>QND.OMS.Backup.ProtectedItem</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>InMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>Path</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Display Name</Name>
            <Id>System.Entity/DisplayName</Id>
          </ColumnInfo>
        </Presentation>
        <Target />
      </View>
    </Views>
    <Folders>
      <Folder ID="QND.OMS.Backup.Folder" ParentFolder="OMS!QND.OMS.Folders" Accessibility="Public" />
    </Folders>
    <FolderItems>
      <FolderItem ID="QND.OMS.Backup.AgentState.FldrItem" ElementID="QND.OMS.Backup.AgentState.View" Folder="QND.OMS.Backup.Folder" />
      <FolderItem ID="QND.OMS.Backup.Alert.FldrItem" ElementID="QND.OMS.Backup.Alert.View" Folder="QND.OMS.Backup.Folder" />
      <FolderItem ID="QND.OMS.Backup.VaultState.FldrItem" ElementID="QND.OMS.Backup.VaultState.View" Folder="QND.OMS.Backup.Folder" />
      <FolderItem ID="QND.OMS.Backup.ContainerState.FldrItem" ElementID="QND.OMS.Backup.ContainerState.View" Folder="QND.OMS.Backup.Folder" />
      <FolderItem ID="QND.OMS.Backup.ProtectedItemState.FldrItem" ElementID="QND.OMS.Backup.ProtectedItemState.View" Folder="QND.OMS.Backup.Folder" />
    </FolderItems>
    <StringResources>
      <StringResource ID="QND.OMS.Backup.Vault.Connectivity.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Backup.Policy.Age.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Backup.Size.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Backup.Item.LastJobStatus.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Backup.Item.RecoveryPointAge.Monitor.AlertMessage" />
      <StringResource ID="QND.OMS.Backup.Item.JobFailureRate.Monitor.AlertMessage" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="QND.OMS.Cheat.DPMServerDiscovery">
          <Name>QND OMS - Azure Backup Server Discovery</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Vault.Connectivity.Monitor.AlertMessage">
          <Name>QND - Azure Automation Account Unreachable</Name>
          <Description>The account is unreachable. Error:{0}</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Vault.Connectivity.Monitor">
          <Name>Vault Connectivity</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.VaultToContainerAvailability.DepMonitor">
          <Name>Protected Items</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.ContainerToItemLastJobStatus.DepMonitor">
          <Name>Last Job Status</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.ContainerToItemLastRecoveryPointAge.DepMonitor">
          <Name>Last Recovery Point Age</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.ContainerToItemJobFailureRate.DepMonitor">
          <Name>Jobs Failure rate</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Container.ProtectedItemAvailability.AggMonitor">
          <Name>Protected Items</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Base">
          <Name>QND - OMS Backup Base class</Name>
          <Description>Base class for OMS Backup artifacts</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Base" SubElementID="Id">
          <Name>Id</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Base" SubElementID="Type">
          <Name>Type</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Vault">
          <Name>QND - OMS Backup Vault</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Vault" SubElementID="Name">
          <Name>Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Vault" SubElementID="Location">
          <Name>Azure Datacenter</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Vault" SubElementID="ResourceGroup">
          <Name>Resource Group</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Vault" SubElementID="Subscription">
          <Name>Azure Subscription</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Vault" SubElementID="Sku">
          <Name>Sku</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Container">
          <Name>QND - OMS Backup Container</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Container" SubElementID="Name">
          <Name>Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Container" SubElementID="ContainerType">
          <Name>Container Type</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.ProtectedItem">
          <Name>QND - OMS Backup Item</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.ProtectedItem" SubElementID="Name">
          <Name>Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.ProtectedItem" SubElementID="ItemType">
          <Name>Item Type</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.ProtectedItem" SubElementID="PolicyName">
          <Name>Protection Policy Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.SubscriptionContainsVault">
          <Name>QND - Azure Subscription Contains Backup Vault</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.VaultContainsContainer">
          <Name>QND - OMS Backup Vault contains Backup Container</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.ContainerContainsItem">
          <Name>QND - OMS Backup Container contains Backup Protected Item</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Vault.Discovery">
          <Name>QND - OMS Backup Vault global discovery</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup">
          <Name>QND - Azure OMS Backup</Name>
          <Description>Community based Azure OMS Backup monitoring</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Policy.Age.Monitor">
          <Name>Backup Age</Name>
          <Description>Detects the age of the latest backup set on the Azure Vault</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Policy.Age.Monitor.AlertMessage">
          <Name>Windows Azure Backup Age</Name>
          <Description>Backup data is too old. Current age is {0} hours. Last backup date is {1}</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Policy.Age.Monitor" SubElementID="TooOld">
          <Name>TooOld</Name>
          <Description>TooOld</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Policy.Age.Monitor" SubElementID="UpToDate">
          <Name>UpToDate</Name>
          <Description>UpToDate</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Size.Monitor">
          <Name>Backup Size</Name>
          <Description>Detects the allocated size in the Windows Azure Backup Vault</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Size.Monitor.AlertMessage">
          <Name>Windows Azure Backup Size</Name>
          <Description>Backup data is too big. Current size is {0} MB.</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Size.Monitor" SubElementID="TooBig">
          <Name>Too Big</Name>
          <Description>Too Big</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Size.Monitor" SubElementID="WithinLimits">
          <Name>WithinLimits</Name>
          <Description>Within Limits</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Folder">
          <Name>Azure Backup</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.AgentState.View">
          <Name>Backup Agent State</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Alert.View">
          <Name>Backup Alerts</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.VaultState.View">
          <Name>Backup Vaults State</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.ContainerState.View">
          <Name>Backup Containers State</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.ProtectedItemState.View">
          <Name>Protected Items State</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Agent">
          <Name>QND - OMS Azure Backup Monitor</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Agent.Discovery">
          <Name>Discovery For OMS Azure Backup Agent</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Agent.Policy">
          <Name>QND - OMS Azure Backup Policy</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Agent.Policy" SubElementID="PolicyName">
          <Name>PolicyName</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Agent.Policy" SubElementID="RetentionDays">
          <Name>RetentionDays</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Agent.Depends.Policy.DM">
          <Name>Policy Status</Name>
          <Description>Description for new dependency monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Item.LastJobStatus.Monitor">
          <Name>Last Backup Job Result</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Item.LastJobStatus.Monitor.AlertMessage">
          <Name>QND - OMS Backup Job failed</Name>
          <Description>The last backup job failed {0}. The jub run time has been {1} hours. The most recent recovery point is {2}.
              More details in the alert context
          </Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Item.RecoveryPointAge.Monitor">
          <Name>Recovery Point Age</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Item.RecoveryPointAge.Monitor.AlertMessage">
          <Name>QND - OMS recovery point is too old</Name>
          <Description>The most receent recovery point is too old. The recovery point date is {1} the age in hours is {0}.
              More details in the alert context
          </Description>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Item.JobFailureRate.Monitor">
          <Name>Jobs failure rate</Name>
        </DisplayString>
        <DisplayString ElementID="QND.OMS.Backup.Item.JobFailureRate.Monitor.AlertMessage">
          <Name>QND - OMS the jobs failure rate is too high</Name>
          <Description>
            The error rate is {1} jobs on {0} runs.
            More details in the alert context
          </Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles>
        <KnowledgeArticle ElementID="QND.OMS.Backup.Size.Monitor">
          <MamlContent>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Summary</title>
              <para>This monitor is disabled by default. Once enabled it checks for the dataset size on Windows Azure Backup Vault and raises an alert if it's over the configure threshold</para>
              <para>The backup vault size it's not an isse per se, alerting is useful to proactively keeping under control the billing for the Vault</para>
              <para>
                For more info see <navigationLink><linkText>GitHub Wiki</linkText><uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki/Backup-Size-Monitor" /></navigationLink></para>
            </section>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Causes</title>
              <para>The Windows Azure Backup Agent policy is too wide in scopre, or the amount of data to be backed up has grown</para>
            </section>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Solution</title>
              <para>Check the policy and set it appropriately</para>
            </section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="QND.OMS.Backup.Policy.Age.Monitor">
          <MamlContent>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Summary</title>
              <para>This monitor checks for the age of the latest backup set and raises an alert if it is older then the configured threshold.</para>
              <para>A dated backup set indcates some sort of issue on the backup process either on the protectd machine or on Azure Backup Vault.</para>
              <para>
                For more info see <navigationLink><linkText>GitHub Wiki</linkText><uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki/Backup-Policy-Age-Monitor" /></navigationLink></para>
            </section>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Causes</title>
              <para>It is highly probable an issue with the agent you should connect to the affected machine and check for:</para>
              <list>
                <listItem>
                  <para>Backup Certificate correctness. Is it expired?</para>
                </listItem>
                <listItem>
                  <para>Encryption key correctness. Is the encryption key still set? It can be check via powershell: Import-Module MSOnlineBackup; Get-OBMachineSetting</para>
                </listItem>
              </list>
            </section>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Solution</title>
              <para>Check the agent status</para>
            </section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="QND.OMS.Backup.Vault.Connectivity.Monitor">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>The monitor check for ARM API reachability for a specific backup vault. It executes a simple query using the defined credentials for the tenant the workspace is in. Possibile states</maml:para>
              <maml:list>
                <maml:listItem>
                  <maml:para>Healthy: the connection is available.</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>Error: resource pool servers cannot reach the ARM api for the backup vault. Monitor is not possible.</maml:para>
                </maml:listItem>
              </maml:list>
              <maml:para>For more info see <maml:navigationLink><maml:linkText>GitHub Wiki</maml:linkText><maml:uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki/Backup-Connectivity-Monitor" /></maml:navigationLink></maml:para>
            </maml:section>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Configuration</maml:title>
              <maml:para>The following options can be configured on this monitor:</maml:para>
              <maml:table>
                <maml:row>
                  <maml:entry>
                    <maml:para>Option</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>Definition</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>Default</maml:para>
                  </maml:entry>
                </maml:row>
                <maml:row>
                  <maml:entry>
                    <maml:para>IntervalSeconds</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>Amount of time in seconds between checks of the connectivity status</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>3611 seconds</maml:para>
                  </maml:entry>
                </maml:row>
                <maml:row>
                  <maml:entry>
                    <maml:para>Sync Time</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>Optional time wihtin the hour to sync the check exectuion to</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para></maml:para>
                  </maml:entry>
                </maml:row>
                <maml:row>
                  <maml:entry>
                    <maml:para>TimeoutSeconds</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>Amount of time in seconds to wait for script execution and hance for API Search response</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>30 seconds</maml:para>
                  </maml:entry>
                </maml:row>
                <maml:row>
                  <maml:entry>
                    <maml:para>TraceLevel</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>Debugging level (0-5) anything above 2 will log clear text password in eventlog</maml:para>
                  </maml:entry>
                  <maml:entry>
                    <maml:para>2</maml:para>
                  </maml:entry>
                </maml:row>
              </maml:table>
            </maml:section>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Causes</maml:title>
              <maml:para>There three known causes of errors</maml:para>
              <maml:list>
                <maml:listItem>
                  <maml:para>OMS service has issues</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>Your proxy /connectivity infrastructure to the cloud has issue</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>The runas account used to connect to the workspace is no longer valid / has an expired password</maml:para>
                </maml:listItem>
              </maml:list>
              <maml:para>The alert context tries to give a specific cause for any issue</maml:para>
            </maml:section>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Resolutions</maml:title>
              <maml:para>Check the three known causes and fix any issue</maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="QND.OMS.Backup.Item.LastJobStatus.Monitor">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>The monitor checks the execution status of the last backup job for a protected item. A failure means the item has not been protcted. 
              Possibile states</maml:para>
              <maml:list>
                <maml:listItem>
                  <maml:para>Successful / Healthy: the job completed successfully.</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>Failed / error: the job failed</maml:para>
                </maml:listItem>
              </maml:list>
              <maml:para>
                For more info see <maml:navigationLink><maml:linkText>GitHub Wiki</maml:linkText><maml:uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki/Backup-Last-Job-Status-Monitor" /></maml:navigationLink></maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="QND.OMS.Backup.Item.JobFailureRate.Monitor">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>
                The monitor, disabled by default, checks for the ratio of failed backup jobs over a given number of runs and raises an alert if the ratio is over a threshold set.
                Possibile states
              </maml:para>
              <maml:list>
                <maml:listItem>
                  <maml:para>Successful / Healthy: the error rate is within the theshold.</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>Failed / error: the error rate is over the threshold</maml:para>
                </maml:listItem>
              </maml:list>
              <maml:para>
                For more info see <maml:navigationLink><maml:linkText>GitHub Wiki</maml:linkText><maml:uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki/Backup-Job-Failure-Rate-Monitor" /></maml:navigationLink></maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="QND.OMS.Backup.Item.RecoveryPointAge.Monitor">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>
                The monitor checks the age of the last recovery point for a specific item. It raises an alert if it's older than a threshold set. This monitor can be adaptive to the protection policy for the item.
                Possibile states
              </maml:para>
              <maml:list>
                <maml:listItem>
                  <maml:para>Successfrul / Healthy: the last recovery point is within the theshold.</maml:para>
                </maml:listItem>
                <maml:listItem>
                  <maml:para>Failed / error: the òast reocvery poijhnt is missing or too old</maml:para>
                </maml:listItem>
              </maml:list>
              <maml:para>
                For more info see <maml:navigationLink><maml:linkText>GitHub Wiki</maml:linkText><maml:uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki/Backup-Recoverypoint-Age-Monitor" /></maml:navigationLink></maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="QND.OMS.Backup">
          <MamlContent>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Summary</title>
              <para>This management pack monitors the OMS Azure Backup service.</para>
              <para>The management pack checks for:</para>
              <list>
                <listItem>
                  <para>Latest backup set age - if the backup set is too old (by default 25 hours) it raises an alert</para>
                </listItem>
                <listItem>
                  <para>Backup set size - this monitor, disabled by default, checks if the allocated size if over a given threshold</para>
                </listItem>
              </list>
              <para>Every monitor check for the value returned in the first row in the specified column number. Column numbering starts from 1.</para>
            </section>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Configuration</title>
              <para>The Size monitor needs to be enabled and the threhsold configured.</para>
              <para>For more and up to date information on this MP and its configuration see <navigationLink><linkText>GitHub Wiki Home page for the project</linkText><uri href="https://github.com/QuaeNocentDocent/OMS-ManagementPack/wiki" /></navigationLink></para>
            </section>
          </MamlContent>
        </KnowledgeArticle>
      </KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>